<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpVk</name>
    </assembly>
    <members>
        <member name="T:SharpVk.AccessFlags">
            <summary>
            Bitmask specifying memory access types that will participate in a
            memory dependency.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.None">
            <summary>
            No access type specified.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.IndirectCommandRead">
            <summary>
            Read access to an indirect command structure read as part of an
            indirect drawing or dispatch command.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.IndexRead">
            <summary>
            Read access to an index buffer as part of an indexed drawing
            command, bound by CommandBuffer.BindIndexBuffer.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.VertexAttributeRead">
            <summary>
            Read access to a vertex buffer as part of a drawing command, bound
            by CommandBuffer.BindVertexBuffers.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.UniformRead">
            <summary>
            Read access to a uniform buffer.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.InputAttachmentRead">
            <summary>
            Read access to an input attachment within a renderpass during
            fragment shading.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.ShaderRead">
            <summary>
            Read access to a storage buffer, uniform texel buffer, storage
            texel buffer, sampled image, or storage image.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.ShaderWrite">
            <summary>
            Write access to a storage buffer, storage texel buffer, or storage
            image.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.ColorAttachmentRead">
            <summary>
            Read access to a color attachment, such as via blending, logic
            operations, or via certain subpass load operations.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.ColorAttachmentWrite">
            <summary>
            Write access to a color or resolve attachment during a render pass
            or via certain subpass load and store operations.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.DepthStencilAttachmentRead">
            <summary>
            Read access to a depth/stencil attachment, via depth or stencil
            operations or via certain subpass load operations.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.DepthStencilAttachmentWrite">
            <summary>
            Write access to a depth/stencil attachment, via depth or stencil
            operations or via certain subpass load and store operations.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.TransferRead">
            <summary>
            Read access to an image or buffer in a copy operation.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.TransferWrite">
            <summary>
            Write access to an image or buffer in a clear or copy operation.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.HostRead">
            <summary>
            Read access by a host operation. Accesses of this type are not
            performed through a resource, but directly on memory.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.HostWrite">
            <summary>
            Write access by a host operation. Accesses of this type are not
            performed through a resource, but directly on memory.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.MemoryRead">
            <summary>
            Read access via non-specific entities. These entities include the
            Vulkan device and host, but may also include entities external to
            the Vulkan device or otherwise not part of the core Vulkan
            pipeline. When included in a destination access mask, makes all
            available writes visible to all future read accesses on entities
            known to the Vulkan device.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.MemoryWrite">
            <summary>
            Write access via non-specific entities. These entities include the
            Vulkan device and host, but may also include entities external to
            the Vulkan device or otherwise not part of the core Vulkan
            pipeline. When included in a source access mask, all writes that
            are performed by entities known to the Vulkan device are made
            available. When included in a destination access mask, makes all
            available writes visible to all future write accesses on entities
            known to the Vulkan device.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.CommandProcessReadBitNvx">
            <summary>
            Reads from Buffer inputs to CommandBuffer.ProcessCommands.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.CommandProcessWriteBitNvx">
            <summary>
            Writes to the target command buffer in
            CommandBuffer.ProcessCommands.
            </summary>
        </member>
        <member name="F:SharpVk.AccessFlags.ColorAttachmentReadNoncoherentBitExt">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.AllocationCallbacks">
            <summary>
            Structure containing callback function pointers for memory allocation.
            </summary>
        </member>
        <member name="P:SharpVk.AllocationCallbacks.UserData">
            <summary>
            A value to be interpreted by the implementation of the callbacks.
            When any of the callbacks in AllocationCallbacks are called, the
            Vulkan implementation will pass this value as the first parameter
            to the callback. This value can vary each time an allocator is
            passed into a command, even when the same object takes an allocator
            in multiple commands.
            </summary>
        </member>
        <member name="P:SharpVk.AllocationCallbacks.Allocation">
            <summary>
            An application-defined memory allocation function of type
            AllocationFunction.
            </summary>
        </member>
        <member name="P:SharpVk.AllocationCallbacks.Reallocation">
            <summary>
            An application-defined memory reallocation function of type
            ReallocationFunction.
            </summary>
        </member>
        <member name="P:SharpVk.AllocationCallbacks.Free">
            <summary>
            An application-defined memory free function of type FreeFunction.
            </summary>
        </member>
        <member name="P:SharpVk.AllocationCallbacks.InternalAllocation">
            <summary>
            An application-defined function that is called by the
            implementation when the implementation makes internal allocations,
            and it is of type InternalAllocationNotification.
            </summary>
        </member>
        <member name="P:SharpVk.AllocationCallbacks.InternalFree">
            <summary>
            An application-defined function that is called by the
            implementation when the implementation frees internal allocations,
            and it is of type InternalFreeNotification.
            </summary>
        </member>
        <member name="M:SharpVk.AllocationCallbacks.MarshalTo(SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.AllocationFunctionDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Amd.CommandBufferExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Amd.CommandBufferExtensions.DrawIndirectCount(SharpVk.CommandBuffer,SharpVk.Buffer,SharpVk.DeviceSize,SharpVk.Buffer,SharpVk.DeviceSize,System.UInt32,System.UInt32)">
            <summary>
            Perform an indirect draw with the draw count sourced from a buffer.
            </summary>
            <param name="extendedHandle">
            The CommandBuffer handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Amd.CommandBufferExtensions.DrawIndexedIndirectCount(SharpVk.CommandBuffer,SharpVk.Buffer,SharpVk.DeviceSize,SharpVk.Buffer,SharpVk.DeviceSize,System.UInt32,System.UInt32)">
            <summary>
            Perform an indexed indirect draw with the draw count sourced from a
            buffer.
            </summary>
            <param name="extendedHandle">
            The CommandBuffer handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.Amd.PipelineRasterizationStateRasterizationOrder">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Amd.PipelineRasterizationStateRasterizationOrder.RasterizationOrder">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Amd.PipelineRasterizationStateRasterizationOrder.MarshalTo(SharpVk.Interop.Amd.PipelineRasterizationStateRasterizationOrder*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Amd.PipelineRasterizationStateRasterizationOrder.MarshalFrom(SharpVk.Interop.Amd.PipelineRasterizationStateRasterizationOrder*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Amd.RasterizationOrder">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Amd.RasterizationOrder.Strict">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Amd.RasterizationOrder.Relaxed">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Amd.TextureLODGatherFormatProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Amd.TextureLODGatherFormatProperties.SupportsTextureGatherLODBias">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Amd.TextureLODGatherFormatProperties.MarshalFrom(SharpVk.Interop.Amd.TextureLODGatherFormatProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ApplicationInfo">
            <summary>
            Structure specifying application info.
            </summary>
        </member>
        <member name="P:SharpVk.ApplicationInfo.ApplicationName">
            <summary>
            A string containing the name of the application.
            </summary>
        </member>
        <member name="P:SharpVk.ApplicationInfo.ApplicationVersion">
            <summary>
            The developer-supplied version number of the application.
            </summary>
        </member>
        <member name="P:SharpVk.ApplicationInfo.EngineName">
            <summary>
            Astring containing the name of the engine (if any) used to create
            the application.
            </summary>
        </member>
        <member name="P:SharpVk.ApplicationInfo.EngineVersion">
            <summary>
            The developer-supplied version number of the engine used to create
            the application.
            </summary>
        </member>
        <member name="P:SharpVk.ApplicationInfo.ApiVersion">
            <summary>
            The version of the Vulkan API against which the application expects
            to run. If apiVersion is 0.0.0 the implementation must ignore it,
            otherwise if the implementation does not support the requested
            apiVersion it must throw IncompatibleDriverException. The patch
            version number specified in apiVersion is ignored when creating an
            instance object. Only the major and minor versions of the instance
            must match those requested in apiVersion.
            </summary>
        </member>
        <member name="M:SharpVk.ApplicationInfo.MarshalTo(SharpVk.Interop.ApplicationInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ArrayProxy`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:SharpVk.ArrayProxy`1.Contents">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.ArrayProxy`1.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:SharpVk.ArrayProxy`1.Length">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpVk.ArrayProxy`1.GetSingleValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpVk.ArrayProxy`1.GetArrayValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:SharpVk.ArrayProxy`1.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.ArrayProxy`1.op_Implicit(`0[])~SharpVk.ArrayProxy{`0}">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SharpVk.ArrayProxy`1.op_Implicit(System.ArraySegment{`0})~SharpVk.ArrayProxy{`0}">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SharpVk.ArrayProxy`1.op_Implicit(`0)~SharpVk.ArrayProxy{`0}">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:SharpVk.ProxyContents">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ProxyContents.Null">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ProxyContents.Single">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ProxyContents.Array">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ArrayProxyExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.ArrayProxyExtensions.IsNull``1(SharpVk.ArrayProxy{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="proxy"></param>
            <returns></returns>
        </member>
        <member name="M:SharpVk.ArrayProxyExtensions.IsNull``1(System.Nullable{SharpVk.ArrayProxy{``0}})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="proxy"></param>
            <returns></returns>
        </member>
        <member name="T:SharpVk.AttachmentDescription">
            <summary>
            Structure specifying an attachment description.
            </summary>
        </member>
        <member name="M:SharpVk.AttachmentDescription.#ctor(SharpVk.AttachmentDescriptionFlags,SharpVk.Format,SharpVk.SampleCountFlags,SharpVk.AttachmentLoadOp,SharpVk.AttachmentStoreOp,SharpVk.AttachmentLoadOp,SharpVk.AttachmentStoreOp,SharpVk.ImageLayout,SharpVk.ImageLayout)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentDescription.Flags">
            <summary>
            A bitmask describing additional properties of the attachment.
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentDescription.Format">
            <summary>
            A Format value specifying the format of the image that will be used
            for the attachment.
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentDescription.Samples">
            <summary>
            The number of samples of the image as defined in SampleCountFlags.
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentDescription.LoadOp">
            <summary>
            An AttachmentLoadOp value specifying how the contents of color and
            depth components of the attachment are treated at the beginning of
            the subpass where it is first used.
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentDescription.StoreOp">
            <summary>
            An AttachmentStoreOp value specifying how the contents of color and
            depth components of the attachment are treated at the end of the
            subpass where it is last used.
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentDescription.StencilLoadOp">
            <summary>
            An AttachmentLoadOp value specifying how the contents of stencil
            components of the attachment are treated at the beginning of the
            subpass where it is first used.
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentDescription.StencilStoreOp">
            <summary>
            An AttachmentStoreOp value specifying how the contents of stencil
            components of the attachment are treated at the end of the last
            subpass where it is used.
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentDescription.InitialLayout">
            <summary>
            The layout the attachment image subresource will be in when a
            render pass instance begins.
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentDescription.FinalLayout">
            <summary>
            The layout the attachment image subresource will be transitioned to
            when a render pass instance ends.
            </summary>
        </member>
        <member name="T:SharpVk.AttachmentDescriptionFlags">
            <summary>
            Bitmask specifying additional properties of an attachment.
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentDescriptionFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentDescriptionFlags.MayAlias">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.AttachmentLoadOp">
            <summary>
            Specify how contents of an attachment are treated at the beginning of a
            subpass.
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentLoadOp.Load">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentLoadOp.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentLoadOp.DontCare">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.AttachmentReference">
            <summary>
            Structure specifying an attachment reference.
            </summary>
        </member>
        <member name="M:SharpVk.AttachmentReference.#ctor(System.UInt32,SharpVk.ImageLayout)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentReference.Attachment">
            <summary>
            The index of the attachment of the render pass, and corresponds to
            the index of the corresponding element in the attachments array of
            Device.CreateRenderPass. If any color or depth/stencil attachments
            are Attachment.Unused, then no writes occur for those attachments.
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentReference.Layout">
            <summary>
            An ImageLayout value specifying the layout the attachment uses
            during the subpass.
            </summary>
        </member>
        <member name="T:SharpVk.AttachmentStoreOp">
            <summary>
            Specify how contents of an attachment are treated at the end of a
            subpass.
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentStoreOp.Store">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.AttachmentStoreOp.DontCare">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.BindSparseInfo">
            <summary>
            Structure specifying a sparse binding operation.
            </summary>
        </member>
        <member name="P:SharpVk.BindSparseInfo.WaitSemaphores">
            <summary>
            An array of semaphores upon which to wait on before the sparse
            binding operations for this batch begin execution. If semaphores to
            wait on are provided, they define a semaphore wait operation.
            </summary>
        </member>
        <member name="P:SharpVk.BindSparseInfo.BufferBinds">
            <summary>
            An array of SparseBufferMemoryBindInfo structures.
            </summary>
        </member>
        <member name="P:SharpVk.BindSparseInfo.ImageOpaqueBinds">
            <summary>
            An array of SparseImageOpaqueMemoryBindInfo structures, indicating
            opaque sparse image bindings to perform.
            </summary>
        </member>
        <member name="P:SharpVk.BindSparseInfo.ImageBinds">
            <summary>
            An array of SparseImageMemoryBindInfo structures, indicating sparse
            image bindings to perform.
            </summary>
        </member>
        <member name="P:SharpVk.BindSparseInfo.SignalSemaphores">
            <summary>
            An array of semaphores which will be signaled when the sparse
            binding operations for this batch have completed execution. If
            semaphores to be signaled are provided, they define a semaphore
            signal operation.
            </summary>
        </member>
        <member name="M:SharpVk.BindSparseInfo.MarshalTo(SharpVk.Interop.BindSparseInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.BlendFactor">
            <summary>
            Framebuffer blending factors.
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.Zero">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.One">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.SourceColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.OneMinusSourceColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.DestinationColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.OneMinusDestinationColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.SourceAlpha">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.OneMinusSourceAlpha">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.DestinationAlpha">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.OneMinusDestinationAlpha">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.ConstantColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.OneMinusConstantColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.ConstantAlpha">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.OneMinusConstantAlpha">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.SourceAlphaSaturate">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.Src1Color">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.OneMinusSrc1Color">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.Src1Alpha">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendFactor.OneMinusSrc1Alpha">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.BlendOp">
            <summary>
            Framebuffer blending operations.
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.Add">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.Subtract">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.ReverseSubtract">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.Min">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.Max">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.ZeroExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.SourceExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.DestinationExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.SourceOverExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.DestinationOverExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.SourceInExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.DestinationInExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.SourceOutExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.DestinationOutExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.SourceAtopExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.DestinationAtopExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.XorExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.MultiplyExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.ScreenExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.OverlayExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.DarkenExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.LightenExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.ColordodgeExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.ColorburnExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.HardlightExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.SoftlightExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.DifferenceExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.ExclusionExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.InvertExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.InvertRgbExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.LineardodgeExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.LinearburnExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.VividlightExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.LinearlightExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.PinlightExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.HardmixExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.HslHueExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.HslSaturationExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.HslColorExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.HslLuminosityExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.PlusExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.PlusClampedExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.PlusClampedAlphaExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.PlusDarkerExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.MinusExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.MinusClampedExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.ContrastExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.InvertOvgExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.RedExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.GreenExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BlendOp.BlueExt">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Bool32">
            <summary>
            -
            </summary>
        </member>
        <member name="M:SharpVk.Bool32.#ctor(System.Boolean)">
            <summary>
            -
            </summary>
        </member>
        <member name="M:SharpVk.Bool32.op_Implicit(System.Boolean)~SharpVk.Bool32">
            <summary>
            -
            </summary>
        </member>
        <member name="M:SharpVk.Bool32.op_Implicit(SharpVk.Bool32)~System.Boolean">
            <summary>
            -
            </summary>
        </member>
        <member name="M:SharpVk.Bool32.ToString">
            <summary>
            -
            </summary>
        </member>
        <member name="T:SharpVk.BorderColor">
            <summary>
            Specify border color used for texture lookups.
            </summary>
        </member>
        <member name="F:SharpVk.BorderColor.FloatTransparentBlack">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BorderColor.IntTransparentBlack">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BorderColor.FloatOpaqueBlack">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BorderColor.IntOpaqueBlack">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BorderColor.FloatOpaqueWhite">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BorderColor.IntOpaqueWhite">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Buffer">
            <summary>
            Buffers represent linear arrays of data which are used for various
            purposes by binding them to a graphics or compute pipeline via
            descriptor sets or via certain commands, or by directly specifying them
            as parameters to certain commands.
            </summary>
        </member>
        <member name="P:SharpVk.Buffer.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Buffer.GetMemoryRequirements">
            <summary>
            Returns the memory requirements for specified Vulkan object.
            </summary>
        </member>
        <member name="M:SharpVk.Buffer.BindMemory(SharpVk.DeviceMemory,SharpVk.DeviceSize)">
            <summary>
            Bind device memory to a buffer object.
            </summary>
        </member>
        <member name="M:SharpVk.Buffer.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a buffer object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.BufferCopy">
            <summary>
            Structure specifying a buffer copy operation.
            </summary>
        </member>
        <member name="M:SharpVk.BufferCopy.#ctor(SharpVk.DeviceSize,SharpVk.DeviceSize,SharpVk.DeviceSize)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BufferCopy.SourceOffset">
            <summary>
            The starting offset in bytes from the start of source buffer.
            </summary>
        </member>
        <member name="F:SharpVk.BufferCopy.DestinationOffset">
            <summary>
            The starting offset in bytes from the start of the destination
            buffer.
            </summary>
        </member>
        <member name="F:SharpVk.BufferCopy.Size">
            <summary>
            The number of bytes to copy.
            </summary>
        </member>
        <member name="T:SharpVk.BufferCreateFlags">
            <summary>
            Bitmask specifying additional parameters of a buffer.
            </summary>
        </member>
        <member name="F:SharpVk.BufferCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BufferCreateFlags.SparseBinding">
            <summary>
            Indicates that the buffer will be backed using sparse memory
            binding.
            </summary>
        </member>
        <member name="F:SharpVk.BufferCreateFlags.SparseResidency">
            <summary>
            Indicates that the buffer can be partially backed using sparse
            memory binding. Buffers created with this flag must also be created
            with the CreateSparseBinding flag.
            </summary>
        </member>
        <member name="F:SharpVk.BufferCreateFlags.SparseAliased">
            <summary>
            Indicates that the buffer will be backed using sparse memory
            binding with memory ranges that might also simultaneously be
            backing another buffer (or another portion of the same buffer).
            Buffers created with this flag must also be created with the
            CreateSparseBinding flag.
            </summary>
        </member>
        <member name="T:SharpVk.BufferCreateInfo">
            <summary>
            Structure specifying the parameters of a newly created buffer object.
            </summary>
        </member>
        <member name="P:SharpVk.BufferCreateInfo.Flags">
            <summary>
            A bitmask describing additional parameters of the buffer.
            </summary>
        </member>
        <member name="P:SharpVk.BufferCreateInfo.Size">
            <summary>
            The size in bytes of the buffer to be created.
            </summary>
        </member>
        <member name="P:SharpVk.BufferCreateInfo.Usage">
            <summary>
            A bitmask describing the allowed usages of the buffer.
            </summary>
        </member>
        <member name="P:SharpVk.BufferCreateInfo.SharingMode">
            <summary>
            The sharing mode of the buffer when it will be accessed by multiple
            queue families.
            </summary>
        </member>
        <member name="P:SharpVk.BufferCreateInfo.QueueFamilyIndices">
            <summary>
            A list of queue families that will access this buffer (ignored if
            sharingMode is not Concurrent).
            </summary>
        </member>
        <member name="M:SharpVk.BufferCreateInfo.MarshalTo(SharpVk.Interop.BufferCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.BufferImageCopy">
            <summary>
            Structure specifying a buffer image copy operation.
            </summary>
        </member>
        <member name="M:SharpVk.BufferImageCopy.#ctor(SharpVk.DeviceSize,System.UInt32,System.UInt32,SharpVk.ImageSubresourceLayers,SharpVk.Offset3D,SharpVk.Extent3D)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BufferImageCopy.BufferOffset">
            <summary>
            The offset in bytes from the start of the buffer object where the
            image data is copied from or to.
            </summary>
        </member>
        <member name="F:SharpVk.BufferImageCopy.BufferRowLength">
            <summary>
            bufferRowLength and bufferImageHeight specify the data in buffer
            memory as a subregion of a larger two- or three-dimensional image,
            and control the addressing calculations of data in buffer memory.
            If either of these values is zero, that aspect of the buffer memory
            is considered to be tightly packed according to the imageExtent.
            </summary>
        </member>
        <member name="F:SharpVk.BufferImageCopy.BufferImageHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BufferImageCopy.ImageSubresource">
            <summary>
            A ImageSubresourceLayers used to specify the specific image
            subresources of the image used for the source or destination image
            data.
            </summary>
        </member>
        <member name="F:SharpVk.BufferImageCopy.ImageOffset">
            <summary>
            imageOffset selects the initial x, y, z offsets in texels of the
            sub-region of the source or destination image data.
            </summary>
        </member>
        <member name="F:SharpVk.BufferImageCopy.ImageExtent">
            <summary>
            The size in texels of the image to copy in width, height and depth.
            </summary>
        </member>
        <member name="T:SharpVk.BufferMemoryBarrier">
            <summary>
            Structure specifying a buffer memory barrier.
            </summary>
        </member>
        <member name="P:SharpVk.BufferMemoryBarrier.SourceAccessMask">
            <summary>
            srcAccessMask defines a source access mask.
            </summary>
        </member>
        <member name="P:SharpVk.BufferMemoryBarrier.DestinationAccessMask">
            <summary>
            dstAccessMask defines a destination access mask.
            </summary>
        </member>
        <member name="P:SharpVk.BufferMemoryBarrier.SourceQueueFamilyIndex">
            <summary>
            The source queue family for a queue family ownership transfer.
            </summary>
        </member>
        <member name="P:SharpVk.BufferMemoryBarrier.DestinationQueueFamilyIndex">
            <summary>
            The destination queue family for a queue family ownership transfer.
            </summary>
        </member>
        <member name="P:SharpVk.BufferMemoryBarrier.Buffer">
            <summary>
            A handle to the buffer whose backing memory is affected by the
            barrier.
            </summary>
        </member>
        <member name="P:SharpVk.BufferMemoryBarrier.Offset">
            <summary>
            An offset in bytes into the backing memory for buffer; this is
            relative to the base offset as bound to the buffer (see
            flink:vkBindBufferMemory).
            </summary>
        </member>
        <member name="P:SharpVk.BufferMemoryBarrier.Size">
            <summary>
            A size in bytes of the affected area of backing memory for buffer,
            or VK_WHOLE_SIZE to use the range from offset to the end of the
            buffer.
            </summary>
        </member>
        <member name="M:SharpVk.BufferMemoryBarrier.MarshalTo(SharpVk.Interop.BufferMemoryBarrier*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.BufferMemoryBarrier.MarshalFrom(SharpVk.Interop.BufferMemoryBarrier*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.BufferUsageFlags">
            <summary>
            Bitmask specifying allowed usage of a buffer.
            </summary>
        </member>
        <member name="F:SharpVk.BufferUsageFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BufferUsageFlags.TransferSource">
            <summary>
            Indicates that the buffer can be used as the source of a _transfer
            command_ (see the definition of VK_PIPELINE_STAGE_TRANSFER_BIT).
            </summary>
        </member>
        <member name="F:SharpVk.BufferUsageFlags.TransferDestination">
            <summary>
            Indicates that the buffer can be used as the destination of a
            transfer command.
            </summary>
        </member>
        <member name="F:SharpVk.BufferUsageFlags.UniformTexelBuffer">
            <summary>
            Indicates that the buffer can be used to create a BufferView
            suitable for occupying a DescriptorSet slot of type
            VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER.
            </summary>
        </member>
        <member name="F:SharpVk.BufferUsageFlags.StorageTexelBuffer">
            <summary>
            Indicates that the buffer can be used to create a BufferView
            suitable for occupying a DescriptorSet slot of type
            VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER.
            </summary>
        </member>
        <member name="F:SharpVk.BufferUsageFlags.UniformBuffer">
            <summary>
            Indicates that the buffer can be used in a DescriptorBufferInfo
            suitable for occupying a DescriptorSet slot either of type
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER or
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC.
            </summary>
        </member>
        <member name="F:SharpVk.BufferUsageFlags.StorageBuffer">
            <summary>
            Indicates that the buffer can be used in a DescriptorBufferInfo
            suitable for occupying a DescriptorSet slot either of type
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC.
            </summary>
        </member>
        <member name="F:SharpVk.BufferUsageFlags.IndexBuffer">
            <summary>
            Indicates that the buffer is suitable for passing as the buffer
            parameter to fname:vkCmdBindIndexBuffer.
            </summary>
        </member>
        <member name="F:SharpVk.BufferUsageFlags.VertexBuffer">
            <summary>
            Indicates that the buffer is suitable for passing as an element of
            the pBuffers array to fname:vkCmdBindVertexBuffers.
            </summary>
        </member>
        <member name="F:SharpVk.BufferUsageFlags.IndirectBuffer">
            <summary>
            Indicates that the buffer is suitable for passing as the buffer
            parameter to fname:vkCmdDrawIndirect,
            fname:vkCmdDrawIndexedIndirect, or fname:vkCmdDispatchIndirect. It
            is also suitable for passing as the buffer member of
            IndirectCommandsTokenNVX, or sequencesCountBuffer or
            sequencesIndexBuffer member of CmdProcessCommandsInfoNVX
            </summary>
        </member>
        <member name="T:SharpVk.BufferView">
            <summary>
            Opaque handle to a buffer view object.
            </summary>
        </member>
        <member name="P:SharpVk.BufferView.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.BufferView.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a buffer view object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.BufferViewCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.BufferViewCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.BufferViewCreateInfo">
            <summary>
            Structure specifying parameters of a newly created buffer view.
            </summary>
        </member>
        <member name="P:SharpVk.BufferViewCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.BufferViewCreateInfo.Buffer">
            <summary>
            A Buffer on which the view will be created.
            </summary>
        </member>
        <member name="P:SharpVk.BufferViewCreateInfo.Format">
            <summary>
            A Format describing the format of the data elements in the buffer.
            </summary>
        </member>
        <member name="P:SharpVk.BufferViewCreateInfo.Offset">
            <summary>
            An offset in bytes from the base address of the buffer. Accesses to
            the buffer view from shaders use addressing that is relative to
            this starting offset.
            </summary>
        </member>
        <member name="P:SharpVk.BufferViewCreateInfo.Range">
            <summary>
            A size in bytes of the buffer view. If range is equal to
            VK_WHOLE_SIZE, the range from offset to the end of the buffer is
            used. If VK_WHOLE_SIZE is used and the remaining size of the buffer
            is not a multiple of the element size of format, then the nearest
            smaller multiple is used.
            </summary>
        </member>
        <member name="M:SharpVk.BufferViewCreateInfo.MarshalTo(SharpVk.Interop.BufferViewCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ClearAttachment">
            <summary>
            Structure specifying a clear attachment.
            </summary>
        </member>
        <member name="M:SharpVk.ClearAttachment.#ctor(SharpVk.ImageAspectFlags,System.UInt32,SharpVk.ClearValue)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ClearAttachment.AspectMask">
            <summary>
            A mask selecting the color, depth and/or stencil aspects of the
            attachment to be cleared. aspectMask can include
            VK_IMAGE_ASPECT_COLOR_BIT for color attachments,
            VK_IMAGE_ASPECT_DEPTH_BIT for depth/stencil attachments with a
            depth component, and VK_IMAGE_ASPECT_STENCIL_BIT for depth/stencil
            attachments with a stencil component. If the subpass's
            depth/stencil attachment is VK_ATTACHMENT_UNUSED, then the clear
            has no effect.
            </summary>
        </member>
        <member name="F:SharpVk.ClearAttachment.ColorAttachment">
            <summary>
            colorAttachment is only meaningful if VK_IMAGE_ASPECT_COLOR_BIT is
            set in aspectMask, in which case it is an index to the
            pColorAttachments array in the SubpassDescription structure of the
            current subpass which selects the color attachment to clear. If
            colorAttachment is VK_ATTACHMENT_UNUSED then the clear has no
            effect.
            </summary>
        </member>
        <member name="F:SharpVk.ClearAttachment.ClearValue">
            <summary>
            The color or depth/stencil value to clear the attachment to.
            </summary>
        </member>
        <member name="T:SharpVk.ClearColorValue">
            <summary>
            <para>
            Structure specifying a clear color value.
            </para>
            <para>
            The four array elements of the clear color map to R, G, B, and A
            components of image formats, in order.
            </para>
            <para>
            If the image has more than one sample, the same value is written to all
            samples for any pixels being cleared.
            </para>
            </summary>
        </member>
        <member name="M:SharpVk.ClearColorValue.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.ClearColorValue.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.ClearColorValue.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.ClearColorValue.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})~SharpVk.ClearColorValue">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SharpVk.ClearColorValue.op_Implicit(System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32})~SharpVk.ClearColorValue">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SharpVk.ClearColorValue.op_Implicit(System.ValueTuple{System.UInt32,System.UInt32,System.UInt32,System.UInt32})~SharpVk.ClearColorValue">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:SharpVk.ClearColorValue.ColorElement">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ClearColorValue.ColorElement.Float32">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ClearColorValue.ColorElement.Int32">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ClearColorValue.ColorElement.UInt32">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.ClearColorValue.ColorElement.op_Implicit(System.Single)~SharpVk.ClearColorValue.ColorElement">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SharpVk.ClearColorValue.ColorElement.op_Implicit(System.Int32)~SharpVk.ClearColorValue.ColorElement">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SharpVk.ClearColorValue.ColorElement.op_Implicit(System.UInt32)~SharpVk.ClearColorValue.ColorElement">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:SharpVk.ClearDepthStencilValue">
            <summary>
            Structure specifying a clear depth stencil value.
            </summary>
        </member>
        <member name="M:SharpVk.ClearDepthStencilValue.#ctor(System.Single,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ClearDepthStencilValue.Depth">
            <summary>
            The clear value for the depth aspect of the depth/stencil
            attachment. It is a floating-point value which is automatically
            converted to the attachment's format.
            </summary>
        </member>
        <member name="F:SharpVk.ClearDepthStencilValue.Stencil">
            <summary>
            The clear value for the stencil aspect of the depth/stencil
            attachment. It is a 32-bit integer value which is converted to the
            attachment's format by taking the appropriate number of LSBs.
            </summary>
        </member>
        <member name="T:SharpVk.ClearRect">
            <summary>
            Structure specifying a clear rectangle.
            </summary>
        </member>
        <member name="M:SharpVk.ClearRect.#ctor(SharpVk.Rect2D,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ClearRect.Rect">
            <summary>
            The two-dimensional region to be cleared.
            </summary>
        </member>
        <member name="F:SharpVk.ClearRect.BaseArrayLayer">
            <summary>
            The first layer to be cleared.
            </summary>
        </member>
        <member name="F:SharpVk.ClearRect.LayerCount">
            <summary>
            The number of layers to clear.
            </summary>
        </member>
        <member name="T:SharpVk.ClearValue">
            <summary>
            <para>
            Structure specifying a clear value.
            </para>
            <para>
            This union is used where part of the API requires either color or
            depth/stencil clear values, depending on the attachment, and defines
            the initial clear values in the slink:VkRenderPassBeginInfo structure.
            </para>
            </summary>
        </member>
        <member name="M:SharpVk.ClearValue.op_Implicit(SharpVk.ClearColorValue)~SharpVk.ClearValue">
            <summary>
            Implicit conversion of ClearColorValue to ClearValue.
            </summary>
            <param name="color">
            Specifies the color image clear values to use when clearing a color
            image or attachment.
            </param>
        </member>
        <member name="M:SharpVk.ClearValue.op_Implicit(SharpVk.ClearDepthStencilValue)~SharpVk.ClearValue">
            <summary>
            Implicit conversion of ClearDepthStencilValue to ClearValue.
            </summary>
            <param name="depthStencil">
            Specifies the depth and stencil clear values to use when clearing a
            depth/stencil image or attachment.
            </param>
        </member>
        <member name="M:SharpVk.ClearValue.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})~SharpVk.ClearValue">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SharpVk.ClearValue.op_Implicit(System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32})~SharpVk.ClearValue">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SharpVk.ClearValue.op_Implicit(System.ValueTuple{System.UInt32,System.UInt32,System.UInt32,System.UInt32})~SharpVk.ClearValue">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:SharpVk.ColorComponentFlags">
            <summary>
            Bitmask controlling which components are written to the framebuffer.
            </summary>
        </member>
        <member name="F:SharpVk.ColorComponentFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ColorComponentFlags.R">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ColorComponentFlags.G">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ColorComponentFlags.B">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ColorComponentFlags.A">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.CommandBuffer">
            <summary>
            Opaque handle to a command buffer object.
            </summary>
        </member>
        <member name="P:SharpVk.CommandBuffer.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.Begin(System.Nullable{SharpVk.CommandBufferUsageFlags},System.Nullable{SharpVk.CommandBufferInheritanceInfo})">
            <summary>
            Start recording a command buffer.
            </summary>
            <param name="flags">
            A bitmask indicating usage behavior for the command buffer. Bits
            which can be set include: + --
            </param>
        </member>
        <member name="M:SharpVk.CommandBuffer.End">
            <summary>
            Finish recording a command buffer.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.Reset(System.Nullable{SharpVk.CommandBufferResetFlags})">
            <summary>
            Reset a command buffer.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.BindPipeline(SharpVk.PipelineBindPoint,SharpVk.Pipeline)">
            <summary>
            Bind a pipeline object to a command buffer.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.SetViewport(System.UInt32,System.Nullable{SharpVk.ArrayProxy{SharpVk.Viewport}})">
            <summary>
            Set the viewport on a command buffer.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.SetScissor(System.UInt32,System.Nullable{SharpVk.ArrayProxy{SharpVk.Rect2D}})">
            <summary>
            Set the dynamic scissor rectangles on a command buffer.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.SetLineWidth(System.Single)">
            <summary>
            Set the dynamic line width state.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.SetDepthBias(System.Single,System.Single,System.Single)">
            <summary>
            Set the depth bias dynamic state.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.SetBlendConstants(System.Single)">
            <summary>
            Set the values of blend constants.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.SetDepthBounds(System.Single,System.Single)">
            <summary>
            Set the depth bounds test values for a command buffer.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.SetStencilCompareMask(SharpVk.StencilFaceFlags,System.UInt32)">
            <summary>
            Set the stencil compare mask dynamic state.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.SetStencilWriteMask(SharpVk.StencilFaceFlags,System.UInt32)">
            <summary>
            Set the stencil write mask dynamic state.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.SetStencilReference(SharpVk.StencilFaceFlags,System.UInt32)">
            <summary>
            Set the stencil reference dynamic state.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.BindDescriptorSets(SharpVk.PipelineBindPoint,SharpVk.PipelineLayout,System.UInt32,System.Nullable{SharpVk.ArrayProxy{SharpVk.DescriptorSet}},System.Nullable{SharpVk.ArrayProxy{System.UInt32}})">
            <summary>
            Binds descriptor sets to a command buffer.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.BindIndexBuffer(SharpVk.Buffer,SharpVk.DeviceSize,SharpVk.IndexType)">
            <summary>
            Bind an index buffer to a command buffer.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.BindVertexBuffers(System.UInt32,System.Nullable{SharpVk.ArrayProxy{SharpVk.Buffer}},System.Nullable{SharpVk.ArrayProxy{SharpVk.DeviceSize}})">
            <summary>
            Bind vertex buffers to a command buffer.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.Draw(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Draw primitives.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.DrawIndexed(System.UInt32,System.UInt32,System.UInt32,System.Int32,System.UInt32)">
            <summary>
            Issue an indexed draw into a command buffer.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.DrawIndirect(SharpVk.Buffer,SharpVk.DeviceSize,System.UInt32,System.UInt32)">
            <summary>
            Issue an indirect draw into a command buffer.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.DrawIndexedIndirect(SharpVk.Buffer,SharpVk.DeviceSize,System.UInt32,System.UInt32)">
            <summary>
            Perform an indexed indirect draw.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.Dispatch(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Dispatch compute work items.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.DispatchIndirect(SharpVk.Buffer,SharpVk.DeviceSize)">
            <summary>
            Dispatch compute work items using indirect parameters.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.CopyBuffer(SharpVk.Buffer,SharpVk.Buffer,System.Nullable{SharpVk.ArrayProxy{SharpVk.BufferCopy}})">
            <summary>
            Copy data between buffer regions.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.CopyImage(SharpVk.Image,SharpVk.ImageLayout,SharpVk.Image,SharpVk.ImageLayout,System.Nullable{SharpVk.ArrayProxy{SharpVk.ImageCopy}})">
            <summary>
            Copy data between images.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.BlitImage(SharpVk.Image,SharpVk.ImageLayout,SharpVk.Image,SharpVk.ImageLayout,System.Nullable{SharpVk.ArrayProxy{SharpVk.ImageBlit}},SharpVk.Filter)">
            <summary>
            Copy regions of an image, potentially performing format
            conversion,.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.CopyBufferToImage(SharpVk.Buffer,SharpVk.Image,SharpVk.ImageLayout,System.Nullable{SharpVk.ArrayProxy{SharpVk.BufferImageCopy}})">
            <summary>
            Copy data from a buffer into an image.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.CopyImageToBuffer(SharpVk.Image,SharpVk.ImageLayout,SharpVk.Buffer,System.Nullable{SharpVk.ArrayProxy{SharpVk.BufferImageCopy}})">
            <summary>
            Copy image data into a buffer.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.UpdateBuffer(SharpVk.Buffer,SharpVk.DeviceSize,System.Nullable{SharpVk.ArrayProxy{System.Byte}})">
            <summary>
            Update a buffer's contents from host memory.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.FillBuffer(SharpVk.Buffer,SharpVk.DeviceSize,SharpVk.DeviceSize,System.UInt32)">
            <summary>
            Fill a region of a buffer with a fixed value.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.ClearColorImage(SharpVk.Image,SharpVk.ImageLayout,SharpVk.ClearColorValue,System.Nullable{SharpVk.ArrayProxy{SharpVk.ImageSubresourceRange}})">
            <summary>
            Clear regions of a color image.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.ClearDepthStencilImage(SharpVk.Image,SharpVk.ImageLayout,SharpVk.ClearDepthStencilValue,System.Nullable{SharpVk.ArrayProxy{SharpVk.ImageSubresourceRange}})">
            <summary>
            Fill regions of a combined depth/stencil image.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.ClearAttachments(System.Nullable{SharpVk.ArrayProxy{SharpVk.ClearAttachment}},System.Nullable{SharpVk.ArrayProxy{SharpVk.ClearRect}})">
            <summary>
            Clear regions within currently bound framebuffer attachments.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.ResolveImage(SharpVk.Image,SharpVk.ImageLayout,SharpVk.Image,SharpVk.ImageLayout,System.Nullable{SharpVk.ArrayProxy{SharpVk.ImageResolve}})">
            <summary>
            Resolve regions of an image.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.SetEvent(SharpVk.Event,SharpVk.PipelineStageFlags)">
            <summary>
            Set an event object to signaled state.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.ResetEvent(SharpVk.Event,SharpVk.PipelineStageFlags)">
            <summary>
            Reset an event object to non-signaled state.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.WaitEvents(System.Nullable{SharpVk.ArrayProxy{SharpVk.Event}},SharpVk.PipelineStageFlags,SharpVk.PipelineStageFlags,System.Nullable{SharpVk.ArrayProxy{SharpVk.MemoryBarrier}},System.Nullable{SharpVk.ArrayProxy{SharpVk.BufferMemoryBarrier}},System.Nullable{SharpVk.ArrayProxy{SharpVk.ImageMemoryBarrier}})">
            <summary>
            Wait for one or more events and insert a set of memory.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.PipelineBarrier(SharpVk.PipelineStageFlags,SharpVk.PipelineStageFlags,System.Nullable{SharpVk.ArrayProxy{SharpVk.MemoryBarrier}},System.Nullable{SharpVk.ArrayProxy{SharpVk.BufferMemoryBarrier}},System.Nullable{SharpVk.ArrayProxy{SharpVk.ImageMemoryBarrier}},System.Nullable{SharpVk.DependencyFlags})">
            <summary>
            Insert a memory dependency.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.BeginQuery(SharpVk.QueryPool,System.UInt32,System.Nullable{SharpVk.QueryControlFlags})">
            <summary>
            Begin a query.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.EndQuery(SharpVk.QueryPool,System.UInt32)">
            <summary>
            Ends a query.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.ResetQueryPool(SharpVk.QueryPool,System.UInt32,System.UInt32)">
            <summary>
            Reset queries in a query pool.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.WriteTimestamp(SharpVk.PipelineStageFlags,SharpVk.QueryPool,System.UInt32)">
            <summary>
            Write a device timestamp into a query object.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.CopyQueryPoolResults(SharpVk.QueryPool,System.UInt32,System.UInt32,SharpVk.Buffer,SharpVk.DeviceSize,SharpVk.DeviceSize,System.Nullable{SharpVk.QueryResultFlags})">
            <summary>
            Copy the results of queries in a query pool to a buffer object.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.PushConstants(SharpVk.PipelineLayout,SharpVk.ShaderStageFlags,System.UInt32,System.Nullable{SharpVk.ArrayProxy{System.Byte}})">
            <summary>
            Update the values of push constants.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.BeginRenderPass(SharpVk.RenderPass,SharpVk.Framebuffer,SharpVk.Rect2D,System.Nullable{SharpVk.ArrayProxy{SharpVk.ClearValue}},SharpVk.SubpassContents)">
            <summary>
            Begin a new render pass.
            </summary>
            <param name="renderPass">
            The render pass to begin an instance of.
            </param>
            <param name="framebuffer">
            The framebuffer containing the attachments that are used with the
            render pass.
            </param>
            <param name="renderArea">
            The render area that is affected by the render pass instance, and
            is described in more detail below.
            </param>
        </member>
        <member name="M:SharpVk.CommandBuffer.NextSubpass(SharpVk.SubpassContents)">
            <summary>
            Transition to the next subpass of a render pass.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.EndRenderPass">
            <summary>
            End the current render pass.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBuffer.ExecuteCommands(System.Nullable{SharpVk.ArrayProxy{SharpVk.CommandBuffer}})">
            <summary>
            Execute a secondary command buffer from a primary command buffer.
            </summary>
        </member>
        <member name="T:SharpVk.CommandBufferAllocateInfo">
            <summary>
            Structure specifying the allocation parameters for command buffer
            object.
            </summary>
        </member>
        <member name="P:SharpVk.CommandBufferAllocateInfo.CommandPool">
            <summary>
            The command pool from which the command buffers are allocated.
            </summary>
        </member>
        <member name="P:SharpVk.CommandBufferAllocateInfo.Level">
            <summary>
            level determines whether the command buffers are primary or
            secondary command buffers. Possible values include: + --
            </summary>
        </member>
        <member name="P:SharpVk.CommandBufferAllocateInfo.CommandBufferCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.CommandBufferAllocateInfo.MarshalTo(SharpVk.Interop.CommandBufferAllocateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.CommandBufferBeginInfo">
            <summary>
            Structure specifying a command buffer begin operation.
            </summary>
        </member>
        <member name="P:SharpVk.CommandBufferBeginInfo.Flags">
            <summary>
            A bitmask indicating usage behavior for the command buffer. Bits
            which can be set include: + --
            </summary>
        </member>
        <member name="P:SharpVk.CommandBufferBeginInfo.InheritanceInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.CommandBufferBeginInfo.MarshalTo(SharpVk.Interop.CommandBufferBeginInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.CommandBufferInheritanceInfo">
            <summary>
            Structure specifying command buffer inheritance info.
            </summary>
        </member>
        <member name="P:SharpVk.CommandBufferInheritanceInfo.RenderPass">
            <summary>
            A RenderPass object defining which render passes the CommandBuffer
            will be compatible with and can be executed within. If the
            CommandBuffer will not be executed within a render pass instance,
            renderPass is ignored.
            </summary>
        </member>
        <member name="P:SharpVk.CommandBufferInheritanceInfo.Subpass">
            <summary>
            The index of the subpass within the render pass instance that the
            CommandBuffer will be executed within. If the CommandBuffer will
            not be executed within a render pass instance, subpass is ignored.
            </summary>
        </member>
        <member name="P:SharpVk.CommandBufferInheritanceInfo.Framebuffer">
            <summary>
            framebuffer optionally refers to the Framebuffer object that the
            CommandBuffer will be rendering to if it is executed within a
            render pass instance. It can be null if the framebuffer is not
            known, or if the CommandBuffer will not be executed within a render
            pass instance. + [NOTE] .Note ==== Specifying the exact framebuffer
            that the secondary command buffer will be executed with may result
            in better performance at command buffer execution time. ====
            </summary>
        </member>
        <member name="P:SharpVk.CommandBufferInheritanceInfo.OcclusionQueryEnable">
            <summary>
            Indicates whether the command buffer can be executed while an
            occlusion query is active in the primary command buffer. If this is
            VK_TRUE, then this command buffer can be executed whether the
            primary command buffer has an occlusion query active or not. If
            this is VK_FALSE, then the primary command buffer must not have an
            occlusion query active.
            </summary>
        </member>
        <member name="P:SharpVk.CommandBufferInheritanceInfo.QueryFlags">
            <summary>
            Indicates the query flags that can be used by an active occlusion
            query in the primary command buffer when this secondary command
            buffer is executed. If this value includes the
            VK_QUERY_CONTROL_PRECISE_BIT bit, then the active query can return
            boolean results or actual sample counts. If this bit is not set,
            then the active query must not use the VK_QUERY_CONTROL_PRECISE_BIT
            bit.
            </summary>
        </member>
        <member name="P:SharpVk.CommandBufferInheritanceInfo.PipelineStatistics">
            <summary>
            Indicates the set of pipeline statistics that can be counted by an
            active query in the primary command buffer when this secondary
            command buffer is executed. If this value includes a given bit,
            then this command buffer can be executed whether the primary
            command buffer has a pipeline statistics query active that includes
            this bit or not. If this value excludes a given bit, then the
            active pipeline statistics query must not be from a query pool that
            counts that statistic.
            </summary>
        </member>
        <member name="M:SharpVk.CommandBufferInheritanceInfo.MarshalTo(SharpVk.Interop.CommandBufferInheritanceInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.CommandBufferLevel">
            <summary>
            Structure specifying a command buffer level.
            </summary>
        </member>
        <member name="F:SharpVk.CommandBufferLevel.Primary">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.CommandBufferLevel.Secondary">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.CommandBufferResetFlags">
            <summary>
            Bitmask controlling behavior of a command buffer reset.
            </summary>
        </member>
        <member name="F:SharpVk.CommandBufferResetFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.CommandBufferResetFlags.ReleaseResources">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.CommandBufferUsageFlags">
            <summary>
            Bitmask specifying usage behavior for command buffer.
            </summary>
        </member>
        <member name="F:SharpVk.CommandBufferUsageFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.CommandBufferUsageFlags.OneTimeSubmit">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.CommandBufferUsageFlags.RenderPassContinue">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.CommandBufferUsageFlags.SimultaneousUse">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.CommandCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.CommandCache.GetCommandDelegate``1(System.String,System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:SharpVk.IProcLookup">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.IProcLookup.GetProcedureAddress(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:SharpVk.CommandPool">
            <summary>
            Opaque handle to a command pool object.
            </summary>
        </member>
        <member name="P:SharpVk.CommandPool.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.CommandPool.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a command pool object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.CommandPool.Reset(System.Nullable{SharpVk.CommandPoolResetFlags})">
            <summary>
            Reset a command pool.
            </summary>
        </member>
        <member name="M:SharpVk.CommandPool.FreeCommandBuffers(System.Nullable{SharpVk.ArrayProxy{SharpVk.CommandBuffer}})">
            <summary>
            Free command buffers.
            </summary>
        </member>
        <member name="T:SharpVk.CommandPoolCreateFlags">
            <summary>
            Bitmask specifying usage behavior for a command pool.
            </summary>
        </member>
        <member name="F:SharpVk.CommandPoolCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.CommandPoolCreateFlags.Transient">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.CommandPoolCreateFlags.ResetCommandBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.CommandPoolCreateInfo">
            <summary>
            Structure specifying parameters of a newly created command pool.
            </summary>
        </member>
        <member name="P:SharpVk.CommandPoolCreateInfo.Flags">
            <summary>
            A bitmask indicating usage behavior for the pool and command
            buffers allocated from it. Bits which can be set include: + --
            </summary>
        </member>
        <member name="P:SharpVk.CommandPoolCreateInfo.QueueFamilyIndex">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.CommandPoolCreateInfo.MarshalTo(SharpVk.Interop.CommandPoolCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.CommandPoolResetFlags">
            <summary>
            Bitmask controlling behavior of a command pool reset.
            </summary>
        </member>
        <member name="F:SharpVk.CommandPoolResetFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.CommandPoolResetFlags.ReleaseResources">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.CompareOp">
            <summary>
            Stencil comparison function.
            </summary>
        </member>
        <member name="F:SharpVk.CompareOp.Never">
            <summary>
            The test never passes.
            </summary>
        </member>
        <member name="F:SharpVk.CompareOp.Less">
            <summary>
            The test passes when [eq]#R &lt; S#.
            </summary>
        </member>
        <member name="F:SharpVk.CompareOp.Equal">
            <summary>
            The test passes when [eq]#R = S#.
            </summary>
        </member>
        <member name="F:SharpVk.CompareOp.LessOrEqual">
            <summary>
            The test passes when [eq]#R {leq} S#.
            </summary>
        </member>
        <member name="F:SharpVk.CompareOp.Greater">
            <summary>
            The test passes when [eq]#R &gt; S#.
            </summary>
        </member>
        <member name="F:SharpVk.CompareOp.NotEqual">
            <summary>
            The test passes when [eq]#R {neq} S#.
            </summary>
        </member>
        <member name="F:SharpVk.CompareOp.GreaterOrEqual">
            <summary>
            The test passes when [eq]#R {geq} S#.
            </summary>
        </member>
        <member name="F:SharpVk.CompareOp.Always">
            <summary>
            The test always passes.
            </summary>
        </member>
        <member name="T:SharpVk.ComponentMapping">
            <summary>
            Structure specifying a color component mapping.
            </summary>
        </member>
        <member name="M:SharpVk.ComponentMapping.#ctor(SharpVk.ComponentSwizzle,SharpVk.ComponentSwizzle,SharpVk.ComponentSwizzle,SharpVk.ComponentSwizzle)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ComponentMapping.R">
            <summary>
            r determines the component value placed in the R component of the
            output vector.
            </summary>
        </member>
        <member name="F:SharpVk.ComponentMapping.G">
            <summary>
            g determines the component value placed in the G component of the
            output vector.
            </summary>
        </member>
        <member name="F:SharpVk.ComponentMapping.B">
            <summary>
            b determines the component value placed in the B component of the
            output vector.
            </summary>
        </member>
        <member name="F:SharpVk.ComponentMapping.A">
            <summary>
            a determines the component value placed in the A component of the
            output vector.
            </summary>
        </member>
        <member name="T:SharpVk.ComponentSwizzle">
            <summary>
            Specify how a component is swizzled.
            </summary>
        </member>
        <member name="F:SharpVk.ComponentSwizzle.Identity">
            <summary>
            The component is set to the identity swizzle.
            </summary>
        </member>
        <member name="F:SharpVk.ComponentSwizzle.Zero">
            <summary>
            The component is set to zero.
            </summary>
        </member>
        <member name="F:SharpVk.ComponentSwizzle.One">
            <summary>
            The component is set to either 1 or 1.0 depending on whether the
            type of the image view format is integer or floating-point
            respectively, as determined by the Format Definition section for
            each Format.
            </summary>
        </member>
        <member name="F:SharpVk.ComponentSwizzle.R">
            <summary>
            The component is set to the value of the R component of the image.
            </summary>
        </member>
        <member name="F:SharpVk.ComponentSwizzle.G">
            <summary>
            The component is set to the value of the G component of the image.
            </summary>
        </member>
        <member name="F:SharpVk.ComponentSwizzle.B">
            <summary>
            The component is set to the value of the B component of the image.
            </summary>
        </member>
        <member name="F:SharpVk.ComponentSwizzle.A">
            <summary>
            The component is set to the value of the A component of the image.
            </summary>
        </member>
        <member name="T:SharpVk.ComputePipelineCreateInfo">
            <summary>
            Structure specifying parameters of a newly created compute pipeline.
            </summary>
        </member>
        <member name="P:SharpVk.ComputePipelineCreateInfo.Flags">
            <summary>
            flags provides options for pipeline creation, and is of type
            PipelineCreateFlagBits.
            </summary>
        </member>
        <member name="P:SharpVk.ComputePipelineCreateInfo.Stage">
            <summary>
            A PipelineShaderStageCreateInfo describing the compute shader.
            </summary>
        </member>
        <member name="P:SharpVk.ComputePipelineCreateInfo.Layout">
            <summary>
            The description of binding locations used by both the pipeline and
            descriptor sets used with the pipeline.
            </summary>
        </member>
        <member name="P:SharpVk.ComputePipelineCreateInfo.BasePipelineHandle">
            <summary>
            A pipeline to derive from
            </summary>
        </member>
        <member name="P:SharpVk.ComputePipelineCreateInfo.BasePipelineIndex">
            <summary>
            An index into the pCreateInfos parameter to use as a pipeline to
            derive from
            </summary>
        </member>
        <member name="M:SharpVk.ComputePipelineCreateInfo.MarshalTo(SharpVk.Interop.ComputePipelineCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Constants">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.MaxPhysicalDeviceNameSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.UuidSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.LuidSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.MaxExtensionNameSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.MaxDescriptionSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.MaxMemoryTypes">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.MaxMemoryHeaps">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.LodClampNone">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.RemainingMipLevels">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.RemainingArrayLayers">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.WholeSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.AttachmentUnused">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.True">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.False">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.QueueFamilyIgnored">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.QueueFamilyExternal">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.SubpassExternal">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Constants.MaxDeviceGroupSize">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.CopyDescriptorSet">
            <summary>
            Structure specifying a copy descriptor set operation.
            </summary>
        </member>
        <member name="P:SharpVk.CopyDescriptorSet.SourceSet">
            <summary>
            srcSet, srcBinding, and srcArrayElement are the source set,
            binding, and array element, respectively.
            </summary>
        </member>
        <member name="P:SharpVk.CopyDescriptorSet.SourceBinding">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.CopyDescriptorSet.SourceArrayElement">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.CopyDescriptorSet.DestinationSet">
            <summary>
            dstSet, dstBinding, and dstArrayElement are the destination set,
            binding, and array element, respectively.
            </summary>
        </member>
        <member name="P:SharpVk.CopyDescriptorSet.DestinationBinding">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.CopyDescriptorSet.DestinationArrayElement">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.CopyDescriptorSet.DescriptorCount">
            <summary>
            The number of descriptors to copy from the source to destination.
            If descriptorCount is greater than the number of remaining array
            elements in the source or destination binding, those affect
            consecutive bindings in a manner similar to WriteDescriptorSet
            above.
            </summary>
        </member>
        <member name="M:SharpVk.CopyDescriptorSet.MarshalTo(SharpVk.Interop.CopyDescriptorSet*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.CopyDescriptorSet.MarshalFrom(SharpVk.Interop.CopyDescriptorSet*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.CullModeFlags">
            <summary>
            Bitmask controlling triangle culling.
            </summary>
        </member>
        <member name="F:SharpVk.CullModeFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.CullModeFlags.Front">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.CullModeFlags.Back">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.CullModeFlags.FrontAndBack">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.DependencyFlags">
            <summary>
            Bitmask specifying how execution and memory dependencies are formed.
            </summary>
        </member>
        <member name="F:SharpVk.DependencyFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DependencyFlags.ByRegion">
            <summary>
            Dependency is per pixel region 
            </summary>
        </member>
        <member name="F:SharpVk.DependencyFlags.ViewLocalBitKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DependencyFlags.DeviceGroupBitKhx">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.DescriptorBufferInfo">
            <summary>
            Structure specifying descriptor buffer info.
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorBufferInfo.Buffer">
            <summary>
            The buffer resource.
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorBufferInfo.Offset">
            <summary>
            The offset in bytes from the start of buffer. Access to buffer
            memory via this descriptor uses addressing that is relative to this
            starting offset.
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorBufferInfo.Range">
            <summary>
            The size in bytes that is used for this descriptor update, or
            VK_WHOLE_SIZE to use the range from offset to the end of the
            buffer. + -- [NOTE] .Note ==== When using VK_WHOLE_SIZE, the
            effective range must not be larger than the maximum range for the
            descriptor type (maxUniformBufferRange or maxStorageBufferRange).
            This means that VK_WHOLE_SIZE is not typically useful in the common
            case where uniform buffer descriptors are suballocated from a
            buffer that is much larger than maxUniformBufferRange. ==== -- +
            For VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC and
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC descriptor types, offset
            is the base offset from which the dynamic offset is applied and
            range is the static size used for all dynamic offsets.
            </summary>
        </member>
        <member name="M:SharpVk.DescriptorBufferInfo.MarshalTo(SharpVk.Interop.DescriptorBufferInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.DescriptorImageInfo">
            <summary>
            Structure specifying descriptor image info.
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorImageInfo.Sampler">
            <summary>
            A sampler handle, and is used in descriptor updates for types
            VK_DESCRIPTOR_TYPE_SAMPLER and
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER if the binding being
            updated does not use immutable samplers.
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorImageInfo.ImageView">
            <summary>
            An image view handle, and is used in descriptor updates for types
            VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE, VK_DESCRIPTOR_TYPE_STORAGE_IMAGE,
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, and
            VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT.
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorImageInfo.ImageLayout">
            <summary>
            The layout that the image will be in at the time this descriptor is
            accessed. imageLayout is used in descriptor updates for types
            VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE, VK_DESCRIPTOR_TYPE_STORAGE_IMAGE,
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, and
            VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT.
            </summary>
        </member>
        <member name="M:SharpVk.DescriptorImageInfo.MarshalTo(SharpVk.Interop.DescriptorImageInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.DescriptorPool">
            <summary>
            Opaque handle to a descriptor pool object.
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorPool.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.DescriptorPool.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a descriptor pool object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.DescriptorPool.Reset(System.Nullable{SharpVk.DescriptorPoolResetFlags})">
            <summary>
            Resets a descriptor pool object.
            </summary>
        </member>
        <member name="M:SharpVk.DescriptorPool.FreeDescriptorSets(System.Nullable{SharpVk.ArrayProxy{SharpVk.DescriptorSet}})">
            <summary>
            Free one or more descriptor sets.
            </summary>
        </member>
        <member name="T:SharpVk.DescriptorPoolCreateFlags">
            <summary>
            Bitmask specifying certain supported operations on a descriptor pool.
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorPoolCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorPoolCreateFlags.FreeDescriptorSet">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.DescriptorPoolCreateInfo">
            <summary>
            Structure specifying parameters of a newly created descriptor pool.
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorPoolCreateInfo.Flags">
            <summary>
            Specifies certain supported operations on the pool. Bits which can
            be set include: + --
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorPoolCreateInfo.MaxSets">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorPoolCreateInfo.PoolSizes">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.DescriptorPoolCreateInfo.MarshalTo(SharpVk.Interop.DescriptorPoolCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.DescriptorPoolResetFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorPoolResetFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.DescriptorPoolSize">
            <summary>
            Structure specifying descriptor pool size.
            </summary>
        </member>
        <member name="M:SharpVk.DescriptorPoolSize.#ctor(SharpVk.DescriptorType,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorPoolSize.Type">
            <summary>
            The type of descriptor.
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorPoolSize.DescriptorCount">
            <summary>
            The number of descriptors of that type to allocate.
            </summary>
        </member>
        <member name="T:SharpVk.DescriptorSet">
            <summary>
            Opaque handle to a descriptor set object.
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorSet.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.DescriptorSetAllocateInfo">
            <summary>
            Structure specifying the allocation parameters for descriptor sets.
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorSetAllocateInfo.DescriptorPool">
            <summary>
            The pool which the sets will be allocated from.
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorSetAllocateInfo.SetLayouts">
            <summary>
            An array of descriptor set layouts, with each member specifying how
            the corresponding descriptor set is allocated.
            </summary>
        </member>
        <member name="M:SharpVk.DescriptorSetAllocateInfo.MarshalTo(SharpVk.Interop.DescriptorSetAllocateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.DescriptorSetLayout">
            <summary>
            Opaque handle to a descriptor set layout object.
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorSetLayout.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.DescriptorSetLayout.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a descriptor set layout object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.DescriptorSetLayoutBinding">
            <summary>
            Structure specifying a descriptor set layout binding.
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorSetLayoutBinding.Binding">
            <summary>
            The binding number of this entry and corresponds to a resource of
            the same binding number in the shader stages.
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorSetLayoutBinding.DescriptorType">
            <summary>
            A DescriptorType specifying which type of resource descriptors are
            used for this binding.
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorSetLayoutBinding.DescriptorCount">
            <summary>
            The number of descriptors contained in the binding, accessed in a
            shader as an array. If descriptorCount is zero this binding entry
            is reserved and the resource must not be accessed from any stage
            via this binding within any pipeline using the set layout.
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorSetLayoutBinding.StageFlags">
            <summary>
            stageFlags member is a bitmask of ShaderStageFlagBits specifying
            which pipeline shader stages can access a resource for this
            binding. VK_SHADER_STAGE_ALL is a shorthand specifying that all
            defined shader stages, including any additional stages defined by
            extensions, can access the resource. + -- If a shader stage is not
            included in stageFlags, then a resource must not be accessed from
            that stage via this binding within any pipeline using the set
            layout. There are no limitations on what combinations of stages can
            be used by a descriptor binding, and in particular a binding can be
            used by both graphics stages and the compute stage. --
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorSetLayoutBinding.ImmutableSamplers">
            <summary>
            pImmutableSamplers affects initialization of samplers. If
            descriptorType specifies a VK_DESCRIPTOR_TYPE_SAMPLER or
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER type descriptor, then
            pImmutableSamplers can be used to initialize a set of _immutable
            samplers_. Immutable samplers are permanently bound into the set
            layout; later binding a sampler into an immutable sampler slot in a
            descriptor set is not allowed. If pImmutableSamplers is not Null,
            then it is considered to be an array of sampler handles that will
            be consumed by the set layout and used for the corresponding
            binding. If pImmutableSamplers is Null, then the sampler slots are
            dynamic and sampler handles must be bound into descriptor sets
            using this layout. If descriptorType is not one of these descriptor
            types, then pImmutableSamplers is ignored.
            </summary>
        </member>
        <member name="M:SharpVk.DescriptorSetLayoutBinding.MarshalTo(SharpVk.Interop.DescriptorSetLayoutBinding*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.DescriptorSetLayoutCreateFlags">
            <summary>
            Bitmask specifying descriptor set layout properties.
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorSetLayoutCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorSetLayoutCreateFlags.PushDescriptorBitKhr">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.DescriptorSetLayoutCreateInfo">
            <summary>
            Structure specifying parameters of a newly created descriptor set
            layout.
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorSetLayoutCreateInfo.Flags">
            <summary>
            flags provides options for descriptor set layout creation, and is
            of type DescriptorSetLayoutCreateFlags. Bits which can be set
            include: + --
            </summary>
        </member>
        <member name="P:SharpVk.DescriptorSetLayoutCreateInfo.Bindings">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.DescriptorSetLayoutCreateInfo.MarshalTo(SharpVk.Interop.DescriptorSetLayoutCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.DescriptorType">
            <summary>
            Specifies the type of a descriptor in a descriptor set.
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorType.Sampler">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorType.CombinedImageSampler">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorType.SampledImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorType.StorageImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorType.UniformTexelBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorType.StorageTexelBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorType.UniformBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorType.StorageBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorType.UniformBufferDynamic">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorType.StorageBufferDynamic">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DescriptorType.InputAttachment">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Device">
            <summary>
            Opaque handle to a device object.
            </summary>
        </member>
        <member name="P:SharpVk.Device.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Device.GetProcedureAddress(System.String)">
            <summary>
            Return a function pointer for a command.
            </summary>
        </member>
        <member name="M:SharpVk.Device.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a logical device.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.GetQueue(System.UInt32,System.UInt32)">
            <summary>
            Get a queue handle from a device.
            </summary>
        </member>
        <member name="M:SharpVk.Device.WaitIdle">
            <summary>
            Wait for a device to become idle.
            </summary>
        </member>
        <member name="M:SharpVk.Device.AllocateMemory(SharpVk.DeviceSize,System.UInt32,System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Allocate GPU memory.
            </summary>
            <param name="allocationSize">
            The size of the allocation in bytes
            </param>
            <param name="memoryTypeIndex">
            The memory type index, which selects the properties of the memory
            to be allocated, as well as the heap the memory will come from.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.FlushMappedMemoryRanges(System.Nullable{SharpVk.ArrayProxy{SharpVk.MappedMemoryRange}})">
            <summary>
            Flush mapped memory ranges.
            </summary>
        </member>
        <member name="M:SharpVk.Device.InvalidateMappedMemoryRanges(System.Nullable{SharpVk.ArrayProxy{SharpVk.MappedMemoryRange}})">
            <summary>
            Invalidate ranges of mapped memory objects.
            </summary>
        </member>
        <member name="M:SharpVk.Device.CreateFence(System.Nullable{SharpVk.FenceCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a new fence object.
            </summary>
            <param name="flags">
            flags defines the initial state and behavior of the fence. Bits
            which can be set include: + --
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.ResetFences(System.Nullable{SharpVk.ArrayProxy{SharpVk.Fence}})">
            <summary>
            Resets one or more fence objects.
            </summary>
        </member>
        <member name="M:SharpVk.Device.WaitForFences(System.Nullable{SharpVk.ArrayProxy{SharpVk.Fence}},System.Boolean,System.UInt64)">
            <summary>
            Wait for one or more fences to become signaled.
            </summary>
        </member>
        <member name="M:SharpVk.Device.CreateSemaphore(System.Nullable{SharpVk.SemaphoreCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a new queue semaphore object.
            </summary>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.CreateEvent(System.Nullable{SharpVk.EventCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a new event object.
            </summary>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.CreateQueryPool(SharpVk.QueryType,System.UInt32,System.Nullable{SharpVk.QueryPoolCreateFlags},System.Nullable{SharpVk.QueryPipelineStatisticFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a new query pool object.
            </summary>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="queryType">
            The type of queries managed by the pool.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.CreateBuffer(SharpVk.DeviceSize,SharpVk.BufferUsageFlags,SharpVk.SharingMode,System.Nullable{SharpVk.ArrayProxy{System.UInt32}},System.Nullable{SharpVk.BufferCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a new buffer object.
            </summary>
            <param name="flags">
            A bitmask describing additional parameters of the buffer.
            </param>
            <param name="size">
            The size in bytes of the buffer to be created.
            </param>
            <param name="usage">
            A bitmask describing the allowed usages of the buffer.
            </param>
            <param name="sharingMode">
            The sharing mode of the buffer when it will be accessed by multiple
            queue families.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.CreateBufferView(SharpVk.Buffer,SharpVk.Format,SharpVk.DeviceSize,SharpVk.DeviceSize,System.Nullable{SharpVk.BufferViewCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a new buffer view object.
            </summary>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="buffer">
            A Buffer on which the view will be created.
            </param>
            <param name="format">
            A Format describing the format of the data elements in the buffer.
            </param>
            <param name="offset">
            An offset in bytes from the base address of the buffer. Accesses to
            the buffer view from shaders use addressing that is relative to
            this starting offset.
            </param>
            <param name="range">
            A size in bytes of the buffer view. If range is equal to
            VK_WHOLE_SIZE, the range from offset to the end of the buffer is
            used. If VK_WHOLE_SIZE is used and the remaining size of the buffer
            is not a multiple of the element size of format, then the nearest
            smaller multiple is used.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.CreateImage(SharpVk.ImageType,SharpVk.Format,SharpVk.Extent3D,System.UInt32,System.UInt32,SharpVk.SampleCountFlags,SharpVk.ImageTiling,SharpVk.ImageUsageFlags,SharpVk.SharingMode,System.Nullable{SharpVk.ArrayProxy{System.UInt32}},SharpVk.ImageLayout,System.Nullable{SharpVk.ImageCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a new image object.
            </summary>
            <param name="flags">
            A bitmask describing additional parameters of the image. See
            ImageCreateFlagBits below for a description of the supported bits.
            </param>
            <param name="imageType">
            A ImageType specifying the basic dimensionality of the image, as
            described below. Layers in array textures do not count as a
            dimension for the purposes of the image type.
            </param>
            <param name="format">
            A Format describing the format and type of the data elements that
            will be contained in the image.
            </param>
            <param name="extent">
            A Extent3D describing the number of data elements in each dimension
            of the base level.
            </param>
            <param name="mipLevels">
            mipLevels describes the number of levels of detail available for
            minified sampling of the image.
            </param>
            <param name="arrayLayers">
            The number of layers in the image.
            </param>
            <param name="samples">
            The number of sub-data element samples in the image as defined in
            SampleCountFlagBits. See Multisampling.
            </param>
            <param name="tiling">
            A ImageTiling specifying the tiling arrangement of the data
            elements in memory, as described below.
            </param>
            <param name="usage">
            A bitmask describing the intended usage of the image. See
            ImageUsageFlagBits below for a description of the supported bits.
            </param>
            <param name="sharingMode">
            The sharing mode of the image when it will be accessed by multiple
            queue families, and must be one of the values described for
            SharingMode in the Resource Sharing section below.
            </param>
            <param name="initialLayout">
            initialLayout selects the initial ImageLayout state of all image
            subresources of the image. See Image Layouts. initialLayout must be
            VK_IMAGE_LAYOUT_UNDEFINED or VK_IMAGE_LAYOUT_PREINITIALIZED.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.CreateImageView(SharpVk.Image,SharpVk.ImageViewType,SharpVk.Format,SharpVk.ComponentMapping,SharpVk.ImageSubresourceRange,System.Nullable{SharpVk.ImageViewCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create an image view from an existing image.
            </summary>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="image">
            A Image on which the view will be created.
            </param>
            <param name="viewType">
            The type of the image view.
            </param>
            <param name="format">
            A Format describing the format and type used to interpret data
            elements in the image.
            </param>
            <param name="components">
            Specifies a remapping of color components (or of depth or stencil
            components after they have been converted into color components).
            See ComponentMapping.
            </param>
            <param name="subresourceRange">
            A ImageSubresourceRange selecting the set of mipmap levels and
            array layers to be accessible to the view.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.CreateShaderModule(SharpVk.HostSize,System.Nullable{SharpVk.ArrayProxy{System.UInt32}},System.Nullable{SharpVk.ShaderModuleCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Creates a new shader module object.
            </summary>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="codeSize">
            The size, in bytes, of the code pointed to by pCode.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.CreatePipelineCache(System.Nullable{SharpVk.ArrayProxy{System.Byte}},System.Nullable{SharpVk.PipelineCacheCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Creates a new pipeline cache.
            </summary>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.CreateGraphicsPipelines(SharpVk.PipelineCache,System.Nullable{SharpVk.ArrayProxy{SharpVk.GraphicsPipelineCreateInfo}},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create graphics pipelines.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.CreateComputePipelines(SharpVk.PipelineCache,System.Nullable{SharpVk.ArrayProxy{SharpVk.ComputePipelineCreateInfo}},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Creates a new compute pipeline object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.CreatePipelineLayout(System.Nullable{SharpVk.ArrayProxy{SharpVk.DescriptorSetLayout}},System.Nullable{SharpVk.ArrayProxy{SharpVk.PushConstantRange}},System.Nullable{SharpVk.PipelineLayoutCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Creates a new pipeline layout object.
            </summary>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.CreateSampler(SharpVk.Filter,SharpVk.Filter,SharpVk.SamplerMipmapMode,SharpVk.SamplerAddressMode,SharpVk.SamplerAddressMode,SharpVk.SamplerAddressMode,System.Single,System.Boolean,System.Single,System.Boolean,SharpVk.CompareOp,System.Single,System.Single,SharpVk.BorderColor,System.Boolean,System.Nullable{SharpVk.SamplerCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a new sampler object.
            </summary>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="magFilter">
            The magnification filter to apply to lookups.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.CreateDescriptorSetLayout(System.Nullable{SharpVk.ArrayProxy{SharpVk.DescriptorSetLayoutBinding}},System.Nullable{SharpVk.DescriptorSetLayoutCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a new descriptor set layout.
            </summary>
            <param name="flags">
            flags provides options for descriptor set layout creation, and is
            of type DescriptorSetLayoutCreateFlags. Bits which can be set
            include: + --
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.CreateDescriptorPool(System.UInt32,System.Nullable{SharpVk.ArrayProxy{SharpVk.DescriptorPoolSize}},System.Nullable{SharpVk.DescriptorPoolCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Creates a descriptor pool object.
            </summary>
            <param name="flags">
            Specifies certain supported operations on the pool. Bits which can
            be set include: + --
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.AllocateDescriptorSets(SharpVk.DescriptorPool,System.Nullable{SharpVk.ArrayProxy{SharpVk.DescriptorSetLayout}})">
            <summary>
            Allocate one or more descriptor sets.
            </summary>
            <param name="descriptorPool">
            The pool which the sets will be allocated from.
            </param>
        </member>
        <member name="M:SharpVk.Device.UpdateDescriptorSets(System.Nullable{SharpVk.ArrayProxy{SharpVk.WriteDescriptorSet}},System.Nullable{SharpVk.ArrayProxy{SharpVk.CopyDescriptorSet}})">
            <summary>
            Update the contents of a descriptor set object.
            </summary>
        </member>
        <member name="M:SharpVk.Device.CreateFramebuffer(SharpVk.RenderPass,System.Nullable{SharpVk.ArrayProxy{SharpVk.ImageView}},System.UInt32,System.UInt32,System.UInt32,System.Nullable{SharpVk.FramebufferCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a new framebuffer object.
            </summary>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="renderPass">
            A render pass that defines what render passes the framebuffer will
            be compatible with. See Render Pass Compatibility for details.
            </param>
            <param name="width">
            width, height and layers define the dimensions of the framebuffer.
            If the render pass uses multiview, then layers must be one and each
            attachment requires a number of layers that is greater than the
            maximum bit index set in the view mask in the subpasses in which it
            is used.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.CreateRenderPass(System.Nullable{SharpVk.ArrayProxy{SharpVk.AttachmentDescription}},System.Nullable{SharpVk.ArrayProxy{SharpVk.SubpassDescription}},System.Nullable{SharpVk.ArrayProxy{SharpVk.SubpassDependency}},System.Nullable{SharpVk.RenderPassCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a new render pass object.
            </summary>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.CreateCommandPool(System.UInt32,System.Nullable{SharpVk.CommandPoolCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a new command pool object.
            </summary>
            <param name="flags">
            A bitmask indicating usage behavior for the pool and command
            buffers allocated from it. Bits which can be set include: + --
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Device.AllocateCommandBuffers(SharpVk.CommandPool,SharpVk.CommandBufferLevel,System.UInt32)">
            <summary>
            Allocate command buffers from an existing command pool.
            </summary>
            <param name="commandPool">
            The command pool from which the command buffers are allocated.
            </param>
            <param name="level">
            level determines whether the command buffers are primary or
            secondary command buffers. Possible values include: + --
            </param>
        </member>
        <member name="T:SharpVk.DeviceCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DeviceCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.DeviceCreateInfo">
            <summary>
            Structure specifying parameters of a newly created device.
            </summary>
        </member>
        <member name="P:SharpVk.DeviceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.DeviceCreateInfo.QueueCreateInfos">
            <summary>
            An array of DeviceQueueCreateInfo structures describing the queues
            that are requested to be created along with the logical device.
            Refer to the Queue Creation section below for further details.
            </summary>
        </member>
        <member name="P:SharpVk.DeviceCreateInfo.EnabledLayerNames">
            <summary>
            ppEnabledLayerNames is deprecated and ignored. See Device Layer
            Deprecation.
            </summary>
        </member>
        <member name="P:SharpVk.DeviceCreateInfo.EnabledExtensionNames">
            <summary>
            An array of enabledExtensionCount strings containing the names of
            extensions to enable for the created device. See the Extensions
            section for further details.
            </summary>
        </member>
        <member name="P:SharpVk.DeviceCreateInfo.EnabledFeatures">
            <summary>
            Null or a PhysicalDeviceFeatures structure that contains boolean
            indicators of all the features to be enabled. Refer to the Features
            section for further details.
            </summary>
        </member>
        <member name="M:SharpVk.DeviceCreateInfo.MarshalTo(SharpVk.Interop.DeviceCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.DeviceMemory">
            <summary>
            Opaque handle to a device memory object.
            </summary>
        </member>
        <member name="P:SharpVk.DeviceMemory.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.DeviceMemory.Free(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Free GPU memory.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.DeviceMemory.Map(SharpVk.DeviceSize,SharpVk.DeviceSize,System.Nullable{SharpVk.MemoryMapFlags})">
            <summary>
            Map a memory object into application address space.
            </summary>
        </member>
        <member name="M:SharpVk.DeviceMemory.Unmap">
            <summary>
            Unmap a previously mapped memory object.
            </summary>
        </member>
        <member name="M:SharpVk.DeviceMemory.GetCommitment">
            <summary>
            Query the current commitment for a DeviceMemory.
            </summary>
        </member>
        <member name="T:SharpVk.DeviceQueueCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DeviceQueueCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.DeviceQueueCreateInfo">
            <summary>
            Structure specifying parameters of a newly created device queue.
            </summary>
        </member>
        <member name="P:SharpVk.DeviceQueueCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.DeviceQueueCreateInfo.QueueFamilyIndex">
            <summary>
            An unsigned integer indicating the index of the queue family to
            create on this device. This index corresponds to the index of an
            element of the pQueueFamilyProperties array that was returned by
            fname:vkGetPhysicalDeviceQueueFamilyProperties.
            </summary>
        </member>
        <member name="P:SharpVk.DeviceQueueCreateInfo.QueuePriorities">
            <summary>
            An array of queueCount normalized floating point values, specifying
            priorities of work that will be submitted to each created queue.
            See Queue Priority for more information.
            </summary>
        </member>
        <member name="M:SharpVk.DeviceQueueCreateInfo.MarshalTo(SharpVk.Interop.DeviceQueueCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.DeviceSize">
            <summary>
            Represents the size of a block in device memory.
            </summary>
        </member>
        <member name="M:SharpVk.DeviceSize.op_Implicit(System.Int32)~SharpVk.DeviceSize">
            <summary>
            -
            </summary>
        </member>
        <member name="M:SharpVk.DeviceSize.op_Implicit(System.UInt64)~SharpVk.DeviceSize">
            <summary>
            -
            </summary>
        </member>
        <member name="M:SharpVk.DeviceSize.op_Implicit(SharpVk.DeviceSize)~System.UInt64">
            <summary>
            -
            </summary>
        </member>
        <member name="M:SharpVk.DeviceSize.op_Explicit(SharpVk.DeviceSize)~System.UInt32">
            <summary>
            -
            </summary>
        </member>
        <member name="M:SharpVk.DeviceSize.op_Explicit(SharpVk.DeviceSize)~System.Int32">
            <summary>
            -
            </summary>
        </member>
        <member name="M:SharpVk.DeviceSize.ToString">
            <summary>
            -
            </summary>
        </member>
        <member name="T:SharpVk.DispatchIndirectCommand">
            <summary>
            Structure specifying a dispatch indirect command.
            </summary>
        </member>
        <member name="M:SharpVk.DispatchIndirectCommand.#ctor(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DispatchIndirectCommand.X">
            <summary>
            The number of local workgroups to dispatch in the X dimension.
            </summary>
        </member>
        <member name="F:SharpVk.DispatchIndirectCommand.Y">
            <summary>
            The number of local workgroups to dispatch in the Y dimension.
            </summary>
        </member>
        <member name="F:SharpVk.DispatchIndirectCommand.Z">
            <summary>
            The number of local workgroups to dispatch in the Z dimension.
            </summary>
        </member>
        <member name="T:SharpVk.DrawIndexedIndirectCommand">
            <summary>
            Structure specifying a draw indexed indirect command.
            </summary>
        </member>
        <member name="M:SharpVk.DrawIndexedIndirectCommand.#ctor(System.UInt32,System.UInt32,System.UInt32,System.Int32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DrawIndexedIndirectCommand.IndexCount">
            <summary>
            The number of vertices to draw.
            </summary>
        </member>
        <member name="F:SharpVk.DrawIndexedIndirectCommand.InstanceCount">
            <summary>
            The number of instances to draw.
            </summary>
        </member>
        <member name="F:SharpVk.DrawIndexedIndirectCommand.FirstIndex">
            <summary>
            The base index within the index buffer.
            </summary>
        </member>
        <member name="F:SharpVk.DrawIndexedIndirectCommand.VertexOffset">
            <summary>
            The value added to the vertex index before indexing into the vertex
            buffer.
            </summary>
        </member>
        <member name="F:SharpVk.DrawIndexedIndirectCommand.FirstInstance">
            <summary>
            The instance ID of the first instance to draw.
            </summary>
        </member>
        <member name="T:SharpVk.DrawIndirectCommand">
            <summary>
            Structure specifying a draw indirect command.
            </summary>
        </member>
        <member name="M:SharpVk.DrawIndirectCommand.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DrawIndirectCommand.VertexCount">
            <summary>
            The number of vertices to draw.
            </summary>
        </member>
        <member name="F:SharpVk.DrawIndirectCommand.InstanceCount">
            <summary>
            The number of instances to draw.
            </summary>
        </member>
        <member name="F:SharpVk.DrawIndirectCommand.FirstVertex">
            <summary>
            The index of the first vertex to draw.
            </summary>
        </member>
        <member name="F:SharpVk.DrawIndirectCommand.FirstInstance">
            <summary>
            The instance ID of the first instance to draw.
            </summary>
        </member>
        <member name="T:SharpVk.DynamicState">
            <summary>
            Indicate which dynamic state is taken from dynamic state commands.
            </summary>
        </member>
        <member name="F:SharpVk.DynamicState.Viewport">
            <summary>
            Indicates that the pViewports state in
            PipelineViewportStateCreateInfo will be ignored and must be set
            dynamically with flink:vkCmdSetViewport before any draw commands.
            The number of viewports used by a pipeline is still specified by
            the viewportCount member of PipelineViewportStateCreateInfo.
            </summary>
        </member>
        <member name="F:SharpVk.DynamicState.Scissor">
            <summary>
            Indicates that the pScissors state in
            PipelineViewportStateCreateInfo will be ignored and must be set
            dynamically with flink:vkCmdSetScissor before any draw commands.
            The number of scissor rectangles used by a pipeline is still
            specified by the scissorCount member of
            PipelineViewportStateCreateInfo.
            </summary>
        </member>
        <member name="F:SharpVk.DynamicState.LineWidth">
            <summary>
            Indicates that the lineWidth state in
            PipelineRasterizationStateCreateInfo will be ignored and must be
            set dynamically with flink:vkCmdSetLineWidth before any draw
            commands that generate line primitives for the rasterizer.
            </summary>
        </member>
        <member name="F:SharpVk.DynamicState.DepthBias">
            <summary>
            Indicates that the depthBiasConstantFactor, depthBiasClamp and
            depthBiasSlopeFactor states in PipelineRasterizationStateCreateInfo
            will be ignored and must be set dynamically with
            flink:vkCmdSetDepthBias before any draws are performed with
            depthBiasEnable in PipelineRasterizationStateCreateInfo set to
            VK_TRUE.
            </summary>
        </member>
        <member name="F:SharpVk.DynamicState.BlendConstants">
            <summary>
            Indicates that the blendConstants state in
            PipelineColorBlendStateCreateInfo will be ignored and must be set
            dynamically with flink:vkCmdSetBlendConstants before any draws are
            performed with a pipeline state with
            PipelineColorBlendAttachmentState member blendEnable set to VK_TRUE
            and any of the blend functions using a constant blend color.
            </summary>
        </member>
        <member name="F:SharpVk.DynamicState.DepthBounds">
            <summary>
            Indicates that the minDepthBounds and maxDepthBounds states of
            PipelineDepthStencilStateCreateInfo will be ignored and must be set
            dynamically with flink:vkCmdSetDepthBounds before any draws are
            performed with a pipeline state with
            PipelineDepthStencilStateCreateInfo member depthBoundsTestEnable
            set to VK_TRUE.
            </summary>
        </member>
        <member name="F:SharpVk.DynamicState.StencilCompareMask">
            <summary>
            Indicates that the compareMask state in
            PipelineDepthStencilStateCreateInfo for both front and back will be
            ignored and must be set dynamically with
            flink:vkCmdSetStencilCompareMask before any draws are performed
            with a pipeline state with PipelineDepthStencilStateCreateInfo
            member stencilTestEnable set to VK_TRUE
            </summary>
        </member>
        <member name="F:SharpVk.DynamicState.StencilWriteMask">
            <summary>
            Indicates that the writeMask state in
            PipelineDepthStencilStateCreateInfo for both front and back will be
            ignored and must be set dynamically with
            flink:vkCmdSetStencilWriteMask before any draws are performed with
            a pipeline state with PipelineDepthStencilStateCreateInfo member
            stencilTestEnable set to VK_TRUE
            </summary>
        </member>
        <member name="F:SharpVk.DynamicState.StencilReference">
            <summary>
            Indicates that the reference state in
            PipelineDepthStencilStateCreateInfo for both front and back will be
            ignored and must be set dynamically with
            flink:vkCmdSetStencilReference before any draws are performed with
            a pipeline state with PipelineDepthStencilStateCreateInfo member
            stencilTestEnable set to VK_TRUE
            </summary>
        </member>
        <member name="F:SharpVk.DynamicState.ViewportWScalingNv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DynamicState.DiscardRectangleExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.DynamicState.SampleLocationsExt">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Event">
            <summary>
            Opaque handle to a event object.
            </summary>
        </member>
        <member name="P:SharpVk.Event.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Event.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy an event object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Event.GetStatus">
            <summary>
            Retrieve the status of an event object.
            </summary>
        </member>
        <member name="M:SharpVk.Event.Set">
            <summary>
            Set an event to signaled state.
            </summary>
        </member>
        <member name="M:SharpVk.Event.Reset">
            <summary>
            Reset an event to non-signaled state.
            </summary>
        </member>
        <member name="T:SharpVk.EventCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.EventCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.EventCreateInfo">
            <summary>
            Structure specifying parameters of a newly created event.
            </summary>
        </member>
        <member name="P:SharpVk.EventCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="M:SharpVk.EventCreateInfo.MarshalTo(SharpVk.Interop.EventCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SharpVkException">
            <summary>
            The base type for exceptions thrown by the SharpVK library.
            </summary>
        </member>
        <member name="M:SharpVk.SharpVkException.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see
            cref="T:SharpVk.SharpVkException"/> class .
            </summary>
            <param name="message">
            The message that describes the error.
            </param>
        </member>
        <member name="M:SharpVk.SharpVkException.IsError(SharpVk.Result)">
            <summary>
            Returns a value indicating whether the given Vulkan result code
            represents an error.
            </summary>
        </member>
        <member name="M:SharpVk.SharpVkException.Create(SharpVk.Result)">
            <summary>
            Creates and returns a new, specifically-typed exception that
            represents the given result code.
            </summary>
        </member>
        <member name="P:SharpVk.SharpVkException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.UnknownSharpVkException">
            <summary>
            An exception representing a result code not recognised by the SharpVk
            library.
            </summary>
        </member>
        <member name="P:SharpVk.UnknownSharpVkException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.OutOfHostMemoryException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.OutOfHostMemoryException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.OutOfDeviceMemoryException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.OutOfDeviceMemoryException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.InitializationFailedException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.InitializationFailedException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.DeviceLostException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.DeviceLostException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.MemoryMapFailedException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.MemoryMapFailedException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.LayerNotPresentException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.LayerNotPresentException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.ExtensionNotPresentException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.ExtensionNotPresentException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.FeatureNotPresentException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.FeatureNotPresentException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.IncompatibleDriverException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.IncompatibleDriverException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.TooManyObjectsException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.TooManyObjectsException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.FormatNotSupportedException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.FormatNotSupportedException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.FragmentedPoolException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.FragmentedPoolException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.SurfaceLostKhrException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SurfaceLostKhrException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.NativeWindowInUseKhrException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NativeWindowInUseKhrException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.OutOfDateKhrException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.OutOfDateKhrException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.IncompatibleDisplayKhrException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.IncompatibleDisplayKhrException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.ValidationFailedExtException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.ValidationFailedExtException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.InvalidShaderNvException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.InvalidShaderNvException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.OutOfPoolMemoryKhrException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.OutOfPoolMemoryKhrException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.InvalidExternalHandleKhrException">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.InvalidExternalHandleKhrException.ResultCode">
            <summary>
            The Vulkan result code represented by this exception.
            </summary>
        </member>
        <member name="T:SharpVk.ExtensionProperties">
            <summary>
            Structure specifying a extension properties.
            </summary>
        </member>
        <member name="P:SharpVk.ExtensionProperties.ExtensionName">
            <summary>
            A null-terminated string specifying the name of the extension.
            </summary>
        </member>
        <member name="P:SharpVk.ExtensionProperties.SpecVersion">
            <summary>
            The version of this extension. It is an integer, incremented with
            backward compatible changes.
            </summary>
        </member>
        <member name="M:SharpVk.ExtensionProperties.MarshalFrom(SharpVk.Interop.ExtensionProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Extent2D">
            <summary>
            Structure specifying a two-dimensional extent.
            </summary>
        </member>
        <member name="M:SharpVk.Extent2D.#ctor(System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Extent2D.Width">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Extent2D.Height">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Extent3D">
            <summary>
            Structure specifying a three-dimensional extent.
            </summary>
        </member>
        <member name="M:SharpVk.Extent3D.#ctor(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Extent3D.Width">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Extent3D.Height">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Extent3D.Depth">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Fence">
            <summary>
            Opaque handle to a fence object.
            </summary>
        </member>
        <member name="P:SharpVk.Fence.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Fence.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a fence object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Fence.GetStatus">
            <summary>
            Return the status of a fence.
            </summary>
        </member>
        <member name="T:SharpVk.FenceCreateFlags">
            <summary>
            Bitmask specifying initial state and behavior of a fence.
            </summary>
        </member>
        <member name="F:SharpVk.FenceCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FenceCreateFlags.Signaled">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.FenceCreateInfo">
            <summary>
            Structure specifying parameters of a newly created fence.
            </summary>
        </member>
        <member name="P:SharpVk.FenceCreateInfo.Flags">
            <summary>
            flags defines the initial state and behavior of the fence. Bits
            which can be set include: + --
            </summary>
        </member>
        <member name="M:SharpVk.FenceCreateInfo.MarshalTo(SharpVk.Interop.FenceCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Filter">
            <summary>
            Specify filters used for texture lookups.
            </summary>
        </member>
        <member name="F:SharpVk.Filter.Nearest">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Filter.Linear">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Filter.CubicImg">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Format">
            <summary>
            Available image formats.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Undefined">
            <summary>
            VK_FORMAT_UNDEFINED:: The format is not specified.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R4g4UnormPack8">
            <summary>
            VK_FORMAT_R4G4_UNORM_PACK8:: A two-component, 8-bit packed unsigned
            normalized format that has a 4-bit R component in bits 4..7, and a
            4-bit G component in bits 0..3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R4g4b4a4UnormPack16">
            <summary>
            VK_FORMAT_R4G4B4A4_UNORM_PACK16:: A four-component, 16-bit packed
            unsigned normalized format that has a 4-bit R component in bits
            12..15, a 4-bit G component in bits 8..11, a 4-bit B component in
            bits 4..7, and a 4-bit A component in bits 0..3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B4g4r4a4UnormPack16">
            <summary>
            VK_FORMAT_B4G4R4A4_UNORM_PACK16:: A four-component, 16-bit packed
            unsigned normalized format that has a 4-bit B component in bits
            12..15, a 4-bit G component in bits 8..11, a 4-bit R component in
            bits 4..7, and a 4-bit A component in bits 0..3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R5g6b5UnormPack16">
            <summary>
            VK_FORMAT_R5G6B5_UNORM_PACK16:: A three-component, 16-bit packed
            unsigned normalized format that has a 5-bit R component in bits
            11..15, a 6-bit G component in bits 5..10, and a 5-bit B component
            in bits 0..4.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B5g6r5UnormPack16">
            <summary>
            VK_FORMAT_B5G6R5_UNORM_PACK16:: A three-component, 16-bit packed
            unsigned normalized format that has a 5-bit B component in bits
            11..15, a 6-bit G component in bits 5..10, and a 5-bit R component
            in bits 0..4.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R5g5b5a1UnormPack16">
            <summary>
            VK_FORMAT_R5G5B5A1_UNORM_PACK16:: A four-component, 16-bit packed
            unsigned normalized format that has a 5-bit R component in bits
            11..15, a 5-bit G component in bits 6..10, a 5-bit B component in
            bits 1..5, and a 1-bit A component in bit 0.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B5g5r5a1UnormPack16">
            <summary>
            VK_FORMAT_B5G5R5A1_UNORM_PACK16:: A four-component, 16-bit packed
            unsigned normalized format that has a 5-bit B component in bits
            11..15, a 5-bit G component in bits 6..10, a 5-bit R component in
            bits 1..5, and a 1-bit A component in bit 0.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A1r5g5b5UnormPack16">
            <summary>
            VK_FORMAT_A1R5G5B5_UNORM_PACK16:: A four-component, 16-bit packed
            unsigned normalized format that has a 1-bit A component in bit 15,
            a 5-bit R component in bits 10..14, a 5-bit G component in bits
            5..9, and a 5-bit B component in bits 0..4.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8Unorm">
            <summary>
            VK_FORMAT_R8_UNORM:: A one-component, 8-bit unsigned normalized
            format that has a single 8-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8Snorm">
            <summary>
            VK_FORMAT_R8_SNORM:: A one-component, 8-bit signed normalized
            format that has a single 8-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8Uscaled">
            <summary>
            VK_FORMAT_R8_USCALED:: A one-component, 8-bit unsigned scaled
            integer format that has a single 8-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8Sscaled">
            <summary>
            VK_FORMAT_R8_SSCALED:: A one-component, 8-bit signed scaled integer
            format that has a single 8-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8Uint">
            <summary>
            VK_FORMAT_R8_UINT:: A one-component, 8-bit unsigned integer format
            that has a single 8-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8Sint">
            <summary>
            VK_FORMAT_R8_SINT:: A one-component, 8-bit signed integer format
            that has a single 8-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8Srgb">
            <summary>
            VK_FORMAT_R8_SRGB:: A one-component, 8-bit unsigned normalized
            format that has a single 8-bit R component stored with sRGB
            nonlinear encoding.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8Unorm">
            <summary>
            VK_FORMAT_R8G8_UNORM:: A two-component, 16-bit unsigned normalized
            format that has an 8-bit R component in byte 0, and an 8-bit G
            component in byte 1.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8Snorm">
            <summary>
            VK_FORMAT_R8G8_SNORM:: A two-component, 16-bit signed normalized
            format that has an 8-bit R component in byte 0, and an 8-bit G
            component in byte 1.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8Uscaled">
            <summary>
            VK_FORMAT_R8G8_USCALED:: A two-component, 16-bit unsigned scaled
            integer format that has an 8-bit R component in byte 0, and an
            8-bit G component in byte 1.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8Sscaled">
            <summary>
            VK_FORMAT_R8G8_SSCALED:: A two-component, 16-bit signed scaled
            integer format that has an 8-bit R component in byte 0, and an
            8-bit G component in byte 1.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8Uint">
            <summary>
            VK_FORMAT_R8G8_UINT:: A two-component, 16-bit unsigned integer
            format that has an 8-bit R component in byte 0, and an 8-bit G
            component in byte 1.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8Sint">
            <summary>
            VK_FORMAT_R8G8_SINT:: A two-component, 16-bit signed integer format
            that has an 8-bit R component in byte 0, and an 8-bit G component
            in byte 1.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8Srgb">
            <summary>
            VK_FORMAT_R8G8_SRGB:: A two-component, 16-bit unsigned normalized
            format that has an 8-bit R component stored with sRGB nonlinear
            encoding in byte 0, and an 8-bit G component stored with sRGB
            nonlinear encoding in byte 1.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8b8Unorm">
            <summary>
            VK_FORMAT_R8G8B8_UNORM:: A three-component, 24-bit unsigned
            normalized format that has an 8-bit R component in byte 0, an 8-bit
            G component in byte 1, and an 8-bit B component in byte 2.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8b8Snorm">
            <summary>
            VK_FORMAT_R8G8B8_SNORM:: A three-component, 24-bit signed
            normalized format that has an 8-bit R component in byte 0, an 8-bit
            G component in byte 1, and an 8-bit B component in byte 2.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8b8Uscaled">
            <summary>
            VK_FORMAT_R8G8B8_USCALED:: A three-component, 24-bit unsigned
            scaled format that has an 8-bit R component in byte 0, an 8-bit G
            component in byte 1, and an 8-bit B component in byte 2.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8b8Sscaled">
            <summary>
            VK_FORMAT_R8G8B8_SSCALED:: A three-component, 24-bit signed scaled
            format that has an 8-bit R component in byte 0, an 8-bit G
            component in byte 1, and an 8-bit B component in byte 2.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8b8Uint">
            <summary>
            VK_FORMAT_R8G8B8_UINT:: A three-component, 24-bit unsigned integer
            format that has an 8-bit R component in byte 0, an 8-bit G
            component in byte 1, and an 8-bit B component in byte 2.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8b8Sint">
            <summary>
            VK_FORMAT_R8G8B8_SINT:: A three-component, 24-bit signed integer
            format that has an 8-bit R component in byte 0, an 8-bit G
            component in byte 1, and an 8-bit B component in byte 2.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8b8Srgb">
            <summary>
            VK_FORMAT_R8G8B8_SRGB:: A three-component, 24-bit unsigned
            normalized format that has an 8-bit R component stored with sRGB
            nonlinear encoding in byte 0, an 8-bit G component stored with sRGB
            nonlinear encoding in byte 1, and an 8-bit B component stored with
            sRGB nonlinear encoding in byte 2.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B8g8r8Unorm">
            <summary>
            VK_FORMAT_B8G8R8_UNORM:: A three-component, 24-bit unsigned
            normalized format that has an 8-bit B component in byte 0, an 8-bit
            G component in byte 1, and an 8-bit R component in byte 2.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B8g8r8Snorm">
            <summary>
            VK_FORMAT_B8G8R8_SNORM:: A three-component, 24-bit signed
            normalized format that has an 8-bit B component in byte 0, an 8-bit
            G component in byte 1, and an 8-bit R component in byte 2.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B8g8r8Uscaled">
            <summary>
            VK_FORMAT_B8G8R8_USCALED:: A three-component, 24-bit unsigned
            scaled format that has an 8-bit B component in byte 0, an 8-bit G
            component in byte 1, and an 8-bit R component in byte 2.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B8g8r8Sscaled">
            <summary>
            VK_FORMAT_B8G8R8_SSCALED:: A three-component, 24-bit signed scaled
            format that has an 8-bit B component in byte 0, an 8-bit G
            component in byte 1, and an 8-bit R component in byte 2.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B8g8r8Uint">
            <summary>
            VK_FORMAT_B8G8R8_UINT:: A three-component, 24-bit unsigned integer
            format that has an 8-bit B component in byte 0, an 8-bit G
            component in byte 1, and an 8-bit R component in byte 2.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B8g8r8Sint">
            <summary>
            VK_FORMAT_B8G8R8_SINT:: A three-component, 24-bit signed integer
            format that has an 8-bit B component in byte 0, an 8-bit G
            component in byte 1, and an 8-bit R component in byte 2.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B8g8r8Srgb">
            <summary>
            VK_FORMAT_B8G8R8_SRGB:: A three-component, 24-bit unsigned
            normalized format that has an 8-bit B component stored with sRGB
            nonlinear encoding in byte 0, an 8-bit G component stored with sRGB
            nonlinear encoding in byte 1, and an 8-bit R component stored with
            sRGB nonlinear encoding in byte 2.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8b8a8Unorm">
            <summary>
            VK_FORMAT_R8G8B8A8_UNORM:: A four-component, 32-bit unsigned
            normalized format that has an 8-bit R component in byte 0, an 8-bit
            G component in byte 1, an 8-bit B component in byte 2, and an 8-bit
            A component in byte 3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8b8a8Snorm">
            <summary>
            VK_FORMAT_R8G8B8A8_SNORM:: A four-component, 32-bit signed
            normalized format that has an 8-bit R component in byte 0, an 8-bit
            G component in byte 1, an 8-bit B component in byte 2, and an 8-bit
            A component in byte 3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8b8a8Uscaled">
            <summary>
            VK_FORMAT_R8G8B8A8_USCALED:: A four-component, 32-bit unsigned
            scaled format that has an 8-bit R component in byte 0, an 8-bit G
            component in byte 1, an 8-bit B component in byte 2, and an 8-bit A
            component in byte 3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8b8a8Sscaled">
            <summary>
            VK_FORMAT_R8G8B8A8_SSCALED:: A four-component, 32-bit signed scaled
            format that has an 8-bit R component in byte 0, an 8-bit G
            component in byte 1, an 8-bit B component in byte 2, and an 8-bit A
            component in byte 3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8b8a8Uint">
            <summary>
            VK_FORMAT_R8G8B8A8_UINT:: A four-component, 32-bit unsigned integer
            format that has an 8-bit R component in byte 0, an 8-bit G
            component in byte 1, an 8-bit B component in byte 2, and an 8-bit A
            component in byte 3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8b8a8Sint">
            <summary>
            VK_FORMAT_R8G8B8A8_SINT:: A four-component, 32-bit signed integer
            format that has an 8-bit R component in byte 0, an 8-bit G
            component in byte 1, an 8-bit B component in byte 2, and an 8-bit A
            component in byte 3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R8g8b8a8Srgb">
            <summary>
            VK_FORMAT_R8G8B8A8_SRGB:: A four-component, 32-bit unsigned
            normalized format that has an 8-bit R component stored with sRGB
            nonlinear encoding in byte 0, an 8-bit G component stored with sRGB
            nonlinear encoding in byte 1, an 8-bit B component stored with sRGB
            nonlinear encoding in byte 2, and an 8-bit A component in byte 3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B8g8r8a8Unorm">
            <summary>
            VK_FORMAT_B8G8R8A8_UNORM:: A four-component, 32-bit unsigned
            normalized format that has an 8-bit B component in byte 0, an 8-bit
            G component in byte 1, an 8-bit R component in byte 2, and an 8-bit
            A component in byte 3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B8g8r8a8Snorm">
            <summary>
            VK_FORMAT_B8G8R8A8_SNORM:: A four-component, 32-bit signed
            normalized format that has an 8-bit B component in byte 0, an 8-bit
            G component in byte 1, an 8-bit R component in byte 2, and an 8-bit
            A component in byte 3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B8g8r8a8Uscaled">
            <summary>
            VK_FORMAT_B8G8R8A8_USCALED:: A four-component, 32-bit unsigned
            scaled format that has an 8-bit B component in byte 0, an 8-bit G
            component in byte 1, an 8-bit R component in byte 2, and an 8-bit A
            component in byte 3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B8g8r8a8Sscaled">
            <summary>
            VK_FORMAT_B8G8R8A8_SSCALED:: A four-component, 32-bit signed scaled
            format that has an 8-bit B component in byte 0, an 8-bit G
            component in byte 1, an 8-bit R component in byte 2, and an 8-bit A
            component in byte 3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B8g8r8a8Uint">
            <summary>
            VK_FORMAT_B8G8R8A8_UINT:: A four-component, 32-bit unsigned integer
            format that has an 8-bit B component in byte 0, an 8-bit G
            component in byte 1, an 8-bit R component in byte 2, and an 8-bit A
            component in byte 3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B8g8r8a8Sint">
            <summary>
            VK_FORMAT_B8G8R8A8_SINT:: A four-component, 32-bit signed integer
            format that has an 8-bit B component in byte 0, an 8-bit G
            component in byte 1, an 8-bit R component in byte 2, and an 8-bit A
            component in byte 3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B8g8r8a8Srgb">
            <summary>
            VK_FORMAT_B8G8R8A8_SRGB:: A four-component, 32-bit unsigned
            normalized format that has an 8-bit B component stored with sRGB
            nonlinear encoding in byte 0, an 8-bit G component stored with sRGB
            nonlinear encoding in byte 1, an 8-bit R component stored with sRGB
            nonlinear encoding in byte 2, and an 8-bit A component in byte 3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A8b8g8r8UnormPack32">
            <summary>
            VK_FORMAT_A8B8G8R8_UNORM_PACK32:: A four-component, 32-bit packed
            unsigned normalized format that has an 8-bit A component in bits
            24..31, an 8-bit B component in bits 16..23, an 8-bit G component
            in bits 8..15, and an 8-bit R component in bits 0..7.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A8b8g8r8SnormPack32">
            <summary>
            VK_FORMAT_A8B8G8R8_SNORM_PACK32:: A four-component, 32-bit packed
            signed normalized format that has an 8-bit A component in bits
            24..31, an 8-bit B component in bits 16..23, an 8-bit G component
            in bits 8..15, and an 8-bit R component in bits 0..7.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A8b8g8r8UscaledPack32">
            <summary>
            VK_FORMAT_A8B8G8R8_USCALED_PACK32:: A four-component, 32-bit packed
            unsigned scaled integer format that has an 8-bit A component in
            bits 24..31, an 8-bit B component in bits 16..23, an 8-bit G
            component in bits 8..15, and an 8-bit R component in bits 0..7.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A8b8g8r8SscaledPack32">
            <summary>
            VK_FORMAT_A8B8G8R8_SSCALED_PACK32:: A four-component, 32-bit packed
            signed scaled integer format that has an 8-bit A component in bits
            24..31, an 8-bit B component in bits 16..23, an 8-bit G component
            in bits 8..15, and an 8-bit R component in bits 0..7.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A8b8g8r8UintPack32">
            <summary>
            VK_FORMAT_A8B8G8R8_UINT_PACK32:: A four-component, 32-bit packed
            unsigned integer format that has an 8-bit A component in bits
            24..31, an 8-bit B component in bits 16..23, an 8-bit G component
            in bits 8..15, and an 8-bit R component in bits 0..7.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A8b8g8r8SintPack32">
            <summary>
            VK_FORMAT_A8B8G8R8_SINT_PACK32:: A four-component, 32-bit packed
            signed integer format that has an 8-bit A component in bits 24..31,
            an 8-bit B component in bits 16..23, an 8-bit G component in bits
            8..15, and an 8-bit R component in bits 0..7.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A8b8g8r8SrgbPack32">
            <summary>
            VK_FORMAT_A8B8G8R8_SRGB_PACK32:: A four-component, 32-bit packed
            unsigned normalized format that has an 8-bit A component in bits
            24..31, an 8-bit B component stored with sRGB nonlinear encoding in
            bits 16..23, an 8-bit G component stored with sRGB nonlinear
            encoding in bits 8..15, and an 8-bit R component stored with sRGB
            nonlinear encoding in bits 0..7.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A2r10g10b10UnormPack32">
            <summary>
            VK_FORMAT_A2R10G10B10_UNORM_PACK32:: A four-component, 32-bit
            packed unsigned normalized format that has a 2-bit A component in
            bits 30..31, a 10-bit R component in bits 20..29, a 10-bit G
            component in bits 10..19, and a 10-bit B component in bits 0..9.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A2r10g10b10SnormPack32">
            <summary>
            VK_FORMAT_A2R10G10B10_SNORM_PACK32:: A four-component, 32-bit
            packed signed normalized format that has a 2-bit A component in
            bits 30..31, a 10-bit R component in bits 20..29, a 10-bit G
            component in bits 10..19, and a 10-bit B component in bits 0..9.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A2r10g10b10UscaledPack32">
            <summary>
            VK_FORMAT_A2R10G10B10_USCALED_PACK32:: A four-component, 32-bit
            packed unsigned scaled integer format that has a 2-bit A component
            in bits 30..31, a 10-bit R component in bits 20..29, a 10-bit G
            component in bits 10..19, and a 10-bit B component in bits 0..9.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A2r10g10b10SscaledPack32">
            <summary>
            VK_FORMAT_A2R10G10B10_SSCALED_PACK32:: A four-component, 32-bit
            packed signed scaled integer format that has a 2-bit A component in
            bits 30..31, a 10-bit R component in bits 20..29, a 10-bit G
            component in bits 10..19, and a 10-bit B component in bits 0..9.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A2r10g10b10UintPack32">
            <summary>
            VK_FORMAT_A2R10G10B10_UINT_PACK32:: A four-component, 32-bit packed
            unsigned integer format that has a 2-bit A component in bits
            30..31, a 10-bit R component in bits 20..29, a 10-bit G component
            in bits 10..19, and a 10-bit B component in bits 0..9.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A2r10g10b10SintPack32">
            <summary>
            VK_FORMAT_A2R10G10B10_SINT_PACK32:: A four-component, 32-bit packed
            signed integer format that has a 2-bit A component in bits 30..31,
            a 10-bit R component in bits 20..29, a 10-bit G component in bits
            10..19, and a 10-bit B component in bits 0..9.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A2b10g10r10UnormPack32">
            <summary>
            VK_FORMAT_A2B10G10R10_UNORM_PACK32:: A four-component, 32-bit
            packed unsigned normalized format that has a 2-bit A component in
            bits 30..31, a 10-bit B component in bits 20..29, a 10-bit G
            component in bits 10..19, and a 10-bit R component in bits 0..9.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A2b10g10r10SnormPack32">
            <summary>
            VK_FORMAT_A2B10G10R10_SNORM_PACK32:: A four-component, 32-bit
            packed signed normalized format that has a 2-bit A component in
            bits 30..31, a 10-bit B component in bits 20..29, a 10-bit G
            component in bits 10..19, and a 10-bit R component in bits 0..9.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A2b10g10r10UscaledPack32">
            <summary>
            VK_FORMAT_A2B10G10R10_USCALED_PACK32:: A four-component, 32-bit
            packed unsigned scaled integer format that has a 2-bit A component
            in bits 30..31, a 10-bit B component in bits 20..29, a 10-bit G
            component in bits 10..19, and a 10-bit R component in bits 0..9.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A2b10g10r10SscaledPack32">
            <summary>
            VK_FORMAT_A2B10G10R10_SSCALED_PACK32:: A four-component, 32-bit
            packed signed scaled integer format that has a 2-bit A component in
            bits 30..31, a 10-bit B component in bits 20..29, a 10-bit G
            component in bits 10..19, and a 10-bit R component in bits 0..9.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A2b10g10r10UintPack32">
            <summary>
            VK_FORMAT_A2B10G10R10_UINT_PACK32:: A four-component, 32-bit packed
            unsigned integer format that has a 2-bit A component in bits
            30..31, a 10-bit B component in bits 20..29, a 10-bit G component
            in bits 10..19, and a 10-bit R component in bits 0..9.
            </summary>
        </member>
        <member name="F:SharpVk.Format.A2b10g10r10SintPack32">
            <summary>
            VK_FORMAT_A2B10G10R10_SINT_PACK32:: A four-component, 32-bit packed
            signed integer format that has a 2-bit A component in bits 30..31,
            a 10-bit B component in bits 20..29, a 10-bit G component in bits
            10..19, and a 10-bit R component in bits 0..9.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16Unorm">
            <summary>
            VK_FORMAT_R16_UNORM:: A one-component, 16-bit unsigned normalized
            format that has a single 16-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16Snorm">
            <summary>
            VK_FORMAT_R16_SNORM:: A one-component, 16-bit signed normalized
            format that has a single 16-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16Uscaled">
            <summary>
            VK_FORMAT_R16_USCALED:: A one-component, 16-bit unsigned scaled
            integer format that has a single 16-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16Sscaled">
            <summary>
            VK_FORMAT_R16_SSCALED:: A one-component, 16-bit signed scaled
            integer format that has a single 16-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16Uint">
            <summary>
            VK_FORMAT_R16_UINT:: A one-component, 16-bit unsigned integer
            format that has a single 16-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16Sint">
            <summary>
            VK_FORMAT_R16_SINT:: A one-component, 16-bit signed integer format
            that has a single 16-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16Sfloat">
            <summary>
            VK_FORMAT_R16_SFLOAT:: A one-component, 16-bit signed
            floating-point format that has a single 16-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16Unorm">
            <summary>
            VK_FORMAT_R16G16_UNORM:: A two-component, 32-bit unsigned
            normalized format that has a 16-bit R component in bytes 0..1, and
            a 16-bit G component in bytes 2..3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16Snorm">
            <summary>
            VK_FORMAT_R16G16_SNORM:: A two-component, 32-bit signed normalized
            format that has a 16-bit R component in bytes 0..1, and a 16-bit G
            component in bytes 2..3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16Uscaled">
            <summary>
            VK_FORMAT_R16G16_USCALED:: A two-component, 32-bit unsigned scaled
            integer format that has a 16-bit R component in bytes 0..1, and a
            16-bit G component in bytes 2..3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16Sscaled">
            <summary>
            VK_FORMAT_R16G16_SSCALED:: A two-component, 32-bit signed scaled
            integer format that has a 16-bit R component in bytes 0..1, and a
            16-bit G component in bytes 2..3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16Uint">
            <summary>
            VK_FORMAT_R16G16_UINT:: A two-component, 32-bit unsigned integer
            format that has a 16-bit R component in bytes 0..1, and a 16-bit G
            component in bytes 2..3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16Sint">
            <summary>
            VK_FORMAT_R16G16_SINT:: A two-component, 32-bit signed integer
            format that has a 16-bit R component in bytes 0..1, and a 16-bit G
            component in bytes 2..3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16Sfloat">
            <summary>
            VK_FORMAT_R16G16_SFLOAT:: A two-component, 32-bit signed
            floating-point format that has a 16-bit R component in bytes 0..1,
            and a 16-bit G component in bytes 2..3.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16b16Unorm">
            <summary>
            VK_FORMAT_R16G16B16_UNORM:: A three-component, 48-bit unsigned
            normalized format that has a 16-bit R component in bytes 0..1, a
            16-bit G component in bytes 2..3, and a 16-bit B component in bytes
            4..5.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16b16Snorm">
            <summary>
            VK_FORMAT_R16G16B16_SNORM:: A three-component, 48-bit signed
            normalized format that has a 16-bit R component in bytes 0..1, a
            16-bit G component in bytes 2..3, and a 16-bit B component in bytes
            4..5.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16b16Uscaled">
            <summary>
            VK_FORMAT_R16G16B16_USCALED:: A three-component, 48-bit unsigned
            scaled integer format that has a 16-bit R component in bytes 0..1,
            a 16-bit G component in bytes 2..3, and a 16-bit B component in
            bytes 4..5.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16b16Sscaled">
            <summary>
            VK_FORMAT_R16G16B16_SSCALED:: A three-component, 48-bit signed
            scaled integer format that has a 16-bit R component in bytes 0..1,
            a 16-bit G component in bytes 2..3, and a 16-bit B component in
            bytes 4..5.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16b16Uint">
            <summary>
            VK_FORMAT_R16G16B16_UINT:: A three-component, 48-bit unsigned
            integer format that has a 16-bit R component in bytes 0..1, a
            16-bit G component in bytes 2..3, and a 16-bit B component in bytes
            4..5.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16b16Sint">
            <summary>
            VK_FORMAT_R16G16B16_SINT:: A three-component, 48-bit signed integer
            format that has a 16-bit R component in bytes 0..1, a 16-bit G
            component in bytes 2..3, and a 16-bit B component in bytes 4..5.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16b16Sfloat">
            <summary>
            VK_FORMAT_R16G16B16_SFLOAT:: A three-component, 48-bit signed
            floating-point format that has a 16-bit R component in bytes 0..1,
            a 16-bit G component in bytes 2..3, and a 16-bit B component in
            bytes 4..5.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16b16a16Unorm">
            <summary>
            VK_FORMAT_R16G16B16A16_UNORM:: A four-component, 64-bit unsigned
            normalized format that has a 16-bit R component in bytes 0..1, a
            16-bit G component in bytes 2..3, a 16-bit B component in bytes
            4..5, and a 16-bit A component in bytes 6..7.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16b16a16Snorm">
            <summary>
            VK_FORMAT_R16G16B16A16_SNORM:: A four-component, 64-bit signed
            normalized format that has a 16-bit R component in bytes 0..1, a
            16-bit G component in bytes 2..3, a 16-bit B component in bytes
            4..5, and a 16-bit A component in bytes 6..7.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16b16a16Uscaled">
            <summary>
            VK_FORMAT_R16G16B16A16_USCALED:: A four-component, 64-bit unsigned
            scaled integer format that has a 16-bit R component in bytes 0..1,
            a 16-bit G component in bytes 2..3, a 16-bit B component in bytes
            4..5, and a 16-bit A component in bytes 6..7.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16b16a16Sscaled">
            <summary>
            VK_FORMAT_R16G16B16A16_SSCALED:: A four-component, 64-bit signed
            scaled integer format that has a 16-bit R component in bytes 0..1,
            a 16-bit G component in bytes 2..3, a 16-bit B component in bytes
            4..5, and a 16-bit A component in bytes 6..7.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16b16a16Uint">
            <summary>
            VK_FORMAT_R16G16B16A16_UINT:: A four-component, 64-bit unsigned
            integer format that has a 16-bit R component in bytes 0..1, a
            16-bit G component in bytes 2..3, a 16-bit B component in bytes
            4..5, and a 16-bit A component in bytes 6..7.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16b16a16Sint">
            <summary>
            VK_FORMAT_R16G16B16A16_SINT:: A four-component, 64-bit signed
            integer format that has a 16-bit R component in bytes 0..1, a
            16-bit G component in bytes 2..3, a 16-bit B component in bytes
            4..5, and a 16-bit A component in bytes 6..7.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R16g16b16a16Sfloat">
            <summary>
            VK_FORMAT_R16G16B16A16_SFLOAT:: A four-component, 64-bit signed
            floating-point format that has a 16-bit R component in bytes 0..1,
            a 16-bit G component in bytes 2..3, a 16-bit B component in bytes
            4..5, and a 16-bit A component in bytes 6..7.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R32Uint">
            <summary>
            VK_FORMAT_R32_UINT:: A one-component, 32-bit unsigned integer
            format that has a single 32-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R32Sint">
            <summary>
            VK_FORMAT_R32_SINT:: A one-component, 32-bit signed integer format
            that has a single 32-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R32Sfloat">
            <summary>
            VK_FORMAT_R32_SFLOAT:: A one-component, 32-bit signed
            floating-point format that has a single 32-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R32g32Uint">
            <summary>
            VK_FORMAT_R32G32_UINT:: A two-component, 64-bit unsigned integer
            format that has a 32-bit R component in bytes 0..3, and a 32-bit G
            component in bytes 4..7.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R32g32Sint">
            <summary>
            VK_FORMAT_R32G32_SINT:: A two-component, 64-bit signed integer
            format that has a 32-bit R component in bytes 0..3, and a 32-bit G
            component in bytes 4..7.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R32g32Sfloat">
            <summary>
            VK_FORMAT_R32G32_SFLOAT:: A two-component, 64-bit signed
            floating-point format that has a 32-bit R component in bytes 0..3,
            and a 32-bit G component in bytes 4..7.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R32g32b32Uint">
            <summary>
            VK_FORMAT_R32G32B32_UINT:: A three-component, 96-bit unsigned
            integer format that has a 32-bit R component in bytes 0..3, a
            32-bit G component in bytes 4..7, and a 32-bit B component in bytes
            8..11.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R32g32b32Sint">
            <summary>
            VK_FORMAT_R32G32B32_SINT:: A three-component, 96-bit signed integer
            format that has a 32-bit R component in bytes 0..3, a 32-bit G
            component in bytes 4..7, and a 32-bit B component in bytes 8..11.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R32g32b32Sfloat">
            <summary>
            VK_FORMAT_R32G32B32_SFLOAT:: A three-component, 96-bit signed
            floating-point format that has a 32-bit R component in bytes 0..3,
            a 32-bit G component in bytes 4..7, and a 32-bit B component in
            bytes 8..11.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R32g32b32a32Uint">
            <summary>
            VK_FORMAT_R32G32B32A32_UINT:: A four-component, 128-bit unsigned
            integer format that has a 32-bit R component in bytes 0..3, a
            32-bit G component in bytes 4..7, a 32-bit B component in bytes
            8..11, and a 32-bit A component in bytes 12..15.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R32g32b32a32Sint">
            <summary>
            VK_FORMAT_R32G32B32A32_SINT:: A four-component, 128-bit signed
            integer format that has a 32-bit R component in bytes 0..3, a
            32-bit G component in bytes 4..7, a 32-bit B component in bytes
            8..11, and a 32-bit A component in bytes 12..15.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R32g32b32a32Sfloat">
            <summary>
            VK_FORMAT_R32G32B32A32_SFLOAT:: A four-component, 128-bit signed
            floating-point format that has a 32-bit R component in bytes 0..3,
            a 32-bit G component in bytes 4..7, a 32-bit B component in bytes
            8..11, and a 32-bit A component in bytes 12..15.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R64Uint">
            <summary>
            VK_FORMAT_R64_UINT:: A one-component, 64-bit unsigned integer
            format that has a single 64-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R64Sint">
            <summary>
            VK_FORMAT_R64_SINT:: A one-component, 64-bit signed integer format
            that has a single 64-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R64Sfloat">
            <summary>
            VK_FORMAT_R64_SFLOAT:: A one-component, 64-bit signed
            floating-point format that has a single 64-bit R component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R64g64Uint">
            <summary>
            VK_FORMAT_R64G64_UINT:: A two-component, 128-bit unsigned integer
            format that has a 64-bit R component in bytes 0..7, and a 64-bit G
            component in bytes 8..15.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R64g64Sint">
            <summary>
            VK_FORMAT_R64G64_SINT:: A two-component, 128-bit signed integer
            format that has a 64-bit R component in bytes 0..7, and a 64-bit G
            component in bytes 8..15.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R64g64Sfloat">
            <summary>
            VK_FORMAT_R64G64_SFLOAT:: A two-component, 128-bit signed
            floating-point format that has a 64-bit R component in bytes 0..7,
            and a 64-bit G component in bytes 8..15.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R64g64b64Uint">
            <summary>
            VK_FORMAT_R64G64B64_UINT:: A three-component, 192-bit unsigned
            integer format that has a 64-bit R component in bytes 0..7, a
            64-bit G component in bytes 8..15, and a 64-bit B component in
            bytes 16..23.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R64g64b64Sint">
            <summary>
            VK_FORMAT_R64G64B64_SINT:: A three-component, 192-bit signed
            integer format that has a 64-bit R component in bytes 0..7, a
            64-bit G component in bytes 8..15, and a 64-bit B component in
            bytes 16..23.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R64g64b64Sfloat">
            <summary>
            VK_FORMAT_R64G64B64_SFLOAT:: A three-component, 192-bit signed
            floating-point format that has a 64-bit R component in bytes 0..7,
            a 64-bit G component in bytes 8..15, and a 64-bit B component in
            bytes 16..23.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R64g64b64a64Uint">
            <summary>
            VK_FORMAT_R64G64B64A64_UINT:: A four-component, 256-bit unsigned
            integer format that has a 64-bit R component in bytes 0..7, a
            64-bit G component in bytes 8..15, a 64-bit B component in bytes
            16..23, and a 64-bit A component in bytes 24..31.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R64g64b64a64Sint">
            <summary>
            VK_FORMAT_R64G64B64A64_SINT:: A four-component, 256-bit signed
            integer format that has a 64-bit R component in bytes 0..7, a
            64-bit G component in bytes 8..15, a 64-bit B component in bytes
            16..23, and a 64-bit A component in bytes 24..31.
            </summary>
        </member>
        <member name="F:SharpVk.Format.R64g64b64a64Sfloat">
            <summary>
            VK_FORMAT_R64G64B64A64_SFLOAT:: A four-component, 256-bit signed
            floating-point format that has a 64-bit R component in bytes 0..7,
            a 64-bit G component in bytes 8..15, a 64-bit B component in bytes
            16..23, and a 64-bit A component in bytes 24..31.
            </summary>
        </member>
        <member name="F:SharpVk.Format.B10g11r11UfloatPack32">
            <summary>
            VK_FORMAT_B10G11R11_UFLOAT_PACK32:: A three-component, 32-bit
            packed unsigned floating-point format that has a 10-bit B component
            in bits 22..31, an 11-bit G component in bits 11..21, an 11-bit R
            component in bits 0..10. See &lt;&lt;fundamentals-fp10 and
            &lt;&lt;fundamentals-fp11.
            </summary>
        </member>
        <member name="F:SharpVk.Format.E5b9g9r9UfloatPack32">
            <summary>
            VK_FORMAT_E5B9G9R9_UFLOAT_PACK32:: A three-component, 32-bit packed
            unsigned floating-point format that has a 5-bit shared exponent in
            bits 27..31, a 9-bit B component mantissa in bits 18..26, a 9-bit G
            component mantissa in bits 9..17, and a 9-bit R component mantissa
            in bits 0..8.
            </summary>
        </member>
        <member name="F:SharpVk.Format.D16Unorm">
            <summary>
            VK_FORMAT_D16_UNORM:: A one-component, 16-bit unsigned normalized
            format that has a single 16-bit depth component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.X8D24UnormPack32">
            <summary>
            VK_FORMAT_X8_D24_UNORM_PACK32:: A two-component, 32-bit format that
            has 24 unsigned normalized bits in the depth component and,
            optionally:, 8 bits that are unused.
            </summary>
        </member>
        <member name="F:SharpVk.Format.D32Sfloat">
            <summary>
            VK_FORMAT_D32_SFLOAT:: A one-component, 32-bit signed
            floating-point format that has 32-bits in the depth component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.S8Uint">
            <summary>
            VK_FORMAT_S8_UINT:: A one-component, 8-bit unsigned integer format
            that has 8-bits in the stencil component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.D16UnormS8Uint">
            <summary>
            VK_FORMAT_D16_UNORM_S8_UINT:: A two-component, 24-bit format that
            has 16 unsigned normalized bits in the depth component and 8
            unsigned integer bits in the stencil component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.D24UnormS8Uint">
            <summary>
            VK_FORMAT_D24_UNORM_S8_UINT:: A two-component, 32-bit packed format
            that has 8 unsigned integer bits in the stencil component, and 24
            unsigned normalized bits in the depth component.
            </summary>
        </member>
        <member name="F:SharpVk.Format.D32SfloatS8Uint">
            <summary>
            VK_FORMAT_D32_SFLOAT_S8_UINT:: A two-component format that has 32
            signed float bits in the depth component and 8 unsigned integer
            bits in the stencil component. There are optionally: 24-bits that
            are unused.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Bc1RgbUnormBlock">
            <summary>
            VK_FORMAT_BC1_RGB_UNORM_BLOCK:: A three-component, block-compressed
            format where each 64-bit compressed texel block encodes a 4x4
            rectangle of unsigned normalized RGB texel data. This format has no
            alpha and is considered opaque.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Bc1RgbSrgbBlock">
            <summary>
            VK_FORMAT_BC1_RGB_SRGB_BLOCK:: A three-component, block-compressed
            format where each 64-bit compressed texel block encodes a 4x4
            rectangle of unsigned normalized RGB texel data with sRGB nonlinear
            encoding. This format has no alpha and is considered opaque.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Bc1RgbaUnormBlock">
            <summary>
            VK_FORMAT_BC1_RGBA_UNORM_BLOCK:: A four-component, block-compressed
            format where each 64-bit compressed texel block encodes a 4x4
            rectangle of unsigned normalized RGB texel data, and provides 1 bit
            of alpha.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Bc1RgbaSrgbBlock">
            <summary>
            VK_FORMAT_BC1_RGBA_SRGB_BLOCK:: A four-component, block-compressed
            format where each 64-bit compressed texel block encodes a 4x4
            rectangle of unsigned normalized RGB texel data with sRGB nonlinear
            encoding, and provides 1 bit of alpha.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Bc2UnormBlock">
            <summary>
            VK_FORMAT_BC2_UNORM_BLOCK:: A four-component, block-compressed
            format where each 128-bit compressed texel block encodes a 4x4
            rectangle of unsigned normalized RGBA texel data with the first 64
            bits encoding alpha values followed by 64 bits encoding RGB values.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Bc2SrgbBlock">
            <summary>
            VK_FORMAT_BC2_SRGB_BLOCK:: A four-component, block-compressed
            format where each 128-bit compressed texel block encodes a 4x4
            rectangle of unsigned normalized RGBA texel data with the first 64
            bits encoding alpha values followed by 64 bits encoding RGB values
            with sRGB nonlinear encoding.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Bc3UnormBlock">
            <summary>
            VK_FORMAT_BC3_UNORM_BLOCK:: A four-component, block-compressed
            format where each 128-bit compressed texel block encodes a 4x4
            rectangle of unsigned normalized RGBA texel data with the first 64
            bits encoding alpha values followed by 64 bits encoding RGB values.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Bc3SrgbBlock">
            <summary>
            VK_FORMAT_BC3_SRGB_BLOCK:: A four-component, block-compressed
            format where each 128-bit compressed texel block encodes a 4x4
            rectangle of unsigned normalized RGBA texel data with the first 64
            bits encoding alpha values followed by 64 bits encoding RGB values
            with sRGB nonlinear encoding.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Bc4UnormBlock">
            <summary>
            VK_FORMAT_BC4_UNORM_BLOCK:: A one-component, block-compressed
            format where each 64-bit compressed texel block encodes a 4x4
            rectangle of unsigned normalized red texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Bc4SnormBlock">
            <summary>
            VK_FORMAT_BC4_SNORM_BLOCK:: A one-component, block-compressed
            format where each 64-bit compressed texel block encodes a 4x4
            rectangle of signed normalized red texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Bc5UnormBlock">
            <summary>
            VK_FORMAT_BC5_UNORM_BLOCK:: A two-component, block-compressed
            format where each 128-bit compressed texel block encodes a 4x4
            rectangle of unsigned normalized RG texel data with the first 64
            bits encoding red values followed by 64 bits encoding green values.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Bc5SnormBlock">
            <summary>
            VK_FORMAT_BC5_SNORM_BLOCK:: A two-component, block-compressed
            format where each 128-bit compressed texel block encodes a 4x4
            rectangle of signed normalized RG texel data with the first 64 bits
            encoding red values followed by 64 bits encoding green values.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Bc6hUfloatBlock">
            <summary>
            VK_FORMAT_BC6H_UFLOAT_BLOCK:: A three-component, block-compressed
            format where each 128-bit compressed texel block encodes a 4x4
            rectangle of unsigned floating-point RGB texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Bc6hSfloatBlock">
            <summary>
            VK_FORMAT_BC6H_SFLOAT_BLOCK:: A three-component, block-compressed
            format where each 128-bit compressed texel block encodes a 4x4
            rectangle of signed floating-point RGB texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Bc7UnormBlock">
            <summary>
            VK_FORMAT_BC7_UNORM_BLOCK:: A four-component, block-compressed
            format where each 128-bit compressed texel block encodes a 4x4
            rectangle of unsigned normalized RGBA texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Bc7SrgbBlock">
            <summary>
            VK_FORMAT_BC7_SRGB_BLOCK:: A four-component, block-compressed
            format where each 128-bit compressed texel block encodes a 4x4
            rectangle of unsigned normalized RGBA texel data with sRGB
            nonlinear encoding applied to the RGB components.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Etc2R8g8b8UnormBlock">
            <summary>
            VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK:: A three-component, ETC2
            compressed format where each 64-bit compressed texel block encodes
            a 4x4 rectangle of unsigned normalized RGB texel data. This format
            has no alpha and is considered opaque.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Etc2R8g8b8SrgbBlock">
            <summary>
            VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK:: A three-component, ETC2
            compressed format where each 64-bit compressed texel block encodes
            a 4x4 rectangle of unsigned normalized RGB texel data with sRGB
            nonlinear encoding. This format has no alpha and is considered
            opaque.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Etc2R8g8b8a1UnormBlock">
            <summary>
            VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK:: A four-component, ETC2
            compressed format where each 64-bit compressed texel block encodes
            a 4x4 rectangle of unsigned normalized RGB texel data, and provides
            1 bit of alpha.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Etc2R8g8b8a1SrgbBlock">
            <summary>
            VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK:: A four-component, ETC2
            compressed format where each 64-bit compressed texel block encodes
            a 4x4 rectangle of unsigned normalized RGB texel data with sRGB
            nonlinear encoding, and provides 1 bit of alpha.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Etc2R8g8b8a8UnormBlock">
            <summary>
            VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK:: A four-component, ETC2
            compressed format where each 128-bit compressed texel block encodes
            a 4x4 rectangle of unsigned normalized RGBA texel data with the
            first 64 bits encoding alpha values followed by 64 bits encoding
            RGB values.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Etc2R8g8b8a8SrgbBlock">
            <summary>
            VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK:: A four-component, ETC2
            compressed format where each 64-bit compressed texel block encodes
            a 4x4 rectangle of unsigned normalized RGBA texel data with the
            first 64 bits encoding alpha values followed by 64 bits encoding
            RGB values with sRGB nonlinear encoding applied.
            </summary>
        </member>
        <member name="F:SharpVk.Format.EacR11UnormBlock">
            <summary>
            VK_FORMAT_EAC_R11_UNORM_BLOCK:: A one-component, ETC2 compressed
            format where each 64-bit compressed texel block encodes a 4x4
            rectangle of unsigned normalized red texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.EacR11SnormBlock">
            <summary>
            VK_FORMAT_EAC_R11_SNORM_BLOCK:: A one-component, ETC2 compressed
            format where each 64-bit compressed texel block encodes a 4x4
            rectangle of signed normalized red texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.EacR11g11UnormBlock">
            <summary>
            VK_FORMAT_EAC_R11G11_UNORM_BLOCK:: A two-component, ETC2 compressed
            format where each 128-bit compressed texel block encodes a 4x4
            rectangle of unsigned normalized RG texel data with the first 64
            bits encoding red values followed by 64 bits encoding green values.
            </summary>
        </member>
        <member name="F:SharpVk.Format.EacR11g11SnormBlock">
            <summary>
            VK_FORMAT_EAC_R11G11_SNORM_BLOCK:: A two-component, ETC2 compressed
            format where each 128-bit compressed texel block encodes a 4x4
            rectangle of signed normalized RG texel data with the first 64 bits
            encoding red values followed by 64 bits encoding green values.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc4x4UnormBlock">
            <summary>
            VK_FORMAT_ASTC_4x4_UNORM_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 4x4
            rectangle of unsigned normalized RGBA texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc4x4SrgbBlock">
            <summary>
            VK_FORMAT_ASTC_4x4_SRGB_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 4x4
            rectangle of unsigned normalized RGBA texel data with sRGB
            nonlinear encoding applied to the RGB components.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc5x4UnormBlock">
            <summary>
            VK_FORMAT_ASTC_5x4_UNORM_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 5x4
            rectangle of unsigned normalized RGBA texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc5x4SrgbBlock">
            <summary>
            VK_FORMAT_ASTC_5x4_SRGB_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 5x4
            rectangle of unsigned normalized RGBA texel data with sRGB
            nonlinear encoding applied to the RGB components.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc5x5UnormBlock">
            <summary>
            VK_FORMAT_ASTC_5x5_UNORM_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 5x5
            rectangle of unsigned normalized RGBA texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc5x5SrgbBlock">
            <summary>
            VK_FORMAT_ASTC_5x5_SRGB_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 5x5
            rectangle of unsigned normalized RGBA texel data with sRGB
            nonlinear encoding applied to the RGB components.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc6x5UnormBlock">
            <summary>
            VK_FORMAT_ASTC_6x5_UNORM_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 6x5
            rectangle of unsigned normalized RGBA texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc6x5SrgbBlock">
            <summary>
            VK_FORMAT_ASTC_6x5_SRGB_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 6x5
            rectangle of unsigned normalized RGBA texel data with sRGB
            nonlinear encoding applied to the RGB components.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc6x6UnormBlock">
            <summary>
            VK_FORMAT_ASTC_6x6_UNORM_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 6x6
            rectangle of unsigned normalized RGBA texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc6x6SrgbBlock">
            <summary>
            VK_FORMAT_ASTC_6x6_SRGB_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 6x6
            rectangle of unsigned normalized RGBA texel data with sRGB
            nonlinear encoding applied to the RGB components.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc8x5UnormBlock">
            <summary>
            VK_FORMAT_ASTC_8x5_UNORM_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes an 8x5
            rectangle of unsigned normalized RGBA texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc8x5SrgbBlock">
            <summary>
            VK_FORMAT_ASTC_8x5_SRGB_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes an 8x5
            rectangle of unsigned normalized RGBA texel data with sRGB
            nonlinear encoding applied to the RGB components.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc8x6UnormBlock">
            <summary>
            VK_FORMAT_ASTC_8x6_UNORM_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes an 8x6
            rectangle of unsigned normalized RGBA texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc8x6SrgbBlock">
            <summary>
            VK_FORMAT_ASTC_8x6_SRGB_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes an 8x6
            rectangle of unsigned normalized RGBA texel data with sRGB
            nonlinear encoding applied to the RGB components.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc8x8UnormBlock">
            <summary>
            VK_FORMAT_ASTC_8x8_UNORM_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes an 8x8
            rectangle of unsigned normalized RGBA texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc8x8SrgbBlock">
            <summary>
            VK_FORMAT_ASTC_8x8_SRGB_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes an 8x8
            rectangle of unsigned normalized RGBA texel data with sRGB
            nonlinear encoding applied to the RGB components.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc10x5UnormBlock">
            <summary>
            VK_FORMAT_ASTC_10x5_UNORM_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 10x5
            rectangle of unsigned normalized RGBA texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc10x5SrgbBlock">
            <summary>
            VK_FORMAT_ASTC_10x5_SRGB_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 10x5
            rectangle of unsigned normalized RGBA texel data with sRGB
            nonlinear encoding applied to the RGB components.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc10x6UnormBlock">
            <summary>
            VK_FORMAT_ASTC_10x6_UNORM_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 10x6
            rectangle of unsigned normalized RGBA texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc10x6SrgbBlock">
            <summary>
            VK_FORMAT_ASTC_10x6_SRGB_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 10x6
            rectangle of unsigned normalized RGBA texel data with sRGB
            nonlinear encoding applied to the RGB components.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc10x8UnormBlock">
            <summary>
            VK_FORMAT_ASTC_10x8_UNORM_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 10x8
            rectangle of unsigned normalized RGBA texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc10x8SrgbBlock">
            <summary>
            VK_FORMAT_ASTC_10x8_SRGB_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 10x8
            rectangle of unsigned normalized RGBA texel data with sRGB
            nonlinear encoding applied to the RGB components.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc10x10UnormBlock">
            <summary>
            VK_FORMAT_ASTC_10x10_UNORM_BLOCK:: A four-component, ASTC
            compressed format where each 128-bit compressed texel block encodes
            a 10x10 rectangle of unsigned normalized RGBA texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc10x10SrgbBlock">
            <summary>
            VK_FORMAT_ASTC_10x10_SRGB_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 10x10
            rectangle of unsigned normalized RGBA texel data with sRGB
            nonlinear encoding applied to the RGB components.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc12x10UnormBlock">
            <summary>
            VK_FORMAT_ASTC_12x10_UNORM_BLOCK:: A four-component, ASTC
            compressed format where each 128-bit compressed texel block encodes
            a 12x10 rectangle of unsigned normalized RGBA texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc12x10SrgbBlock">
            <summary>
            VK_FORMAT_ASTC_12x10_SRGB_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 12x10
            rectangle of unsigned normalized RGBA texel data with sRGB
            nonlinear encoding applied to the RGB components.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc12x12UnormBlock">
            <summary>
            VK_FORMAT_ASTC_12x12_UNORM_BLOCK:: A four-component, ASTC
            compressed format where each 128-bit compressed texel block encodes
            a 12x12 rectangle of unsigned normalized RGBA texel data.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Astc12x12SrgbBlock">
            <summary>
            VK_FORMAT_ASTC_12x12_SRGB_BLOCK:: A four-component, ASTC compressed
            format where each 128-bit compressed texel block encodes a 12x12
            rectangle of unsigned normalized RGBA texel data with sRGB
            nonlinear encoding applied to the RGB components.
            </summary>
        </member>
        <member name="F:SharpVk.Format.Pvrtc12bppUnormBlockImg">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.Pvrtc14bppUnormBlockImg">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.Pvrtc22bppUnormBlockImg">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.Pvrtc24bppUnormBlockImg">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.Pvrtc12bppSrgbBlockImg">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.Pvrtc14bppSrgbBlockImg">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.Pvrtc22bppSrgbBlockImg">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.Pvrtc24bppSrgbBlockImg">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G8b8g8r8422UnormKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.B8g8r8g8422UnormKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G8B8R83plane420UnormKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G8B8r82plane420UnormKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G8B8R83plane422UnormKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G8B8r82plane422UnormKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G8B8R83plane444UnormKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.R10x6UnormPack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.R10x6g10x6Unorm2pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.R10x6g10x6b10x6a10x6Unorm4pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G10x6b10x6g10x6r10x6422Unorm4pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.B10x6g10x6r10x6g10x6422Unorm4pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G10x6B10x6R10x63plane420Unorm3pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G10x6B10x6r10x62plane420Unorm3pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G10x6B10x6R10x63plane422Unorm3pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G10x6B10x6r10x62plane422Unorm3pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G10x6B10x6R10x63plane444Unorm3pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.R12x4UnormPack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.R12x4g12x4Unorm2pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.R12x4g12x4b12x4a12x4Unorm4pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G12x4b12x4g12x4r12x4422Unorm4pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.B12x4g12x4r12x4g12x4422Unorm4pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G12x4B12x4R12x43plane420Unorm3pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G12x4B12x4r12x42plane420Unorm3pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G12x4B12x4R12x43plane422Unorm3pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G12x4B12x4r12x42plane422Unorm3pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G12x4B12x4R12x43plane444Unorm3pack16Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G16b16g16r16422UnormKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.B16g16r16g16422UnormKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G16B16R163plane420UnormKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G16B16r162plane420UnormKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G16B16R163plane422UnormKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G16B16r162plane422UnormKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Format.G16B16R163plane444UnormKhr">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.FormatFeatureFlags">
            <summary>
            Bitmask specifying features supported by a buffer.
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.SampledImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.StorageImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.StorageImageAtomic">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.UniformTexelBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.StorageTexelBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.StorageTexelBufferAtomic">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.VertexBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.ColorAttachment">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.ColorAttachmentBlend">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.DepthStencilAttachment">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.BlitSource">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.BlitDestination">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.SampledImageFilterLinear">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.SampledImageFilterCubicBitImg">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.TransferSourceBitKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.TransferDestinationBitKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.SampledImageFilterMinmaxBitExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.MidpointChromaSamplesBitKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.SampledImageYcbcrConversionLinearFilterBitKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.SampledImageYcbcrConversionSeparateReconstructionFilterBitKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.SampledImageYcbcrConversionChromaReconstructionExplicitBitKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.SampledImageYcbcrConversionChromaReconstructionExplicitForceableBitKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.DisjointBitKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatFeatureFlags.CositedChromaSamplesBitKhr">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.FormatProperties">
            <summary>
            Structure specifying image format properties.
            </summary>
        </member>
        <member name="M:SharpVk.FormatProperties.#ctor(SharpVk.FormatFeatureFlags,SharpVk.FormatFeatureFlags,SharpVk.FormatFeatureFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FormatProperties.LinearTilingFeatures">
            <summary>
            linearTilingFeatures describes the features supported by
            VK_IMAGE_TILING_LINEAR.
            </summary>
        </member>
        <member name="F:SharpVk.FormatProperties.OptimalTilingFeatures">
            <summary>
            optimalTilingFeatures describes the features supported by
            VK_IMAGE_TILING_OPTIMAL.
            </summary>
        </member>
        <member name="F:SharpVk.FormatProperties.BufferFeatures">
            <summary>
            bufferFeatures describes the features supported by buffers.
            </summary>
        </member>
        <member name="T:SharpVk.Framebuffer">
            <summary>
            Opaque handle to a framebuffer object.
            </summary>
        </member>
        <member name="P:SharpVk.Framebuffer.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Framebuffer.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a framebuffer object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.FramebufferCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FramebufferCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.FramebufferCreateInfo">
            <summary>
            Structure specifying parameters of a newly created framebuffer.
            </summary>
        </member>
        <member name="P:SharpVk.FramebufferCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.FramebufferCreateInfo.RenderPass">
            <summary>
            A render pass that defines what render passes the framebuffer will
            be compatible with. See Render Pass Compatibility for details.
            </summary>
        </member>
        <member name="P:SharpVk.FramebufferCreateInfo.Attachments">
            <summary>
            An array of ImageView handles, each of which will be used as the
            corresponding attachment in a render pass instance.
            </summary>
        </member>
        <member name="P:SharpVk.FramebufferCreateInfo.Width">
            <summary>
            width, height and layers define the dimensions of the framebuffer.
            If the render pass uses multiview, then layers must be one and each
            attachment requires a number of layers that is greater than the
            maximum bit index set in the view mask in the subpasses in which it
            is used.
            </summary>
        </member>
        <member name="P:SharpVk.FramebufferCreateInfo.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.FramebufferCreateInfo.Layers">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.FramebufferCreateInfo.MarshalTo(SharpVk.Interop.FramebufferCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.FreeFunctionDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.FrontFace">
            <summary>
            Interpret polygon front-facing orientation.
            </summary>
        </member>
        <member name="F:SharpVk.FrontFace.CounterClockwise">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.FrontFace.Clockwise">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Google.PastPresentationTiming">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Google.PastPresentationTiming.#ctor(System.UInt32,System.UInt64,System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Google.PastPresentationTiming.PresentID">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Google.PastPresentationTiming.DesiredPresentTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Google.PastPresentationTiming.ActualPresentTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Google.PastPresentationTiming.EarliestPresentTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Google.PastPresentationTiming.PresentMargin">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Google.PresentTime">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Google.PresentTime.#ctor(System.UInt32,System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Google.PresentTime.PresentID">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Google.PresentTime.DesiredPresentTime">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Google.PresentTimesInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Google.PresentTimesInfo.Times">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Google.PresentTimesInfo.MarshalTo(SharpVk.Interop.Google.PresentTimesInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Google.RefreshCycleDuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Google.RefreshCycleDuration.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Google.RefreshCycleDuration.RefreshDuration">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Google.SwapchainExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Google.SwapchainExtensions.GetRefreshCycleDuration(SharpVk.Khronos.Swapchain)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Swapchain handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Google.SwapchainExtensions.GetPastPresentationTiming(SharpVk.Khronos.Swapchain)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Swapchain handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.GraphicsPipelineCreateInfo">
            <summary>
            Structure specifying parameters of a newly created graphics pipeline.
            </summary>
        </member>
        <member name="P:SharpVk.GraphicsPipelineCreateInfo.Flags">
            <summary>
            A bitmask of PipelineCreateFlagBits controlling how the pipeline
            will be generated, as described below.
            </summary>
        </member>
        <member name="P:SharpVk.GraphicsPipelineCreateInfo.Stages">
            <summary>
            An array of size stageCount structures of type
            PipelineShaderStageCreateInfo describing the set of the shader
            stages to be included in the graphics pipeline.
            </summary>
        </member>
        <member name="P:SharpVk.GraphicsPipelineCreateInfo.VertexInputState">
            <summary>
            An instance of the PipelineVertexInputStateCreateInfo structure.
            </summary>
        </member>
        <member name="P:SharpVk.GraphicsPipelineCreateInfo.InputAssemblyState">
            <summary>
            An instance of the PipelineInputAssemblyStateCreateInfo structure
            which determines input assembly behavior, as described in Drawing
            Commands.
            </summary>
        </member>
        <member name="P:SharpVk.GraphicsPipelineCreateInfo.TessellationState">
            <summary>
            An instance of the PipelineTessellationStateCreateInfo structure,
            or Null if the pipeline does not include a tessellation control
            shader stage and tessellation evaluation shader stage.
            </summary>
        </member>
        <member name="P:SharpVk.GraphicsPipelineCreateInfo.ViewportState">
            <summary>
            An instance of the PipelineViewportStateCreateInfo structure, or
            Null if the pipeline has rasterization disabled.
            </summary>
        </member>
        <member name="P:SharpVk.GraphicsPipelineCreateInfo.RasterizationState">
            <summary>
            An instance of the PipelineRasterizationStateCreateInfo structure.
            </summary>
        </member>
        <member name="P:SharpVk.GraphicsPipelineCreateInfo.MultisampleState">
            <summary>
            An instance of the PipelineMultisampleStateCreateInfo, or Null if
            the pipeline has rasterization disabled.
            </summary>
        </member>
        <member name="P:SharpVk.GraphicsPipelineCreateInfo.DepthStencilState">
            <summary>
            An instance of the PipelineDepthStencilStateCreateInfo structure,
            or Null if the pipeline has rasterization disabled or if the
            subpass of the render pass the pipeline is created against does not
            use a depth/stencil attachment.
            </summary>
        </member>
        <member name="P:SharpVk.GraphicsPipelineCreateInfo.ColorBlendState">
            <summary>
            An instance of the PipelineColorBlendStateCreateInfo structure, or
            Null if the pipeline has rasterization disabled or if the subpass
            of the render pass the pipeline is created against does not use any
            color attachments.
            </summary>
        </member>
        <member name="P:SharpVk.GraphicsPipelineCreateInfo.DynamicState">
            <summary>
            A pointer to PipelineDynamicStateCreateInfo and is used to indicate
            which properties of the pipeline state object are dynamic and can
            be changed independently of the pipeline state. This can be Null,
            which means no state in the pipeline is considered dynamic.
            </summary>
        </member>
        <member name="P:SharpVk.GraphicsPipelineCreateInfo.Layout">
            <summary>
            The description of binding locations used by both the pipeline and
            descriptor sets used with the pipeline.
            </summary>
        </member>
        <member name="P:SharpVk.GraphicsPipelineCreateInfo.RenderPass">
            <summary>
            A handle to a render pass object describing the environment in
            which the pipeline will be used; the pipeline must only be used
            with an instance of any render pass compatible with the one
            provided. See Render Pass Compatibility for more information.
            </summary>
        </member>
        <member name="P:SharpVk.GraphicsPipelineCreateInfo.Subpass">
            <summary>
            The index of the subpass in the render pass where this pipeline
            will be used.
            </summary>
        </member>
        <member name="P:SharpVk.GraphicsPipelineCreateInfo.BasePipelineHandle">
            <summary>
            A pipeline to derive from.
            </summary>
        </member>
        <member name="P:SharpVk.GraphicsPipelineCreateInfo.BasePipelineIndex">
            <summary>
            An index into the pCreateInfos parameter to use as a pipeline to
            derive from.
            </summary>
        </member>
        <member name="M:SharpVk.GraphicsPipelineCreateInfo.MarshalTo(SharpVk.Interop.GraphicsPipelineCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.HostSize">
            <summary>
            Represents the size of a block in host memory.
            </summary>
        </member>
        <member name="M:SharpVk.HostSize.op_Implicit(System.Int32)~SharpVk.HostSize">
            <summary>
            -
            </summary>
        </member>
        <member name="M:SharpVk.HostSize.op_Implicit(System.UInt32)~SharpVk.HostSize">
            <summary>
            -
            </summary>
        </member>
        <member name="M:SharpVk.HostSize.op_Implicit(System.UInt64)~SharpVk.HostSize">
            <summary>
            -
            </summary>
        </member>
        <member name="M:SharpVk.HostSize.op_Explicit(SharpVk.HostSize)~System.UInt32">
            <summary>
            -
            </summary>
        </member>
        <member name="M:SharpVk.HostSize.op_Explicit(SharpVk.HostSize)~System.UInt64">
            <summary>
            -
            </summary>
        </member>
        <member name="M:SharpVk.HostSize.ToString">
            <summary>
            -
            </summary>
        </member>
        <member name="T:SharpVk.Image">
            <summary>
            Opaque handle to a image object.
            </summary>
        </member>
        <member name="P:SharpVk.Image.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Image.GetMemoryRequirements">
            <summary>
            Returns the memory requirements for specified Vulkan object.
            </summary>
        </member>
        <member name="M:SharpVk.Image.BindMemory(SharpVk.DeviceMemory,SharpVk.DeviceSize)">
            <summary>
            Bind device memory to an image object.
            </summary>
        </member>
        <member name="M:SharpVk.Image.GetSparseMemoryRequirements">
            <summary>
            Query the memory requirements for a sparse image.
            </summary>
        </member>
        <member name="M:SharpVk.Image.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy an image object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Image.GetSubresourceLayout(SharpVk.ImageSubresource)">
            <summary>
            Retrieve information about an image subresource.
            </summary>
        </member>
        <member name="T:SharpVk.ImageAspectFlags">
            <summary>
            Bitmask specifying which aspects of an image are included in a view.
            </summary>
        </member>
        <member name="F:SharpVk.ImageAspectFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageAspectFlags.Color">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageAspectFlags.Depth">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageAspectFlags.Stencil">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageAspectFlags.Metadata">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageAspectFlags.Plane0BitKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageAspectFlags.Plane1BitKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageAspectFlags.Plane2BitKhr">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ImageBlit">
            <summary>
            Structure specifying an image blit operation.
            </summary>
        </member>
        <member name="P:SharpVk.ImageBlit.SourceSubresource">
            <summary>
            The subresource to blit from.
            </summary>
        </member>
        <member name="P:SharpVk.ImageBlit.SourceOffsets">
            <summary>
            An array of two Offset3D structures specifying the bounds of the
            source region within srcSubresource.
            </summary>
        </member>
        <member name="P:SharpVk.ImageBlit.DestinationSubresource">
            <summary>
            The subresource to blit into.
            </summary>
        </member>
        <member name="P:SharpVk.ImageBlit.DestinationOffsets">
            <summary>
            An array of two Offset3D structures specifying the bounds of the
            destination region within dstSubresource.
            </summary>
        </member>
        <member name="M:SharpVk.ImageBlit.MarshalTo(SharpVk.Interop.ImageBlit*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ImageCopy">
            <summary>
            Structure specifying an image copy operation.
            </summary>
        </member>
        <member name="M:SharpVk.ImageCopy.#ctor(SharpVk.ImageSubresourceLayers,SharpVk.Offset3D,SharpVk.ImageSubresourceLayers,SharpVk.Offset3D,SharpVk.Extent3D)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageCopy.SourceSubresource">
            <summary>
            srcSubresource and dstSubresource are ImageSubresourceLayers
            structures specifying the image subresources of the images used for
            the source and destination image data, respectively.
            </summary>
        </member>
        <member name="F:SharpVk.ImageCopy.SourceOffset">
            <summary>
            srcOffset and dstOffset select the initial x, y, and z offsets in
            texels of the sub-regions of the source and destination image data.
            </summary>
        </member>
        <member name="F:SharpVk.ImageCopy.DestinationSubresource">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageCopy.DestinationOffset">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageCopy.Extent">
            <summary>
            The size in texels of the source image to copy in width, height and
            depth.
            </summary>
        </member>
        <member name="T:SharpVk.ImageCreateFlags">
            <summary>
            Bitmask specifying additional parameters of an image.
            </summary>
        </member>
        <member name="F:SharpVk.ImageCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageCreateFlags.SparseBinding">
            <summary>
            Indicates that the image will be backed using sparse memory
            binding.
            </summary>
        </member>
        <member name="F:SharpVk.ImageCreateFlags.SparseResidency">
            <summary>
            Indicates that the image can be partially backed using sparse
            memory binding. Images created with this flag must also be created
            with the VK_IMAGE_CREATE_SPARSE_BINDING_BIT flag.
            </summary>
        </member>
        <member name="F:SharpVk.ImageCreateFlags.SparseAliased">
            <summary>
            Indicates that the image will be backed using sparse memory binding
            with memory ranges that might also simultaneously be backing
            another image (or another portion of the same image). Images
            created with this flag must also be created with the
            VK_IMAGE_CREATE_SPARSE_BINDING_BIT flag
            </summary>
        </member>
        <member name="F:SharpVk.ImageCreateFlags.MutableFormat">
            <summary>
            Indicates that the image can be used to create a ImageView with a
            different format from the image.
            </summary>
        </member>
        <member name="F:SharpVk.ImageCreateFlags.CubeCompatible">
            <summary>
            Indicates that the image can be used to create a ImageView of type
            VK_IMAGE_VIEW_TYPE_CUBE or VK_IMAGE_VIEW_TYPE_CUBE_ARRAY.
            </summary>
        </member>
        <member name="F:SharpVk.ImageCreateFlags.BindSfrBitKhx">
            <summary>
            Indicates that the image can be used with a non-zero value of the
            SFRRectCount member of the BindImageMemoryInfoKHX structure passed
            into flink:vkBindImageMemory2KHX. This flag also has the effect of
            making the image use the standard sparse image block dimensions.
            </summary>
        </member>
        <member name="F:SharpVk.ImageCreateFlags.ImageCreate2dArrayCompatibleBitKhr">
            <summary>
            Indicates that the image can be used to create a ImageView of type
            VK_IMAGE_VIEW_TYPE_2D or VK_IMAGE_VIEW_TYPE_2D_ARRAY.
            </summary>
        </member>
        <member name="F:SharpVk.ImageCreateFlags.BlockTexelViewCompatibleBitKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageCreateFlags.ExtendedUsageBitKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageCreateFlags.SampleLocationsCompatibleDepthBitExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageCreateFlags.DisjointBitKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageCreateFlags.AliasBitKhr">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ImageCreateInfo">
            <summary>
            Structure specifying the parameters of a newly created image object.
            </summary>
        </member>
        <member name="P:SharpVk.ImageCreateInfo.Flags">
            <summary>
            A bitmask describing additional parameters of the image. See
            ImageCreateFlagBits below for a description of the supported bits.
            </summary>
        </member>
        <member name="P:SharpVk.ImageCreateInfo.ImageType">
            <summary>
            A ImageType specifying the basic dimensionality of the image, as
            described below. Layers in array textures do not count as a
            dimension for the purposes of the image type.
            </summary>
        </member>
        <member name="P:SharpVk.ImageCreateInfo.Format">
            <summary>
            A Format describing the format and type of the data elements that
            will be contained in the image.
            </summary>
        </member>
        <member name="P:SharpVk.ImageCreateInfo.Extent">
            <summary>
            A Extent3D describing the number of data elements in each dimension
            of the base level.
            </summary>
        </member>
        <member name="P:SharpVk.ImageCreateInfo.MipLevels">
            <summary>
            mipLevels describes the number of levels of detail available for
            minified sampling of the image.
            </summary>
        </member>
        <member name="P:SharpVk.ImageCreateInfo.ArrayLayers">
            <summary>
            The number of layers in the image.
            </summary>
        </member>
        <member name="P:SharpVk.ImageCreateInfo.Samples">
            <summary>
            The number of sub-data element samples in the image as defined in
            SampleCountFlagBits. See Multisampling.
            </summary>
        </member>
        <member name="P:SharpVk.ImageCreateInfo.Tiling">
            <summary>
            A ImageTiling specifying the tiling arrangement of the data
            elements in memory, as described below.
            </summary>
        </member>
        <member name="P:SharpVk.ImageCreateInfo.Usage">
            <summary>
            A bitmask describing the intended usage of the image. See
            ImageUsageFlagBits below for a description of the supported bits.
            </summary>
        </member>
        <member name="P:SharpVk.ImageCreateInfo.SharingMode">
            <summary>
            The sharing mode of the image when it will be accessed by multiple
            queue families, and must be one of the values described for
            SharingMode in the Resource Sharing section below.
            </summary>
        </member>
        <member name="P:SharpVk.ImageCreateInfo.QueueFamilyIndices">
            <summary>
            A list of queue families that will access this image (ignored if
            sharingMode is not VK_SHARING_MODE_CONCURRENT).
            </summary>
        </member>
        <member name="P:SharpVk.ImageCreateInfo.InitialLayout">
            <summary>
            initialLayout selects the initial ImageLayout state of all image
            subresources of the image. See Image Layouts. initialLayout must be
            VK_IMAGE_LAYOUT_UNDEFINED or VK_IMAGE_LAYOUT_PREINITIALIZED.
            </summary>
        </member>
        <member name="M:SharpVk.ImageCreateInfo.MarshalTo(SharpVk.Interop.ImageCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ImageFormatProperties">
            <summary>
            Structure specifying a image format properties.
            </summary>
        </member>
        <member name="M:SharpVk.ImageFormatProperties.#ctor(SharpVk.Extent3D,System.UInt32,System.UInt32,SharpVk.SampleCountFlags,SharpVk.DeviceSize)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageFormatProperties.MaxExtent">
            <summary>
            maxExtent are the maximum image dimensions. See the Allowed Extent
            Values section below for how these values are constrained by type.
            </summary>
        </member>
        <member name="F:SharpVk.ImageFormatProperties.MaxMipLevels">
            <summary>
            The maximum number of mipmap levels. maxMipLevels must either be
            equal to 1 (valid only if tiling is VK_IMAGE_TILING_LINEAR) or be
            equal to [eq]#{lceil}log~2~(max(width, height, depth)){rceil}
            {plus} 1#. [eq]#width#, [eq]#height#, and [eq]#depth# are taken
            from the corresponding members of maxExtent.
            </summary>
        </member>
        <member name="F:SharpVk.ImageFormatProperties.MaxArrayLayers">
            <summary>
            The maximum number of array layers. maxArrayLayers must either be
            equal to 1 or be greater than or equal to the maxImageArrayLayers
            member of PhysicalDeviceLimits. A value of 1 is valid only if
            tiling is VK_IMAGE_TILING_LINEAR or if type is VK_IMAGE_TYPE_3D.
            </summary>
        </member>
        <member name="F:SharpVk.ImageFormatProperties.SampleCounts">
            <summary>
            A bitmask of SampleCountFlagBits specifying all the supported
            sample counts for this image as described below.
            </summary>
        </member>
        <member name="F:SharpVk.ImageFormatProperties.MaxResourceSize">
            <summary>
            An upper bound on the total image size in bytes, inclusive of all
            image subresources. Implementations may have an address space limit
            on total size of a resource, which is advertised by this property.
            maxResourceSize must be at least 2^31^.
            </summary>
        </member>
        <member name="T:SharpVk.ImageLayout">
            <summary>
            Layout of image and image subresources.
            </summary>
        </member>
        <member name="F:SharpVk.ImageLayout.Undefined">
            <summary>
            VK_IMAGE_LAYOUT_UNDEFINED: Supports no device access. This layout
            must only be used as the initialLayout member of ImageCreateInfo or
            AttachmentDescription, or as the oldLayout in an image transition.
            When transitioning out of this layout, the contents of the memory
            are not guaranteed to be preserved.
            </summary>
        </member>
        <member name="F:SharpVk.ImageLayout.General">
            <summary>
            VK_IMAGE_LAYOUT_GENERAL: Supports all types of device access.
            </summary>
        </member>
        <member name="F:SharpVk.ImageLayout.ColorAttachmentOptimal">
            <summary>
            VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL: must only be used as a
            color or resolve attachment in a Framebuffer. This layout is valid
            only for image subresources of images created with the
            VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT usage bit enabled.
            </summary>
        </member>
        <member name="F:SharpVk.ImageLayout.DepthStencilAttachmentOptimal">
            <summary>
            VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL: must only be used
            as a depth/stencil attachment in a Framebuffer. This layout is
            valid only for image subresources of images created with the
            VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT usage bit enabled.
            </summary>
        </member>
        <member name="F:SharpVk.ImageLayout.DepthStencilReadOnlyOptimal">
            <summary>
            VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL: must only be used
            as a read-only depth/stencil attachment in a Framebuffer and/or as
            a read-only image in a shader (which can be read as a sampled
            image, combined image/sampler and/or input attachment). This layout
            is valid only for image subresources of images created with the
            VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT usage bit enabled. Only
            image subresources of images created with
            VK_IMAGE_USAGE_SAMPLED_BIT can be used as sampled image or combined
            image/sampler in a shader. Similarly, only image subresources of
            images created with VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT can be used
            as input attachments.
            </summary>
        </member>
        <member name="F:SharpVk.ImageLayout.ShaderReadOnlyOptimal">
            <summary>
            VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL: must only be used as a
            read-only image in a shader (which can be read as a sampled image,
            combined image/sampler and/or input attachment). This layout is
            valid only for image subresources of images created with the
            VK_IMAGE_USAGE_SAMPLED_BIT or VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT
            usage bit enabled.
            </summary>
        </member>
        <member name="F:SharpVk.ImageLayout.TransferSourceOptimal">
            <summary>
            VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL: must only be used as a source
            image of a transfer command (see the definition of
            VK_PIPELINE_STAGE_TRANSFER_BIT). This layout is valid only for
            image subresources of images created with the
            VK_IMAGE_USAGE_TRANSFER_SRC_BIT usage bit enabled.
            </summary>
        </member>
        <member name="F:SharpVk.ImageLayout.TransferDestinationOptimal">
            <summary>
            VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL: must only be used as a
            destination image of a transfer command. This layout is valid only
            for image subresources of images created with the
            VK_IMAGE_USAGE_TRANSFER_DST_BIT usage bit enabled.
            </summary>
        </member>
        <member name="F:SharpVk.ImageLayout.Preinitialized">
            <summary>
            VK_IMAGE_LAYOUT_PREINITIALIZED: Supports no device access. This
            layout must only be used as the initialLayout member of
            ImageCreateInfo or AttachmentDescription, or as the oldLayout in an
            image transition. When transitioning out of this layout, the
            contents of the memory are preserved. This layout is intended to be
            used as the initial layout for an image whose contents are written
            by the host, and hence the data can be written to memory
            immediately, without first executing a layout transition.
            Currently, VK_IMAGE_LAYOUT_PREINITIALIZED is only useful with
            VK_IMAGE_TILING_LINEAR images because there is not a standard
            layout defined for VK_IMAGE_TILING_OPTIMAL images.
            </summary>
        </member>
        <member name="F:SharpVk.ImageLayout.PresentSourceKhr">
            <summary>
            VK_IMAGE_LAYOUT_PRESENT_SRC_KHR: must only be used for presenting a
            presentable image for display. A swapchain's image must be
            transitioned to this layout before calling flink:vkQueuePresentKHR,
            and must be transitioned away from this layout after calling
            flink:vkAcquireNextImageKHR.
            </summary>
        </member>
        <member name="F:SharpVk.ImageLayout.SharedPresentKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageLayout.DepthReadOnlyStencilAttachmentOptimalKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageLayout.DepthAttachmentStencilReadOnlyOptimalKhr">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ImageMemoryBarrier">
            <summary>
            Structure specifying the parameters of an image memory barrier.
            </summary>
        </member>
        <member name="P:SharpVk.ImageMemoryBarrier.SourceAccessMask">
            <summary>
            srcAccessMask defines a source access mask.
            </summary>
        </member>
        <member name="P:SharpVk.ImageMemoryBarrier.DestinationAccessMask">
            <summary>
            dstAccessMask defines a destination access mask.
            </summary>
        </member>
        <member name="P:SharpVk.ImageMemoryBarrier.OldLayout">
            <summary>
            The old layout in an image layout transition.
            </summary>
        </member>
        <member name="P:SharpVk.ImageMemoryBarrier.NewLayout">
            <summary>
            The new layout in an image layout transition.
            </summary>
        </member>
        <member name="P:SharpVk.ImageMemoryBarrier.SourceQueueFamilyIndex">
            <summary>
            The source queue family for a queue family ownership transfer.
            </summary>
        </member>
        <member name="P:SharpVk.ImageMemoryBarrier.DestinationQueueFamilyIndex">
            <summary>
            The destination queue family for a queue family ownership transfer.
            </summary>
        </member>
        <member name="P:SharpVk.ImageMemoryBarrier.Image">
            <summary>
            A handle to the image affected by this barrier.
            </summary>
        </member>
        <member name="P:SharpVk.ImageMemoryBarrier.SubresourceRange">
            <summary>
            subresourceRange describes the image subresource range within image
            that is affected by this barrier.
            </summary>
        </member>
        <member name="M:SharpVk.ImageMemoryBarrier.MarshalTo(SharpVk.Interop.ImageMemoryBarrier*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.ImageMemoryBarrier.MarshalFrom(SharpVk.Interop.ImageMemoryBarrier*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ImageResolve">
            <summary>
            Structure specifying an image resolve operation.
            </summary>
        </member>
        <member name="M:SharpVk.ImageResolve.#ctor(SharpVk.ImageSubresourceLayers,SharpVk.Offset3D,SharpVk.ImageSubresourceLayers,SharpVk.Offset3D,SharpVk.Extent3D)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageResolve.SourceSubresource">
            <summary>
            srcSubresource and dstSubresource are ImageSubresourceLayers
            structures specifying the image subresources of the images used for
            the source and destination image data, respectively. Resolve of
            depth/stencil images is not supported.
            </summary>
        </member>
        <member name="F:SharpVk.ImageResolve.SourceOffset">
            <summary>
            srcOffset and dstOffset select the initial x, y, and z offsets in
            texels of the sub-regions of the source and destination image data.
            </summary>
        </member>
        <member name="F:SharpVk.ImageResolve.DestinationSubresource">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageResolve.DestinationOffset">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageResolve.Extent">
            <summary>
            The size in texels of the source image to resolve in width, height
            and depth.
            </summary>
        </member>
        <member name="T:SharpVk.ImageSubresource">
            <summary>
            Structure specifying a image subresource.
            </summary>
        </member>
        <member name="M:SharpVk.ImageSubresource.#ctor(SharpVk.ImageAspectFlags,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageSubresource.AspectMask">
            <summary>
            A ImageAspectFlags selecting the image _aspect_.
            </summary>
        </member>
        <member name="F:SharpVk.ImageSubresource.MipLevel">
            <summary>
            mipLevel selects the mipmap level.
            </summary>
        </member>
        <member name="F:SharpVk.ImageSubresource.ArrayLayer">
            <summary>
            arrayLayer selects the array layer.
            </summary>
        </member>
        <member name="T:SharpVk.ImageSubresourceLayers">
            <summary>
            Structure specifying a image subresource layers.
            </summary>
        </member>
        <member name="M:SharpVk.ImageSubresourceLayers.#ctor(SharpVk.ImageAspectFlags,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageSubresourceLayers.AspectMask">
            <summary>
            A combination of ImageAspectFlagBits, selecting the color, depth
            and/or stencil aspects to be copied.
            </summary>
        </member>
        <member name="F:SharpVk.ImageSubresourceLayers.MipLevel">
            <summary>
            The mipmap level to copy from.
            </summary>
        </member>
        <member name="F:SharpVk.ImageSubresourceLayers.BaseArrayLayer">
            <summary>
            baseArrayLayer and layerCount are the starting layer and number of
            layers to copy.
            </summary>
        </member>
        <member name="F:SharpVk.ImageSubresourceLayers.LayerCount">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ImageSubresourceRange">
            <summary>
            Structure specifying a image subresource range.
            </summary>
        </member>
        <member name="M:SharpVk.ImageSubresourceRange.#ctor(SharpVk.ImageAspectFlags,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageSubresourceRange.AspectMask">
            <summary>
            A bitmask indicating which aspect(s) of the image are included in
            the view. See ImageAspectFlagBits.
            </summary>
        </member>
        <member name="F:SharpVk.ImageSubresourceRange.BaseMipLevel">
            <summary>
            The first mipmap level accessible to the view.
            </summary>
        </member>
        <member name="F:SharpVk.ImageSubresourceRange.LevelCount">
            <summary>
            The number of mipmap levels (starting from baseMipLevel) accessible
            to the view.
            </summary>
        </member>
        <member name="F:SharpVk.ImageSubresourceRange.BaseArrayLayer">
            <summary>
            The first array layer accessible to the view.
            </summary>
        </member>
        <member name="F:SharpVk.ImageSubresourceRange.LayerCount">
            <summary>
            The number of array layers (starting from baseArrayLayer)
            accessible to the view.
            </summary>
        </member>
        <member name="T:SharpVk.ImageTiling">
            <summary>
            Specifies the tiling arrangement of data in an image.
            </summary>
        </member>
        <member name="F:SharpVk.ImageTiling.Optimal">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageTiling.Linear">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ImageType">
            <summary>
            Specifies the type of an image object.
            </summary>
        </member>
        <member name="F:SharpVk.ImageType.Image1d">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageType.Image2d">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageType.Image3d">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ImageUsageFlags">
            <summary>
            Bitmask specifying intended usage of an image.
            </summary>
        </member>
        <member name="F:SharpVk.ImageUsageFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageUsageFlags.TransferSource">
            <summary>
            Indicates that the image can be used as the source of a transfer
            command.
            </summary>
        </member>
        <member name="F:SharpVk.ImageUsageFlags.TransferDestination">
            <summary>
            Indicates that the image can be used as the destination of a
            transfer command.
            </summary>
        </member>
        <member name="F:SharpVk.ImageUsageFlags.Sampled">
            <summary>
            Indicates that the image can be used to create a ImageView suitable
            for occupying a DescriptorSet slot either of type
            VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE or
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, and be sampled by a
            shader.
            </summary>
        </member>
        <member name="F:SharpVk.ImageUsageFlags.Storage">
            <summary>
            Indicates that the image can be used to create a ImageView suitable
            for occupying a DescriptorSet slot of type
            VK_DESCRIPTOR_TYPE_STORAGE_IMAGE.
            </summary>
        </member>
        <member name="F:SharpVk.ImageUsageFlags.ColorAttachment">
            <summary>
            Indicates that the image can be used to create a ImageView suitable
            for use as a color or resolve attachment in a Framebuffer.
            </summary>
        </member>
        <member name="F:SharpVk.ImageUsageFlags.DepthStencilAttachment">
            <summary>
            Indicates that the image can be used to create a ImageView suitable
            for use as a depth/stencil attachment in a Framebuffer.
            </summary>
        </member>
        <member name="F:SharpVk.ImageUsageFlags.TransientAttachment">
            <summary>
            Indicates that the memory bound to this image will have been
            allocated with the VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT (see
            &lt;&lt;memory for more detail). This bit can be set for any image
            that can be used to create a ImageView suitable for use as a color,
            resolve, depth/stencil, or input attachment.
            </summary>
        </member>
        <member name="F:SharpVk.ImageUsageFlags.InputAttachment">
            <summary>
            Indicates that the image can be used to create a ImageView suitable
            for occupying DescriptorSet slot of type
            VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT; be read from a shader as an
            input attachment; and be used as an input attachment in a
            framebuffer.
            </summary>
        </member>
        <member name="T:SharpVk.ImageView">
            <summary>
            Opaque handle to a image view object.
            </summary>
        </member>
        <member name="P:SharpVk.ImageView.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.ImageView.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy an image view object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.ImageViewCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageViewCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ImageViewCreateInfo">
            <summary>
            Structure specifying parameters of a newly created image view.
            </summary>
        </member>
        <member name="P:SharpVk.ImageViewCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.ImageViewCreateInfo.Image">
            <summary>
            A Image on which the view will be created.
            </summary>
        </member>
        <member name="P:SharpVk.ImageViewCreateInfo.ViewType">
            <summary>
            The type of the image view.
            </summary>
        </member>
        <member name="P:SharpVk.ImageViewCreateInfo.Format">
            <summary>
            A Format describing the format and type used to interpret data
            elements in the image.
            </summary>
        </member>
        <member name="P:SharpVk.ImageViewCreateInfo.Components">
            <summary>
            Specifies a remapping of color components (or of depth or stencil
            components after they have been converted into color components).
            See ComponentMapping.
            </summary>
        </member>
        <member name="P:SharpVk.ImageViewCreateInfo.SubresourceRange">
            <summary>
            A ImageSubresourceRange selecting the set of mipmap levels and
            array layers to be accessible to the view.
            </summary>
        </member>
        <member name="M:SharpVk.ImageViewCreateInfo.MarshalTo(SharpVk.Interop.ImageViewCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ImageViewType">
            <summary>
            Image view types.
            </summary>
        </member>
        <member name="F:SharpVk.ImageViewType.ImageView1d">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageViewType.ImageView2d">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageViewType.ImageView3d">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageViewType.Cube">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageViewType.ImageView1dArray">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageViewType.ImageView2dArray">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ImageViewType.CubeArray">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.IndexType">
            <summary>
            Type of index buffer indices.
            </summary>
        </member>
        <member name="F:SharpVk.IndexType.Uint16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.IndexType.Uint32">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Instance">
            <summary>
            Opaque handle to a instance object.
            </summary>
        </member>
        <member name="P:SharpVk.Instance.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Instance.Create(System.Nullable{SharpVk.ArrayProxy{System.String}},System.Nullable{SharpVk.ArrayProxy{System.String}},System.Nullable{SharpVk.InstanceCreateFlags},System.Nullable{SharpVk.ApplicationInfo},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a new Vulkan instance.
            </summary>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="applicationInfo">
            Null or an instance of ApplicationInfo. If not Null, this
            information helps implementations recognize behavior inherent to
            classes of applications. ApplicationInfo is defined in detail
            below.
            </param>
            <param name="enabledLayerNames">
            An array of enabledLayerCount strings containing the names of
            layers to enable for the created instance. See the Layers section
            for further details.
            </param>
            <param name="enabledExtensionNames">
            An array of enabledExtensionCount strings containing the names of
            extensions to enable.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Instance.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy an instance of Vulkan.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Instance.EnumeratePhysicalDevices">
            <summary>
            Enumerates the physical devices accessible to a Vulkan instance.
            </summary>
        </member>
        <member name="M:SharpVk.Instance.GetProcedureAddress(System.String)">
            <summary>
            Return a function pointer for a command.
            </summary>
        </member>
        <member name="M:SharpVk.Instance.EnumerateLayerProperties">
            <summary>
            Returns up to requested number of global layer properties.
            </summary>
        </member>
        <member name="M:SharpVk.Instance.EnumerateExtensionProperties(System.String)">
            <summary>
            Returns up to requested number of global extension properties.
            </summary>
        </member>
        <member name="T:SharpVk.InstanceCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.InstanceCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.InstanceCreateInfo">
            <summary>
            Structure specifying parameters of a newly created instance.
            </summary>
        </member>
        <member name="P:SharpVk.InstanceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.InstanceCreateInfo.ApplicationInfo">
            <summary>
            Null or an instance of ApplicationInfo. If not Null, this
            information helps implementations recognize behavior inherent to
            classes of applications. ApplicationInfo is defined in detail
            below.
            </summary>
        </member>
        <member name="P:SharpVk.InstanceCreateInfo.EnabledLayerNames">
            <summary>
            An array of enabledLayerCount strings containing the names of
            layers to enable for the created instance. See the Layers section
            for further details.
            </summary>
        </member>
        <member name="P:SharpVk.InstanceCreateInfo.EnabledExtensionNames">
            <summary>
            An array of enabledExtensionCount strings containing the names of
            extensions to enable.
            </summary>
        </member>
        <member name="M:SharpVk.InstanceCreateInfo.MarshalTo(SharpVk.Interop.InstanceCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.InternalAllocationNotificationDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.InternalAllocationType">
            <summary>
            Allocation type.
            </summary>
        </member>
        <member name="F:SharpVk.InternalAllocationType.Executable">
            <summary>
            VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE - The allocation is intended
            for execution by the host.
            </summary>
        </member>
        <member name="T:SharpVk.InternalFreeNotificationDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.AllocationCallbacks">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.AllocationCallbacks.UserData">
            <summary>
            A value to be interpreted by the implementation of the callbacks.
            When any of the callbacks in AllocationCallbacks are called, the
            Vulkan implementation will pass this value as the first parameter
            to the callback. This value can vary each time an allocator is
            passed into a command, even when the same object takes an allocator
            in multiple commands.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.AllocationCallbacks.Allocation">
            <summary>
            An application-defined memory allocation function of type
            AllocationFunction.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.AllocationCallbacks.Reallocation">
            <summary>
            An application-defined memory reallocation function of type
            ReallocationFunction.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.AllocationCallbacks.Free">
            <summary>
            An application-defined memory free function of type FreeFunction.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.AllocationCallbacks.InternalAllocation">
            <summary>
            An application-defined function that is called by the
            implementation when the implementation makes internal allocations,
            and it is of type InternalAllocationNotification.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.AllocationCallbacks.InternalFree">
            <summary>
            An application-defined function that is called by the
            implementation when the implementation frees internal allocations,
            and it is of type InternalFreeNotification.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Amd.PipelineRasterizationStateRasterizationOrder">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Amd.PipelineRasterizationStateRasterizationOrder.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Amd.PipelineRasterizationStateRasterizationOrder.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Amd.PipelineRasterizationStateRasterizationOrder.RasterizationOrder">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Amd.TextureLODGatherFormatProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Amd.TextureLODGatherFormatProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Amd.TextureLODGatherFormatProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Amd.TextureLODGatherFormatProperties.SupportsTextureGatherLODBias">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Amd.VkCommandBufferDrawIndexedIndirectCountDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Amd.VkCommandBufferDrawIndirectCountDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.ApplicationInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ApplicationInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ApplicationInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ApplicationInfo.ApplicationName">
            <summary>
            A string containing the name of the application.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ApplicationInfo.ApplicationVersion">
            <summary>
            The developer-supplied version number of the application.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ApplicationInfo.EngineName">
            <summary>
            Astring containing the name of the engine (if any) used to create
            the application.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ApplicationInfo.EngineVersion">
            <summary>
            The developer-supplied version number of the engine used to create
            the application.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ApplicationInfo.ApiVersion">
            <summary>
            The version of the Vulkan API against which the application expects
            to run. If apiVersion is 0.0.0 the implementation must ignore it,
            otherwise if the implementation does not support the requested
            apiVersion it must throw IncompatibleDriverException. The patch
            version number specified in apiVersion is ignored when creating an
            instance object. Only the major and minor versions of the instance
            must match those requested in apiVersion.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.BindSparseInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BindSparseInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BindSparseInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BindSparseInfo.WaitSemaphoreCount">
            <summary>
            The number of semaphores upon which to wait before executing the
            sparse binding operations for the batch.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BindSparseInfo.WaitSemaphores">
            <summary>
            An array of semaphores upon which to wait on before the sparse
            binding operations for this batch begin execution. If semaphores to
            wait on are provided, they define a semaphore wait operation.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BindSparseInfo.BufferBindCount">
            <summary>
            The number of sparse buffer bindings to perform in the batch.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BindSparseInfo.BufferBinds">
            <summary>
            An array of SparseBufferMemoryBindInfo structures.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BindSparseInfo.ImageOpaqueBindCount">
            <summary>
            The number of opaque sparse image bindings to perform.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BindSparseInfo.ImageOpaqueBinds">
            <summary>
            An array of SparseImageOpaqueMemoryBindInfo structures, indicating
            opaque sparse image bindings to perform.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BindSparseInfo.ImageBindCount">
            <summary>
            The number of sparse image bindings to perform.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BindSparseInfo.ImageBinds">
            <summary>
            An array of SparseImageMemoryBindInfo structures, indicating sparse
            image bindings to perform.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BindSparseInfo.SignalSemaphoreCount">
            <summary>
            The number of semaphores to be signaled once the sparse binding
            operations specified by the structure have completed execution.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BindSparseInfo.SignalSemaphores">
            <summary>
            An array of semaphores which will be signaled when the sparse
            binding operations for this batch have completed execution. If
            semaphores to be signaled are provided, they define a semaphore
            signal operation.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Buffer">
            <summary>
            Buffers represent linear arrays of data which are used for various
            purposes by binding them to a graphics or compute pipeline via
            descriptor sets or via certain commands, or by directly specifying them
            as parameters to certain commands.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Buffer.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Buffer.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Buffer.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.BufferCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferCreateInfo.Flags">
            <summary>
            A bitmask describing additional parameters of the buffer.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferCreateInfo.Size">
            <summary>
            The size in bytes of the buffer to be created.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferCreateInfo.Usage">
            <summary>
            A bitmask describing the allowed usages of the buffer.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferCreateInfo.SharingMode">
            <summary>
            The sharing mode of the buffer when it will be accessed by multiple
            queue families.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferCreateInfo.QueueFamilyIndexCount">
            <summary>
            The number of entries in the queueFamilyIndices array.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferCreateInfo.QueueFamilyIndices">
            <summary>
            A list of queue families that will access this buffer (ignored if
            sharingMode is not Concurrent).
            </summary>
        </member>
        <member name="T:SharpVk.Interop.BufferMemoryBarrier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferMemoryBarrier.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferMemoryBarrier.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferMemoryBarrier.SourceAccessMask">
            <summary>
            srcAccessMask defines a source access mask.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferMemoryBarrier.DestinationAccessMask">
            <summary>
            dstAccessMask defines a destination access mask.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferMemoryBarrier.SourceQueueFamilyIndex">
            <summary>
            The source queue family for a queue family ownership transfer.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferMemoryBarrier.DestinationQueueFamilyIndex">
            <summary>
            The destination queue family for a queue family ownership transfer.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferMemoryBarrier.Buffer">
            <summary>
            A handle to the buffer whose backing memory is affected by the
            barrier.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferMemoryBarrier.Offset">
            <summary>
            An offset in bytes into the backing memory for buffer; this is
            relative to the base offset as bound to the buffer (see
            flink:vkBindBufferMemory).
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferMemoryBarrier.Size">
            <summary>
            A size in bytes of the affected area of backing memory for buffer,
            or VK_WHOLE_SIZE to use the range from offset to the end of the
            buffer.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.BufferView">
            <summary>
            Opaque handle to a buffer view object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.BufferView.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.BufferView.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.BufferView.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.BufferViewCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferViewCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferViewCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferViewCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferViewCreateInfo.Buffer">
            <summary>
            A Buffer on which the view will be created.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferViewCreateInfo.Format">
            <summary>
            A Format describing the format of the data elements in the buffer.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferViewCreateInfo.Offset">
            <summary>
            An offset in bytes from the base address of the buffer. Accesses to
            the buffer view from shaders use addressing that is relative to
            this starting offset.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.BufferViewCreateInfo.Range">
            <summary>
            A size in bytes of the buffer view. If range is equal to
            VK_WHOLE_SIZE, the range from offset to the end of the buffer is
            used. If VK_WHOLE_SIZE is used and the remaining size of the buffer
            is not a multiple of the element size of format, then the nearest
            smaller multiple is used.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.ClearColorValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.ClearValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.CommandBuffer">
            <summary>
            Opaque handle to a command buffer object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.CommandBuffer.#ctor(System.UIntPtr)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.CommandBuffer.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.CommandBuffer.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.CommandBufferAllocateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandBufferAllocateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandBufferAllocateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandBufferAllocateInfo.CommandPool">
            <summary>
            The command pool from which the command buffers are allocated.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandBufferAllocateInfo.Level">
            <summary>
            level determines whether the command buffers are primary or
            secondary command buffers. Possible values include: + --
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandBufferAllocateInfo.CommandBufferCount">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.CommandBufferBeginInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandBufferBeginInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandBufferBeginInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandBufferBeginInfo.Flags">
            <summary>
            A bitmask indicating usage behavior for the command buffer. Bits
            which can be set include: + --
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandBufferBeginInfo.InheritanceInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.CommandBufferInheritanceInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandBufferInheritanceInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandBufferInheritanceInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandBufferInheritanceInfo.RenderPass">
            <summary>
            A RenderPass object defining which render passes the CommandBuffer
            will be compatible with and can be executed within. If the
            CommandBuffer will not be executed within a render pass instance,
            renderPass is ignored.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandBufferInheritanceInfo.Subpass">
            <summary>
            The index of the subpass within the render pass instance that the
            CommandBuffer will be executed within. If the CommandBuffer will
            not be executed within a render pass instance, subpass is ignored.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandBufferInheritanceInfo.Framebuffer">
            <summary>
            framebuffer optionally refers to the Framebuffer object that the
            CommandBuffer will be rendering to if it is executed within a
            render pass instance. It can be null if the framebuffer is not
            known, or if the CommandBuffer will not be executed within a render
            pass instance. + [NOTE] .Note ==== Specifying the exact framebuffer
            that the secondary command buffer will be executed with may result
            in better performance at command buffer execution time. ====
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandBufferInheritanceInfo.OcclusionQueryEnable">
            <summary>
            Indicates whether the command buffer can be executed while an
            occlusion query is active in the primary command buffer. If this is
            VK_TRUE, then this command buffer can be executed whether the
            primary command buffer has an occlusion query active or not. If
            this is VK_FALSE, then the primary command buffer must not have an
            occlusion query active.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandBufferInheritanceInfo.QueryFlags">
            <summary>
            Indicates the query flags that can be used by an active occlusion
            query in the primary command buffer when this secondary command
            buffer is executed. If this value includes the
            VK_QUERY_CONTROL_PRECISE_BIT bit, then the active query can return
            boolean results or actual sample counts. If this bit is not set,
            then the active query must not use the VK_QUERY_CONTROL_PRECISE_BIT
            bit.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandBufferInheritanceInfo.PipelineStatistics">
            <summary>
            Indicates the set of pipeline statistics that can be counted by an
            active query in the primary command buffer when this secondary
            command buffer is executed. If this value includes a given bit,
            then this command buffer can be executed whether the primary
            command buffer has a pipeline statistics query active that includes
            this bit or not. If this value excludes a given bit, then the
            active pipeline statistics query must not be from a query pool that
            counts that statistic.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.CommandPool">
            <summary>
            Opaque handle to a command pool object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.CommandPool.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.CommandPool.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.CommandPool.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.CommandPoolCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandPoolCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandPoolCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandPoolCreateInfo.Flags">
            <summary>
            A bitmask indicating usage behavior for the pool and command
            buffers allocated from it. Bits which can be set include: + --
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CommandPoolCreateInfo.QueueFamilyIndex">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Commands">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Commands.VulkanDll">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateInstance(SharpVk.Interop.InstanceCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.Instance*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyInstance(SharpVk.Interop.Instance,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkEnumeratePhysicalDevices(SharpVk.Interop.Instance,System.UInt32*,SharpVk.Interop.PhysicalDevice*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetDeviceProcAddr(SharpVk.Interop.Device,System.Byte*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetInstanceProcAddr(SharpVk.Interop.Instance,System.Byte*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetPhysicalDeviceProperties(SharpVk.Interop.PhysicalDevice,SharpVk.Interop.PhysicalDeviceProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetPhysicalDeviceQueueFamilyProperties(SharpVk.Interop.PhysicalDevice,System.UInt32*,SharpVk.QueueFamilyProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetPhysicalDeviceMemoryProperties(SharpVk.Interop.PhysicalDevice,SharpVk.Interop.PhysicalDeviceMemoryProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetPhysicalDeviceFeatures(SharpVk.Interop.PhysicalDevice,SharpVk.Interop.PhysicalDeviceFeatures*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetPhysicalDeviceFormatProperties(SharpVk.Interop.PhysicalDevice,SharpVk.Format,SharpVk.FormatProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetPhysicalDeviceImageFormatProperties(SharpVk.Interop.PhysicalDevice,SharpVk.Format,SharpVk.ImageType,SharpVk.ImageTiling,SharpVk.ImageUsageFlags,SharpVk.ImageCreateFlags,SharpVk.ImageFormatProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateDevice(SharpVk.Interop.PhysicalDevice,SharpVk.Interop.DeviceCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.Device*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyDevice(SharpVk.Interop.Device,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkEnumerateInstanceLayerProperties(System.UInt32*,SharpVk.Interop.LayerProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkEnumerateInstanceExtensionProperties(System.Byte*,System.UInt32*,SharpVk.Interop.ExtensionProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkEnumerateDeviceLayerProperties(SharpVk.Interop.PhysicalDevice,System.UInt32*,SharpVk.Interop.LayerProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkEnumerateDeviceExtensionProperties(SharpVk.Interop.PhysicalDevice,System.Byte*,System.UInt32*,SharpVk.Interop.ExtensionProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetDeviceQueue(SharpVk.Interop.Device,System.UInt32,System.UInt32,SharpVk.Interop.Queue*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkQueueSubmit(SharpVk.Interop.Queue,System.UInt32,SharpVk.Interop.SubmitInfo*,SharpVk.Interop.Fence)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkQueueWaitIdle(SharpVk.Interop.Queue)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDeviceWaitIdle(SharpVk.Interop.Device)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkAllocateMemory(SharpVk.Interop.Device,SharpVk.Interop.MemoryAllocateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.DeviceMemory*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkFreeMemory(SharpVk.Interop.Device,SharpVk.Interop.DeviceMemory,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkMapMemory(SharpVk.Interop.Device,SharpVk.Interop.DeviceMemory,SharpVk.DeviceSize,SharpVk.DeviceSize,SharpVk.MemoryMapFlags,System.Void**)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkUnmapMemory(SharpVk.Interop.Device,SharpVk.Interop.DeviceMemory)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkFlushMappedMemoryRanges(SharpVk.Interop.Device,System.UInt32,SharpVk.Interop.MappedMemoryRange*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkInvalidateMappedMemoryRanges(SharpVk.Interop.Device,System.UInt32,SharpVk.Interop.MappedMemoryRange*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetDeviceMemoryCommitment(SharpVk.Interop.Device,SharpVk.Interop.DeviceMemory,SharpVk.DeviceSize*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetBufferMemoryRequirements(SharpVk.Interop.Device,SharpVk.Interop.Buffer,SharpVk.MemoryRequirements*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkBindBufferMemory(SharpVk.Interop.Device,SharpVk.Interop.Buffer,SharpVk.Interop.DeviceMemory,SharpVk.DeviceSize)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetImageMemoryRequirements(SharpVk.Interop.Device,SharpVk.Interop.Image,SharpVk.MemoryRequirements*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkBindImageMemory(SharpVk.Interop.Device,SharpVk.Interop.Image,SharpVk.Interop.DeviceMemory,SharpVk.DeviceSize)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetImageSparseMemoryRequirements(SharpVk.Interop.Device,SharpVk.Interop.Image,System.UInt32*,SharpVk.SparseImageMemoryRequirements*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetPhysicalDeviceSparseImageFormatProperties(SharpVk.Interop.PhysicalDevice,SharpVk.Format,SharpVk.ImageType,SharpVk.SampleCountFlags,SharpVk.ImageUsageFlags,SharpVk.ImageTiling,System.UInt32*,SharpVk.SparseImageFormatProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkQueueBindSparse(SharpVk.Interop.Queue,System.UInt32,SharpVk.Interop.BindSparseInfo*,SharpVk.Interop.Fence)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateFence(SharpVk.Interop.Device,SharpVk.Interop.FenceCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.Fence*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyFence(SharpVk.Interop.Device,SharpVk.Interop.Fence,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkResetFences(SharpVk.Interop.Device,System.UInt32,SharpVk.Interop.Fence*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetFenceStatus(SharpVk.Interop.Device,SharpVk.Interop.Fence)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkWaitForFences(SharpVk.Interop.Device,System.UInt32,SharpVk.Interop.Fence*,SharpVk.Bool32,System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateSemaphore(SharpVk.Interop.Device,SharpVk.Interop.SemaphoreCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.Semaphore*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroySemaphore(SharpVk.Interop.Device,SharpVk.Interop.Semaphore,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateEvent(SharpVk.Interop.Device,SharpVk.Interop.EventCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.Event*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyEvent(SharpVk.Interop.Device,SharpVk.Interop.Event,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetEventStatus(SharpVk.Interop.Device,SharpVk.Interop.Event)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkSetEvent(SharpVk.Interop.Device,SharpVk.Interop.Event)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkResetEvent(SharpVk.Interop.Device,SharpVk.Interop.Event)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateQueryPool(SharpVk.Interop.Device,SharpVk.Interop.QueryPoolCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.QueryPool*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyQueryPool(SharpVk.Interop.Device,SharpVk.Interop.QueryPool,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetQueryPoolResults(SharpVk.Interop.Device,SharpVk.Interop.QueryPool,System.UInt32,System.UInt32,SharpVk.HostSize,System.Void*,SharpVk.DeviceSize,SharpVk.QueryResultFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateBuffer(SharpVk.Interop.Device,SharpVk.Interop.BufferCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.Buffer*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyBuffer(SharpVk.Interop.Device,SharpVk.Interop.Buffer,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateBufferView(SharpVk.Interop.Device,SharpVk.Interop.BufferViewCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.BufferView*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyBufferView(SharpVk.Interop.Device,SharpVk.Interop.BufferView,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateImage(SharpVk.Interop.Device,SharpVk.Interop.ImageCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.Image*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyImage(SharpVk.Interop.Device,SharpVk.Interop.Image,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetImageSubresourceLayout(SharpVk.Interop.Device,SharpVk.Interop.Image,SharpVk.ImageSubresource*,SharpVk.SubresourceLayout*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateImageView(SharpVk.Interop.Device,SharpVk.Interop.ImageViewCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.ImageView*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyImageView(SharpVk.Interop.Device,SharpVk.Interop.ImageView,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateShaderModule(SharpVk.Interop.Device,SharpVk.Interop.ShaderModuleCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.ShaderModule*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyShaderModule(SharpVk.Interop.Device,SharpVk.Interop.ShaderModule,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreatePipelineCache(SharpVk.Interop.Device,SharpVk.Interop.PipelineCacheCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.PipelineCache*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyPipelineCache(SharpVk.Interop.Device,SharpVk.Interop.PipelineCache,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetPipelineCacheData(SharpVk.Interop.Device,SharpVk.Interop.PipelineCache,SharpVk.HostSize*,System.Void*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkMergePipelineCaches(SharpVk.Interop.Device,SharpVk.Interop.PipelineCache,System.UInt32,SharpVk.Interop.PipelineCache*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateGraphicsPipelines(SharpVk.Interop.Device,SharpVk.Interop.PipelineCache,System.UInt32,SharpVk.Interop.GraphicsPipelineCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.Pipeline*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateComputePipelines(SharpVk.Interop.Device,SharpVk.Interop.PipelineCache,System.UInt32,SharpVk.Interop.ComputePipelineCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.Pipeline*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyPipeline(SharpVk.Interop.Device,SharpVk.Interop.Pipeline,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreatePipelineLayout(SharpVk.Interop.Device,SharpVk.Interop.PipelineLayoutCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.PipelineLayout*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyPipelineLayout(SharpVk.Interop.Device,SharpVk.Interop.PipelineLayout,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateSampler(SharpVk.Interop.Device,SharpVk.Interop.SamplerCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.Sampler*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroySampler(SharpVk.Interop.Device,SharpVk.Interop.Sampler,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateDescriptorSetLayout(SharpVk.Interop.Device,SharpVk.Interop.DescriptorSetLayoutCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.DescriptorSetLayout*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyDescriptorSetLayout(SharpVk.Interop.Device,SharpVk.Interop.DescriptorSetLayout,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateDescriptorPool(SharpVk.Interop.Device,SharpVk.Interop.DescriptorPoolCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.DescriptorPool*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyDescriptorPool(SharpVk.Interop.Device,SharpVk.Interop.DescriptorPool,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkResetDescriptorPool(SharpVk.Interop.Device,SharpVk.Interop.DescriptorPool,SharpVk.DescriptorPoolResetFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkAllocateDescriptorSets(SharpVk.Interop.Device,SharpVk.Interop.DescriptorSetAllocateInfo*,SharpVk.Interop.DescriptorSet*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkFreeDescriptorSets(SharpVk.Interop.Device,SharpVk.Interop.DescriptorPool,System.UInt32,SharpVk.Interop.DescriptorSet*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkUpdateDescriptorSets(SharpVk.Interop.Device,System.UInt32,SharpVk.Interop.WriteDescriptorSet*,System.UInt32,SharpVk.Interop.CopyDescriptorSet*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateFramebuffer(SharpVk.Interop.Device,SharpVk.Interop.FramebufferCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.Framebuffer*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyFramebuffer(SharpVk.Interop.Device,SharpVk.Interop.Framebuffer,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateRenderPass(SharpVk.Interop.Device,SharpVk.Interop.RenderPassCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.RenderPass*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyRenderPass(SharpVk.Interop.Device,SharpVk.Interop.RenderPass,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkGetRenderAreaGranularity(SharpVk.Interop.Device,SharpVk.Interop.RenderPass,SharpVk.Extent2D*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCreateCommandPool(SharpVk.Interop.Device,SharpVk.Interop.CommandPoolCreateInfo*,SharpVk.Interop.AllocationCallbacks*,SharpVk.Interop.CommandPool*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkDestroyCommandPool(SharpVk.Interop.Device,SharpVk.Interop.CommandPool,SharpVk.Interop.AllocationCallbacks*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkResetCommandPool(SharpVk.Interop.Device,SharpVk.Interop.CommandPool,SharpVk.CommandPoolResetFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkAllocateCommandBuffers(SharpVk.Interop.Device,SharpVk.Interop.CommandBufferAllocateInfo*,SharpVk.Interop.CommandBuffer*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkFreeCommandBuffers(SharpVk.Interop.Device,SharpVk.Interop.CommandPool,System.UInt32,SharpVk.Interop.CommandBuffer*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkBeginCommandBuffer(SharpVk.Interop.CommandBuffer,SharpVk.Interop.CommandBufferBeginInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkEndCommandBuffer(SharpVk.Interop.CommandBuffer)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkResetCommandBuffer(SharpVk.Interop.CommandBuffer,SharpVk.CommandBufferResetFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdBindPipeline(SharpVk.Interop.CommandBuffer,SharpVk.PipelineBindPoint,SharpVk.Interop.Pipeline)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdSetViewport(SharpVk.Interop.CommandBuffer,System.UInt32,System.UInt32,SharpVk.Viewport*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdSetScissor(SharpVk.Interop.CommandBuffer,System.UInt32,System.UInt32,SharpVk.Rect2D*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdSetLineWidth(SharpVk.Interop.CommandBuffer,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdSetDepthBias(SharpVk.Interop.CommandBuffer,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdSetBlendConstants(SharpVk.Interop.CommandBuffer,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdSetDepthBounds(SharpVk.Interop.CommandBuffer,System.Single,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdSetStencilCompareMask(SharpVk.Interop.CommandBuffer,SharpVk.StencilFaceFlags,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdSetStencilWriteMask(SharpVk.Interop.CommandBuffer,SharpVk.StencilFaceFlags,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdSetStencilReference(SharpVk.Interop.CommandBuffer,SharpVk.StencilFaceFlags,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdBindDescriptorSets(SharpVk.Interop.CommandBuffer,SharpVk.PipelineBindPoint,SharpVk.Interop.PipelineLayout,System.UInt32,System.UInt32,SharpVk.Interop.DescriptorSet*,System.UInt32,System.UInt32*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdBindIndexBuffer(SharpVk.Interop.CommandBuffer,SharpVk.Interop.Buffer,SharpVk.DeviceSize,SharpVk.IndexType)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdBindVertexBuffers(SharpVk.Interop.CommandBuffer,System.UInt32,System.UInt32,SharpVk.Interop.Buffer*,SharpVk.DeviceSize*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdDraw(SharpVk.Interop.CommandBuffer,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdDrawIndexed(SharpVk.Interop.CommandBuffer,System.UInt32,System.UInt32,System.UInt32,System.Int32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdDrawIndirect(SharpVk.Interop.CommandBuffer,SharpVk.Interop.Buffer,SharpVk.DeviceSize,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdDrawIndexedIndirect(SharpVk.Interop.CommandBuffer,SharpVk.Interop.Buffer,SharpVk.DeviceSize,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdDispatch(SharpVk.Interop.CommandBuffer,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdDispatchIndirect(SharpVk.Interop.CommandBuffer,SharpVk.Interop.Buffer,SharpVk.DeviceSize)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdCopyBuffer(SharpVk.Interop.CommandBuffer,SharpVk.Interop.Buffer,SharpVk.Interop.Buffer,System.UInt32,SharpVk.BufferCopy*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdCopyImage(SharpVk.Interop.CommandBuffer,SharpVk.Interop.Image,SharpVk.ImageLayout,SharpVk.Interop.Image,SharpVk.ImageLayout,System.UInt32,SharpVk.ImageCopy*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdBlitImage(SharpVk.Interop.CommandBuffer,SharpVk.Interop.Image,SharpVk.ImageLayout,SharpVk.Interop.Image,SharpVk.ImageLayout,System.UInt32,SharpVk.Interop.ImageBlit*,SharpVk.Filter)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdCopyBufferToImage(SharpVk.Interop.CommandBuffer,SharpVk.Interop.Buffer,SharpVk.Interop.Image,SharpVk.ImageLayout,System.UInt32,SharpVk.BufferImageCopy*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdCopyImageToBuffer(SharpVk.Interop.CommandBuffer,SharpVk.Interop.Image,SharpVk.ImageLayout,SharpVk.Interop.Buffer,System.UInt32,SharpVk.BufferImageCopy*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdUpdateBuffer(SharpVk.Interop.CommandBuffer,SharpVk.Interop.Buffer,SharpVk.DeviceSize,SharpVk.DeviceSize,System.Void*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdFillBuffer(SharpVk.Interop.CommandBuffer,SharpVk.Interop.Buffer,SharpVk.DeviceSize,SharpVk.DeviceSize,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdClearColorImage(SharpVk.Interop.CommandBuffer,SharpVk.Interop.Image,SharpVk.ImageLayout,SharpVk.Interop.ClearColorValue*,System.UInt32,SharpVk.ImageSubresourceRange*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdClearDepthStencilImage(SharpVk.Interop.CommandBuffer,SharpVk.Interop.Image,SharpVk.ImageLayout,SharpVk.ClearDepthStencilValue*,System.UInt32,SharpVk.ImageSubresourceRange*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdClearAttachments(SharpVk.Interop.CommandBuffer,System.UInt32,SharpVk.ClearAttachment*,System.UInt32,SharpVk.ClearRect*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdResolveImage(SharpVk.Interop.CommandBuffer,SharpVk.Interop.Image,SharpVk.ImageLayout,SharpVk.Interop.Image,SharpVk.ImageLayout,System.UInt32,SharpVk.ImageResolve*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdSetEvent(SharpVk.Interop.CommandBuffer,SharpVk.Interop.Event,SharpVk.PipelineStageFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdResetEvent(SharpVk.Interop.CommandBuffer,SharpVk.Interop.Event,SharpVk.PipelineStageFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdWaitEvents(SharpVk.Interop.CommandBuffer,System.UInt32,SharpVk.Interop.Event*,SharpVk.PipelineStageFlags,SharpVk.PipelineStageFlags,System.UInt32,SharpVk.Interop.MemoryBarrier*,System.UInt32,SharpVk.Interop.BufferMemoryBarrier*,System.UInt32,SharpVk.Interop.ImageMemoryBarrier*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdPipelineBarrier(SharpVk.Interop.CommandBuffer,SharpVk.PipelineStageFlags,SharpVk.PipelineStageFlags,SharpVk.DependencyFlags,System.UInt32,SharpVk.Interop.MemoryBarrier*,System.UInt32,SharpVk.Interop.BufferMemoryBarrier*,System.UInt32,SharpVk.Interop.ImageMemoryBarrier*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdBeginQuery(SharpVk.Interop.CommandBuffer,SharpVk.Interop.QueryPool,System.UInt32,SharpVk.QueryControlFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdEndQuery(SharpVk.Interop.CommandBuffer,SharpVk.Interop.QueryPool,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdResetQueryPool(SharpVk.Interop.CommandBuffer,SharpVk.Interop.QueryPool,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdWriteTimestamp(SharpVk.Interop.CommandBuffer,SharpVk.PipelineStageFlags,SharpVk.Interop.QueryPool,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdCopyQueryPoolResults(SharpVk.Interop.CommandBuffer,SharpVk.Interop.QueryPool,System.UInt32,System.UInt32,SharpVk.Interop.Buffer,SharpVk.DeviceSize,SharpVk.DeviceSize,SharpVk.QueryResultFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdPushConstants(SharpVk.Interop.CommandBuffer,SharpVk.Interop.PipelineLayout,SharpVk.ShaderStageFlags,System.UInt32,System.UInt32,System.Void*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdBeginRenderPass(SharpVk.Interop.CommandBuffer,SharpVk.Interop.RenderPassBeginInfo*,SharpVk.SubpassContents)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdNextSubpass(SharpVk.Interop.CommandBuffer,SharpVk.SubpassContents)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdEndRenderPass(SharpVk.Interop.CommandBuffer)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Commands.vkCmdExecuteCommands(SharpVk.Interop.CommandBuffer,System.UInt32,SharpVk.Interop.CommandBuffer*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.ComputePipelineCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ComputePipelineCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ComputePipelineCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ComputePipelineCreateInfo.Flags">
            <summary>
            flags provides options for pipeline creation, and is of type
            PipelineCreateFlagBits.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ComputePipelineCreateInfo.Stage">
            <summary>
            A PipelineShaderStageCreateInfo describing the compute shader.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ComputePipelineCreateInfo.Layout">
            <summary>
            The description of binding locations used by both the pipeline and
            descriptor sets used with the pipeline.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ComputePipelineCreateInfo.BasePipelineHandle">
            <summary>
            A pipeline to derive from
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ComputePipelineCreateInfo.BasePipelineIndex">
            <summary>
            An index into the pCreateInfos parameter to use as a pipeline to
            derive from
            </summary>
        </member>
        <member name="T:SharpVk.Interop.CopyDescriptorSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CopyDescriptorSet.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CopyDescriptorSet.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CopyDescriptorSet.SourceSet">
            <summary>
            srcSet, srcBinding, and srcArrayElement are the source set,
            binding, and array element, respectively.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CopyDescriptorSet.SourceBinding">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CopyDescriptorSet.SourceArrayElement">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CopyDescriptorSet.DestinationSet">
            <summary>
            dstSet, dstBinding, and dstArrayElement are the destination set,
            binding, and array element, respectively.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CopyDescriptorSet.DestinationBinding">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CopyDescriptorSet.DestinationArrayElement">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.CopyDescriptorSet.DescriptorCount">
            <summary>
            The number of descriptors to copy from the source to destination.
            If descriptorCount is greater than the number of remaining array
            elements in the source or destination binding, those affect
            consecutive bindings in a manner similar to WriteDescriptorSet
            above.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.DescriptorBufferInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorBufferInfo.Buffer">
            <summary>
            The buffer resource.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorBufferInfo.Offset">
            <summary>
            The offset in bytes from the start of buffer. Access to buffer
            memory via this descriptor uses addressing that is relative to this
            starting offset.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorBufferInfo.Range">
            <summary>
            The size in bytes that is used for this descriptor update, or
            VK_WHOLE_SIZE to use the range from offset to the end of the
            buffer. + -- [NOTE] .Note ==== When using VK_WHOLE_SIZE, the
            effective range must not be larger than the maximum range for the
            descriptor type (maxUniformBufferRange or maxStorageBufferRange).
            This means that VK_WHOLE_SIZE is not typically useful in the common
            case where uniform buffer descriptors are suballocated from a
            buffer that is much larger than maxUniformBufferRange. ==== -- +
            For VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC and
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC descriptor types, offset
            is the base offset from which the dynamic offset is applied and
            range is the static size used for all dynamic offsets.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.DescriptorImageInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorImageInfo.Sampler">
            <summary>
            A sampler handle, and is used in descriptor updates for types
            VK_DESCRIPTOR_TYPE_SAMPLER and
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER if the binding being
            updated does not use immutable samplers.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorImageInfo.ImageView">
            <summary>
            An image view handle, and is used in descriptor updates for types
            VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE, VK_DESCRIPTOR_TYPE_STORAGE_IMAGE,
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, and
            VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorImageInfo.ImageLayout">
            <summary>
            The layout that the image will be in at the time this descriptor is
            accessed. imageLayout is used in descriptor updates for types
            VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE, VK_DESCRIPTOR_TYPE_STORAGE_IMAGE,
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, and
            VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.DescriptorPool">
            <summary>
            Opaque handle to a descriptor pool object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.DescriptorPool.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.DescriptorPool.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.DescriptorPool.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.DescriptorPoolCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorPoolCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorPoolCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorPoolCreateInfo.Flags">
            <summary>
            Specifies certain supported operations on the pool. Bits which can
            be set include: + --
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorPoolCreateInfo.MaxSets">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorPoolCreateInfo.PoolSizeCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorPoolCreateInfo.PoolSizes">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.DescriptorSet">
            <summary>
            Opaque handle to a descriptor set object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.DescriptorSet.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.DescriptorSet.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.DescriptorSet.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.DescriptorSetAllocateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorSetAllocateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorSetAllocateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorSetAllocateInfo.DescriptorPool">
            <summary>
            The pool which the sets will be allocated from.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorSetAllocateInfo.DescriptorSetCount">
            <summary>
            descriptorSetCount determines the number of descriptor sets to be
            allocated from the pool.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorSetAllocateInfo.SetLayouts">
            <summary>
            An array of descriptor set layouts, with each member specifying how
            the corresponding descriptor set is allocated.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.DescriptorSetLayout">
            <summary>
            Opaque handle to a descriptor set layout object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.DescriptorSetLayout.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.DescriptorSetLayout.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.DescriptorSetLayout.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.DescriptorSetLayoutBinding">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorSetLayoutBinding.Binding">
            <summary>
            The binding number of this entry and corresponds to a resource of
            the same binding number in the shader stages.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorSetLayoutBinding.DescriptorType">
            <summary>
            A DescriptorType specifying which type of resource descriptors are
            used for this binding.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorSetLayoutBinding.DescriptorCount">
            <summary>
            The number of descriptors contained in the binding, accessed in a
            shader as an array. If descriptorCount is zero this binding entry
            is reserved and the resource must not be accessed from any stage
            via this binding within any pipeline using the set layout.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorSetLayoutBinding.StageFlags">
            <summary>
            stageFlags member is a bitmask of ShaderStageFlagBits specifying
            which pipeline shader stages can access a resource for this
            binding. VK_SHADER_STAGE_ALL is a shorthand specifying that all
            defined shader stages, including any additional stages defined by
            extensions, can access the resource. + -- If a shader stage is not
            included in stageFlags, then a resource must not be accessed from
            that stage via this binding within any pipeline using the set
            layout. There are no limitations on what combinations of stages can
            be used by a descriptor binding, and in particular a binding can be
            used by both graphics stages and the compute stage. --
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorSetLayoutBinding.ImmutableSamplers">
            <summary>
            pImmutableSamplers affects initialization of samplers. If
            descriptorType specifies a VK_DESCRIPTOR_TYPE_SAMPLER or
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER type descriptor, then
            pImmutableSamplers can be used to initialize a set of _immutable
            samplers_. Immutable samplers are permanently bound into the set
            layout; later binding a sampler into an immutable sampler slot in a
            descriptor set is not allowed. If pImmutableSamplers is not Null,
            then it is considered to be an array of sampler handles that will
            be consumed by the set layout and used for the corresponding
            binding. If pImmutableSamplers is Null, then the sampler slots are
            dynamic and sampler handles must be bound into descriptor sets
            using this layout. If descriptorType is not one of these descriptor
            types, then pImmutableSamplers is ignored.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.DescriptorSetLayoutCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorSetLayoutCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorSetLayoutCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorSetLayoutCreateInfo.Flags">
            <summary>
            flags provides options for descriptor set layout creation, and is
            of type DescriptorSetLayoutCreateFlags. Bits which can be set
            include: + --
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorSetLayoutCreateInfo.BindingCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DescriptorSetLayoutCreateInfo.Bindings">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Device">
            <summary>
            Opaque handle to a device object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Device.#ctor(System.UIntPtr)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Device.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Device.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.DeviceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DeviceCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DeviceCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DeviceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DeviceCreateInfo.QueueCreateInfoCount">
            <summary>
            The unsigned integer size of the pQueueCreateInfos array. Refer to
            the Queue Creation section below for further details.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DeviceCreateInfo.QueueCreateInfos">
            <summary>
            An array of DeviceQueueCreateInfo structures describing the queues
            that are requested to be created along with the logical device.
            Refer to the Queue Creation section below for further details.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DeviceCreateInfo.EnabledLayerCount">
            <summary>
            enabledLayerCount is deprecated and ignored.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DeviceCreateInfo.EnabledLayerNames">
            <summary>
            ppEnabledLayerNames is deprecated and ignored. See Device Layer
            Deprecation.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DeviceCreateInfo.EnabledExtensionCount">
            <summary>
            The number of device extensions to enable.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DeviceCreateInfo.EnabledExtensionNames">
            <summary>
            An array of enabledExtensionCount strings containing the names of
            extensions to enable for the created device. See the Extensions
            section for further details.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DeviceCreateInfo.EnabledFeatures">
            <summary>
            Null or a PhysicalDeviceFeatures structure that contains boolean
            indicators of all the features to be enabled. Refer to the Features
            section for further details.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.DeviceMemory">
            <summary>
            Opaque handle to a device memory object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.DeviceMemory.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.DeviceMemory.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.DeviceMemory.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.DeviceQueueCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DeviceQueueCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DeviceQueueCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DeviceQueueCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DeviceQueueCreateInfo.QueueFamilyIndex">
            <summary>
            An unsigned integer indicating the index of the queue family to
            create on this device. This index corresponds to the index of an
            element of the pQueueFamilyProperties array that was returned by
            fname:vkGetPhysicalDeviceQueueFamilyProperties.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DeviceQueueCreateInfo.QueueCount">
            <summary>
            An unsigned integer specifying the number of queues to create in
            the queue family indicated by queueFamilyIndex.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.DeviceQueueCreateInfo.QueuePriorities">
            <summary>
            An array of queueCount normalized floating point values, specifying
            priorities of work that will be submitted to each created queue.
            See Queue Priority for more information.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Event">
            <summary>
            Opaque handle to a event object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Event.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Event.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Event.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.EventCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.EventCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.EventCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.EventCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.ExtensionProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ExtensionProperties.ExtensionName">
            <summary>
            A null-terminated string specifying the name of the extension.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ExtensionProperties.SpecVersion">
            <summary>
            The version of this extension. It is an integer, incremented with
            backward compatible changes.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Fence">
            <summary>
            Opaque handle to a fence object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Fence.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Fence.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Fence.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.FenceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.FenceCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.FenceCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.FenceCreateInfo.Flags">
            <summary>
            flags defines the initial state and behavior of the fence. Bits
            which can be set include: + --
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Framebuffer">
            <summary>
            Opaque handle to a framebuffer object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Framebuffer.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Framebuffer.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Framebuffer.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.FramebufferCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.FramebufferCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.FramebufferCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.FramebufferCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.FramebufferCreateInfo.RenderPass">
            <summary>
            A render pass that defines what render passes the framebuffer will
            be compatible with. See Render Pass Compatibility for details.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.FramebufferCreateInfo.AttachmentCount">
            <summary>
            The number of attachments.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.FramebufferCreateInfo.Attachments">
            <summary>
            An array of ImageView handles, each of which will be used as the
            corresponding attachment in a render pass instance.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.FramebufferCreateInfo.Width">
            <summary>
            width, height and layers define the dimensions of the framebuffer.
            If the render pass uses multiview, then layers must be one and each
            attachment requires a number of layers that is greater than the
            maximum bit index set in the view mask in the subpasses in which it
            is used.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.FramebufferCreateInfo.Height">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.FramebufferCreateInfo.Layers">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Google.PresentTimesInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Google.PresentTimesInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Google.PresentTimesInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Google.PresentTimesInfo.SwapchainCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Google.PresentTimesInfo.Times">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Google.VkSwapchainKHRGetPastPresentationTimingDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Google.VkSwapchainKHRGetRefreshCycleDurationDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.GraphicsPipelineCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.Flags">
            <summary>
            A bitmask of PipelineCreateFlagBits controlling how the pipeline
            will be generated, as described below.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.StageCount">
            <summary>
            The number of entries in the pStages array.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.Stages">
            <summary>
            An array of size stageCount structures of type
            PipelineShaderStageCreateInfo describing the set of the shader
            stages to be included in the graphics pipeline.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.VertexInputState">
            <summary>
            An instance of the PipelineVertexInputStateCreateInfo structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.InputAssemblyState">
            <summary>
            An instance of the PipelineInputAssemblyStateCreateInfo structure
            which determines input assembly behavior, as described in Drawing
            Commands.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.TessellationState">
            <summary>
            An instance of the PipelineTessellationStateCreateInfo structure,
            or Null if the pipeline does not include a tessellation control
            shader stage and tessellation evaluation shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.ViewportState">
            <summary>
            An instance of the PipelineViewportStateCreateInfo structure, or
            Null if the pipeline has rasterization disabled.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.RasterizationState">
            <summary>
            An instance of the PipelineRasterizationStateCreateInfo structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.MultisampleState">
            <summary>
            An instance of the PipelineMultisampleStateCreateInfo, or Null if
            the pipeline has rasterization disabled.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.DepthStencilState">
            <summary>
            An instance of the PipelineDepthStencilStateCreateInfo structure,
            or Null if the pipeline has rasterization disabled or if the
            subpass of the render pass the pipeline is created against does not
            use a depth/stencil attachment.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.ColorBlendState">
            <summary>
            An instance of the PipelineColorBlendStateCreateInfo structure, or
            Null if the pipeline has rasterization disabled or if the subpass
            of the render pass the pipeline is created against does not use any
            color attachments.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.DynamicState">
            <summary>
            A pointer to PipelineDynamicStateCreateInfo and is used to indicate
            which properties of the pipeline state object are dynamic and can
            be changed independently of the pipeline state. This can be Null,
            which means no state in the pipeline is considered dynamic.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.Layout">
            <summary>
            The description of binding locations used by both the pipeline and
            descriptor sets used with the pipeline.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.RenderPass">
            <summary>
            A handle to a render pass object describing the environment in
            which the pipeline will be used; the pipeline must only be used
            with an instance of any render pass compatible with the one
            provided. See Render Pass Compatibility for more information.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.Subpass">
            <summary>
            The index of the subpass in the render pass where this pipeline
            will be used.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.BasePipelineHandle">
            <summary>
            A pipeline to derive from.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.GraphicsPipelineCreateInfo.BasePipelineIndex">
            <summary>
            An index into the pCreateInfos parameter to use as a pipeline to
            derive from.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Image">
            <summary>
            Opaque handle to a image object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Image.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Image.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Image.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.ImageBlit">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageBlit.SourceSubresource">
            <summary>
            The subresource to blit from.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageBlit.SourceOffsets_0">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageBlit.SourceOffsets_1">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageBlit.DestinationSubresource">
            <summary>
            The subresource to blit into.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageBlit.DestinationOffsets_0">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageBlit.DestinationOffsets_1">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.ImageCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageCreateInfo.Flags">
            <summary>
            A bitmask describing additional parameters of the image. See
            ImageCreateFlagBits below for a description of the supported bits.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageCreateInfo.ImageType">
            <summary>
            A ImageType specifying the basic dimensionality of the image, as
            described below. Layers in array textures do not count as a
            dimension for the purposes of the image type.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageCreateInfo.Format">
            <summary>
            A Format describing the format and type of the data elements that
            will be contained in the image.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageCreateInfo.Extent">
            <summary>
            A Extent3D describing the number of data elements in each dimension
            of the base level.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageCreateInfo.MipLevels">
            <summary>
            mipLevels describes the number of levels of detail available for
            minified sampling of the image.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageCreateInfo.ArrayLayers">
            <summary>
            The number of layers in the image.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageCreateInfo.Samples">
            <summary>
            The number of sub-data element samples in the image as defined in
            SampleCountFlagBits. See Multisampling.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageCreateInfo.Tiling">
            <summary>
            A ImageTiling specifying the tiling arrangement of the data
            elements in memory, as described below.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageCreateInfo.Usage">
            <summary>
            A bitmask describing the intended usage of the image. See
            ImageUsageFlagBits below for a description of the supported bits.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageCreateInfo.SharingMode">
            <summary>
            The sharing mode of the image when it will be accessed by multiple
            queue families, and must be one of the values described for
            SharingMode in the Resource Sharing section below.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageCreateInfo.QueueFamilyIndexCount">
            <summary>
            The number of entries in the pQueueFamilyIndices array.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageCreateInfo.QueueFamilyIndices">
            <summary>
            A list of queue families that will access this image (ignored if
            sharingMode is not VK_SHARING_MODE_CONCURRENT).
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageCreateInfo.InitialLayout">
            <summary>
            initialLayout selects the initial ImageLayout state of all image
            subresources of the image. See Image Layouts. initialLayout must be
            VK_IMAGE_LAYOUT_UNDEFINED or VK_IMAGE_LAYOUT_PREINITIALIZED.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.ImageMemoryBarrier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageMemoryBarrier.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageMemoryBarrier.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageMemoryBarrier.SourceAccessMask">
            <summary>
            srcAccessMask defines a source access mask.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageMemoryBarrier.DestinationAccessMask">
            <summary>
            dstAccessMask defines a destination access mask.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageMemoryBarrier.OldLayout">
            <summary>
            The old layout in an image layout transition.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageMemoryBarrier.NewLayout">
            <summary>
            The new layout in an image layout transition.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageMemoryBarrier.SourceQueueFamilyIndex">
            <summary>
            The source queue family for a queue family ownership transfer.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageMemoryBarrier.DestinationQueueFamilyIndex">
            <summary>
            The destination queue family for a queue family ownership transfer.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageMemoryBarrier.Image">
            <summary>
            A handle to the image affected by this barrier.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageMemoryBarrier.SubresourceRange">
            <summary>
            subresourceRange describes the image subresource range within image
            that is affected by this barrier.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.ImageView">
            <summary>
            Opaque handle to a image view object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.ImageView.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.ImageView.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.ImageView.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.ImageViewCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageViewCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageViewCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageViewCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageViewCreateInfo.Image">
            <summary>
            A Image on which the view will be created.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageViewCreateInfo.ViewType">
            <summary>
            The type of the image view.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageViewCreateInfo.Format">
            <summary>
            A Format describing the format and type used to interpret data
            elements in the image.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageViewCreateInfo.Components">
            <summary>
            Specifies a remapping of color components (or of depth or stencil
            components after they have been converted into color components).
            See ComponentMapping.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ImageViewCreateInfo.SubresourceRange">
            <summary>
            A ImageSubresourceRange selecting the set of mipmap levels and
            array layers to be accessible to the view.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Instance">
            <summary>
            Opaque handle to a instance object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Instance.#ctor(System.UIntPtr)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Instance.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Instance.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.InstanceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.InstanceCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.InstanceCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.InstanceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.InstanceCreateInfo.ApplicationInfo">
            <summary>
            Null or an instance of ApplicationInfo. If not Null, this
            information helps implementations recognize behavior inherent to
            classes of applications. ApplicationInfo is defined in detail
            below.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.InstanceCreateInfo.EnabledLayerCount">
            <summary>
            The number of global layers to enable.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.InstanceCreateInfo.EnabledLayerNames">
            <summary>
            An array of enabledLayerCount strings containing the names of
            layers to enable for the created instance. See the Layers section
            for further details.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.InstanceCreateInfo.EnabledExtensionCount">
            <summary>
            The number of global extensions to enable.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.InstanceCreateInfo.EnabledExtensionNames">
            <summary>
            An array of enabledExtensionCount strings containing the names of
            extensions to enable.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.AndroidSurfaceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.AndroidSurfaceCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.AndroidSurfaceCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.AndroidSurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.AndroidSurfaceCreateInfo.Window">
            <summary>
            A pointer to the ANativeWindow to associate the surface with.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.BindBufferMemoryInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.BindBufferMemoryInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.BindBufferMemoryInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.BindBufferMemoryInfo.Buffer">
            <summary>
            The buffer to be attached to memory.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.BindBufferMemoryInfo.Memory">
            <summary>
            A DeviceMemory object describing the device memory to attach.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.BindBufferMemoryInfo.MemoryOffset">
            <summary>
            The start offset of the region of memory which is to be bound to
            the buffer. The number of bytes returned in the
            MemoryRequirements.size member in memory, starting from
            memoryOffset bytes, will be bound to the specified buffer.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.BindImageMemoryInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.BindImageMemoryInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.BindImageMemoryInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.BindImageMemoryInfo.Image">
            <summary>
            The image to be attached to memory.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.BindImageMemoryInfo.Memory">
            <summary>
            DeviceMemory object describing the device memory to attach.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.BindImageMemoryInfo.MemoryOffset">
            <summary>
            The start offset of the region of memory which is to be bound to
            the image. If SFRRectCount is zero, the number of bytes returned in
            the MemoryRequirements::size member in memory, starting from
            memoryOffset bytes, will be bound to the specified image.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.BindImagePlaneMemoryInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.BindImagePlaneMemoryInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.BindImagePlaneMemoryInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.BindImagePlaneMemoryInfo.PlaneAspect">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.BufferMemoryRequirementsInfo2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.BufferMemoryRequirementsInfo2.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.BufferMemoryRequirementsInfo2.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.BufferMemoryRequirementsInfo2.Buffer">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.D3D12FenceSubmitInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.D3D12FenceSubmitInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.D3D12FenceSubmitInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.D3D12FenceSubmitInfo.WaitSemaphoreValuesCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.D3D12FenceSubmitInfo.WaitSemaphoreValues">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.D3D12FenceSubmitInfo.SignalSemaphoreValuesCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.D3D12FenceSubmitInfo.SignalSemaphoreValues">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.DescriptorUpdateTemplate">
            <summary>
            A descriptor update template specifies a mapping from descriptor update
            information in host memory to descriptors in a descriptor set. It is
            designed to avoid passing redundant information to the driver when
            frequently updating the same set of descriptors in descriptor sets.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Khronos.DescriptorUpdateTemplate.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Khronos.DescriptorUpdateTemplate.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Khronos.DescriptorUpdateTemplate.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.DescriptorUpdateTemplateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DescriptorUpdateTemplateCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DescriptorUpdateTemplateCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DescriptorUpdateTemplateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DescriptorUpdateTemplateCreateInfo.DescriptorUpdateEntryCount">
            <summary>
            The number of elements in the pDescriptorUpdateEntries array.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DescriptorUpdateTemplateCreateInfo.DescriptorUpdateEntries">
            <summary>
            An array of DescriptorUpdateTemplateEntryKHR structures describing
            the descriptors to be updated by the descriptor update template.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DescriptorUpdateTemplateCreateInfo.TemplateType">
            <summary>
            Specifies the type of the descriptor update template. If set to
            VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR it can only
            be used to update descriptor sets with a fixed descriptorSetLayout.
            If set to VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR
            it can only be used to push descriptor sets using the provided
            pipelineBindPoint, pipelineLayout, and set number.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DescriptorUpdateTemplateCreateInfo.DescriptorSetLayout">
            <summary>
            The descriptor set layout the parameter update template will be
            used with. All descriptor sets which are going to be updated
            through the newly created descriptor update template must be
            created with this layout. descriptorSetLayout is the descriptor set
            layout used to build the descriptor update template. All descriptor
            sets which are going to be updated through the newly created
            descriptor update template must be created with a layout that
            matches (is the same as, or defined identically to) this layout.
            This parameter is ignored if templateType is not
            VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DescriptorUpdateTemplateCreateInfo.PipelineBindPoint">
            <summary>
            A PipelineBindPoint indicating whether the descriptors will be used
            by graphics pipelines or compute pipelines. This parameter is
            ignored if templateType is not
            VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DescriptorUpdateTemplateCreateInfo.PipelineLayout">
            <summary>
            A PipelineLayout object used to program the bindings. This
            parameter is ignored if templateType is not
            VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DescriptorUpdateTemplateCreateInfo.Set">
            <summary>
            The set number of the descriptor set in the pipeline layout that
            will be updated. This parameter is ignored if templateType is not
            VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR ifndef::VK_KHR_push_descriptor[]
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Display">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Khronos.Display.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Khronos.Display.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Khronos.Display.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.DisplayMode">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Khronos.DisplayMode.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Khronos.DisplayMode.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Khronos.DisplayMode.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.DisplayModeCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayModeCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayModeCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayModeCreateInfo.Flags">
            <summary>
            Reserved for future use, and must be zero.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayModeCreateInfo.Parameters">
            <summary>
            A DisplayModeParametersKHR structure describing the display
            parameters to use in creating the new mode. If the parameters are
            not compatible with the specified display, the implementation must
            return Result.ErrorINITIALIZATION_FAILED.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.DisplayModeProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayModeProperties.DisplayMode">
            <summary>
            A handle to the display mode described in this structure. This
            handle will be valid for the lifetime of the Vulkan instance.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayModeProperties.Parameters">
            <summary>
            A DisplayModeParametersKHR structure describing the display
            parameters associated with displayMode.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.DisplayPlaneProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayPlaneProperties.CurrentDisplay">
            <summary>
            The handle of the display the plane is currently associated with.
            If the plane is not currently attached to any displays, this will
            be null.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayPlaneProperties.CurrentStackIndex">
            <summary>
            The current z-order of the plane. This will be between 0 and the
            value returned by
            fname:vkGetPhysicalDeviceDisplayPlanePropertiesKHR() in
            pPropertyCount.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.DisplayPresentInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayPresentInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayPresentInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayPresentInfo.SourceRect">
            <summary>
            A rectangular region of pixels to present. It must be a subset of
            the image being presented. If DisplayPresentInfoKHR is not
            specified, this region will be assumed to be the entire presentable
            image.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayPresentInfo.DestinationRect">
            <summary>
            A rectangular region within the visible region of the swapchain's
            display mode. If DisplayPresentInfoKHR is not specified, this
            region will be assumed to be the entire visible region of the
            visible region of the swapchain's mode. If the specified rectangle
            is a subset of the display mode's visible region, content from
            display planes below the swapchain's plane will be visible outside
            the rectangle. If there are no planes below the swapchain's, the
            area outside the specified rectangle will be black. If portions of
            the specified rectangle are outside of the display's visible
            region, pixels mapping only to those portions of the rectangle will
            be discarded.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayPresentInfo.Persistent">
            <summary>
            persistent: If this is VK_TRUE, the display engine will enable
            buffered mode on displays that support it. This allows the display
            engine to stop sending content to the display until a new image is
            presented. The display will instead maintain a copy of the last
            presented image. This allows less power to be used, but may
            increase presentation latency. If DisplayPresentInfoKHR is not
            specified, persistent mode will not be used.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.DisplayProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayProperties.Display">
            <summary>
            A handle that is used to refer to the display described here. This
            handle will be valid for the lifetime of the Vulkan instance.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayProperties.DisplayName">
            <summary>
            A NULL-terminated string containing the name of the display.
            Generally, this will be the name provided by the display's EDID. It
            can be Null if no suitable name is available.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayProperties.PhysicalDimensions">
            <summary>
            physicalDimensions describes the physical width and height of the
            visible portion of the display, in millimeters.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayProperties.PhysicalResolution">
            <summary>
            physicalResolution describes the physical, native, or preferred
            resolution of the display.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayProperties.SupportedTransforms">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayProperties.PlaneReorderPossible">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplayProperties.PersistentContent">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.DisplaySurfaceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplaySurfaceCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplaySurfaceCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplaySurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use, and must be zero.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplaySurfaceCreateInfo.DisplayMode">
            <summary>
            The mode to use when displaying this surface.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplaySurfaceCreateInfo.PlaneIndex">
            <summary>
            The plane on which this surface appears.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplaySurfaceCreateInfo.PlaneStackIndex">
            <summary>
            The z-order of the plane.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplaySurfaceCreateInfo.Transform">
            <summary>
            The transform to apply to the images as part of the scanout
            operation.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplaySurfaceCreateInfo.GlobalAlpha">
            <summary>
            The global alpha value. This value is ignored if alphaMode is not
            VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplaySurfaceCreateInfo.AlphaMode">
            <summary>
            The type of alpha blending to use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.DisplaySurfaceCreateInfo.ImageExtent">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.AcquireNextImageInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.AcquireNextImageInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.AcquireNextImageInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.AcquireNextImageInfo.Swapchain">
            <summary>
            The swapchain from which an image is being acquired.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.AcquireNextImageInfo.Timeout">
            <summary>
            Indicates how long the function waits, in nanoseconds, if no image
            is available.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.AcquireNextImageInfo.Semaphore">
            <summary>
            Null or a semaphore to signal.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.AcquireNextImageInfo.Fence">
            <summary>
            Null or a fence to signal.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.AcquireNextImageInfo.DeviceMask">
            <summary>
            A mask of physical devices for which the swapchain image will be
            ready to use when the semaphore or fence is signaled.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.BindBufferMemoryDeviceGroupInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.BindBufferMemoryDeviceGroupInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.BindBufferMemoryDeviceGroupInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.BindBufferMemoryDeviceGroupInfo.DeviceIndexCount">
            <summary>
            The number of elements in DeviceIndices.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.BindBufferMemoryDeviceGroupInfo.DeviceIndices">
            <summary>
            An array of device indices.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.BindImageMemoryDeviceGroupInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.BindImageMemoryDeviceGroupInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.BindImageMemoryDeviceGroupInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.BindImageMemoryDeviceGroupInfo.DeviceIndexCount">
            <summary>
            The number of elements in DeviceIndices.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.BindImageMemoryDeviceGroupInfo.DeviceIndices">
            <summary>
            An array of device indices.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.BindImageMemoryDeviceGroupInfo.SFRRectCount">
            <summary>
            The number of elements in SFRRects.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.BindImageMemoryDeviceGroupInfo.SFRRects">
            <summary>
            An array of rectangles describing which regions of the image are
            attached to each instance of memory.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.BindImageMemorySwapchainInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.BindImageMemorySwapchainInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.BindImageMemorySwapchainInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.BindImageMemorySwapchainInfo.Swapchain">
            <summary>
            Null or a swapchain handle.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.BindImageMemorySwapchainInfo.ImageIndex">
            <summary>
            An image index within swapchain.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.DeviceGroupBindSparseInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupBindSparseInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupBindSparseInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupBindSparseInfo.ResourceDeviceIndex">
            <summary>
            A device index indicating which instance of the resource is bound.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupBindSparseInfo.MemoryDeviceIndex">
            <summary>
            A device index indicating which instance of the memory the resource
            instance is bound to.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.DeviceGroupCommandBufferBeginInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupCommandBufferBeginInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupCommandBufferBeginInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupCommandBufferBeginInfo.DeviceMask">
            <summary>
            The initial value of the command buffer's device mask.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.DeviceGroupDeviceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupDeviceCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupDeviceCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupDeviceCreateInfo.PhysicalDeviceCount">
            <summary>
            The number of elements in the pPhysicalDevices array.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupDeviceCreateInfo.PhysicalDevices">
            <summary>
            An array of physical device handles belonging to the same device
            group.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.DeviceGroupPresentCapabilities">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupPresentCapabilities.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupPresentCapabilities.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupPresentCapabilities.PresentMask">
            <summary>
            An array of masks, where the mask at element [eq]#i# is non-zero if
            physical device [eq]#i# has a presentation engine, and where bit
            [eq]#j# is set in element [eq]#i# if physical device [eq]#i# can
            present swapchain images from physical device [eq]#j#. If element
            [eq]#i# is non-zero, then bit [eq]#i# must be set.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupPresentCapabilities.Modes">
            <summary>
            A bitmask indicating which device group presentation modes are
            supported. The bits returned in modes are: + --
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.DeviceGroupPresentInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupPresentInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupPresentInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupPresentInfo.SwapchainCount">
            <summary>
            swapchainCount is zero or the number of elements in pDeviceMasks.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupPresentInfo.DeviceMasks">
            <summary>
            An array of device masks, one for each element of
            PresentInfoKHR::pSwapchains.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupPresentInfo.Mode">
            <summary>
            The device group present mode that will be used for this present.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.DeviceGroupRenderPassBeginInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupRenderPassBeginInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupRenderPassBeginInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupRenderPassBeginInfo.DeviceMask">
            <summary>
            The device mask for the render pass instance.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupRenderPassBeginInfo.DeviceRenderAreaCount">
            <summary>
            The number of elements in the pDeviceRenderAreas array.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupRenderPassBeginInfo.DeviceRenderAreas">
            <summary>
            An array of structures of type Rect2D defining the render area for
            each physical device.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.DeviceGroupSubmitInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupSubmitInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupSubmitInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupSubmitInfo.WaitSemaphoreCount">
            <summary>
            The number of elements in the pWaitSemaphoreDeviceIndices array.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupSubmitInfo.WaitSemaphoreDeviceIndices">
            <summary>
            An array of device indices indicating which physical device
            executes the semaphore wait operation in the corresponding element
            of SubmitInfo::pWaitSemaphores.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupSubmitInfo.CommandBufferCount">
            <summary>
            The number of elements in the pCommandBufferDeviceMasks array.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupSubmitInfo.CommandBufferDeviceMasks">
            <summary>
            An array of device masks indicating which physical devices execute
            the command buffer in the corresponding element of
            SubmitInfo::pCommandBuffers. A physical device executes the command
            buffer if the corresponding bit is set in the mask.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupSubmitInfo.SignalSemaphoreCount">
            <summary>
            The number of elements in the pSignalSemaphoreDeviceIndices array.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupSubmitInfo.SignalSemaphoreDeviceIndices">
            <summary>
            An array of device indices indicating which physical device
            executes the semaphore signal operation in the corresponding
            element of SubmitInfo::pSignalSemaphores.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.DeviceGroupSwapchainCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupSwapchainCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupSwapchainCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.DeviceGroupSwapchainCreateInfo.Modes">
            <summary>
            A bitfield of modes that the swapchain can be used with.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.ImageSwapchainCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.ImageSwapchainCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.ImageSwapchainCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.ImageSwapchainCreateInfo.Swapchain">
            <summary>
            swapchain is null or a handle of a swapchain that the image will be
            bound to.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.MemoryAllocateFlagsInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.MemoryAllocateFlagsInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.MemoryAllocateFlagsInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.MemoryAllocateFlagsInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.MemoryAllocateFlagsInfo.DeviceMask">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDeviceCount">
            <summary>
            The number of physical devices in the group.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_0">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_1">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_3">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_4">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_5">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_6">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_7">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_9">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_10">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_11">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_12">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_13">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_14">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_15">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_17">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_18">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_19">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_20">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_21">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_22">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_23">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_24">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_25">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_26">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_27">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_28">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_29">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_30">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices_31">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties.SubsetAllocation">
            <summary>
            Indicates whether logical devices created from the group support
            allocating device memory on a subset of devices, via the deviceMask
            member of the MemoryAllocateFlagsInfoKHX. If this is VK_FALSE, then
            all device memory allocations are made across all physical devices
            in the group. If physicalDeviceCount is `1`, then subsetAllocation
            must be VK_FALSE.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceMultiviewFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceMultiviewFeatures.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceMultiviewFeatures.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceMultiviewFeatures.Multiview">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceMultiviewFeatures.MultiviewGeometryShader">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceMultiviewFeatures.MultiviewTessellationShader">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceMultiviewProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceMultiviewProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceMultiviewProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceMultiviewProperties.MaxMultiviewViewCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.PhysicalDeviceMultiviewProperties.MaxMultiviewInstanceIndex">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.RenderPassMultiviewCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.RenderPassMultiviewCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.RenderPassMultiviewCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.RenderPassMultiviewCreateInfo.SubpassCount">
            <summary>
            Zero or is the number of subpasses in the render pass.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.RenderPassMultiviewCreateInfo.ViewMasks">
            <summary>
            An array of view masks, where each mask is a bitfield of view
            indices describing which views rendering is broadcast to in each
            subpass, when multiview is enabled. If subpassCount is zero, each
            view mask is treated as zero.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.RenderPassMultiviewCreateInfo.DependencyCount">
            <summary>
            dependencyCount is zero or the number of dependencies in the render
            pass.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.RenderPassMultiviewCreateInfo.ViewOffsets">
            <summary>
            An array of dependencyCount view offsets, one for each dependency.
            If dependencyCount is zero, each dependency's view offset is
            treated as zero. Each view offset controls which views in the
            source subpass the views in the destination subpass depend on.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.RenderPassMultiviewCreateInfo.CorrelationMaskCount">
            <summary>
            correlationMaskCount is zero or a number of correlation masks.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Experimental.RenderPassMultiviewCreateInfo.CorrelationMasks">
            <summary>
            An array of view masks indicating sets of views that may be more
            efficient to render concurrently.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.VkCommandBufferDispatchBaseDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.VkCommandBufferSetDeviceMaskDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.VkDeviceAcquireNextImage2Delegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.VkDeviceGetGroupPeerMemoryFeaturesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.VkDeviceGetGroupPresentCapabilitiesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.VkDeviceGetGroupSurfacePresentModesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.VkInstanceEnumeratePhysicalDeviceGroupsDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Experimental.VkPhysicalDeviceGetPresentRectanglesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ExportFenceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportFenceCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportFenceCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportFenceCreateInfo.HandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ExportFenceWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportFenceWin32HandleInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportFenceWin32HandleInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportFenceWin32HandleInfo.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportFenceWin32HandleInfo.DwAccess">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportFenceWin32HandleInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ExportMemoryAllocateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportMemoryAllocateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportMemoryAllocateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportMemoryAllocateInfo.HandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ExportMemoryWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportMemoryWin32HandleInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportMemoryWin32HandleInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportMemoryWin32HandleInfo.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportMemoryWin32HandleInfo.DwAccess">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportMemoryWin32HandleInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ExportSemaphoreCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportSemaphoreCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportSemaphoreCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportSemaphoreCreateInfo.HandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ExportSemaphoreWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportSemaphoreWin32HandleInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportSemaphoreWin32HandleInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportSemaphoreWin32HandleInfo.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportSemaphoreWin32HandleInfo.DwAccess">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExportSemaphoreWin32HandleInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ExternalBufferProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalBufferProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalBufferProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalBufferProperties.ExternalMemoryProperties">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ExternalFenceProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalFenceProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalFenceProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalFenceProperties.ExportFromImportedHandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalFenceProperties.CompatibleHandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalFenceProperties.ExternalFenceFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ExternalImageFormatProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalImageFormatProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalImageFormatProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalImageFormatProperties.ExternalMemoryProperties">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ExternalMemoryBufferCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalMemoryBufferCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalMemoryBufferCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalMemoryBufferCreateInfo.HandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ExternalMemoryImageCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalMemoryImageCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalMemoryImageCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalMemoryImageCreateInfo.HandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ExternalSemaphoreProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalSemaphoreProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalSemaphoreProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalSemaphoreProperties.ExportFromImportedHandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalSemaphoreProperties.CompatibleHandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ExternalSemaphoreProperties.ExternalSemaphoreFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.FenceGetFileDescriptorInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.FenceGetFileDescriptorInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.FenceGetFileDescriptorInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.FenceGetFileDescriptorInfo.Fence">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.FenceGetFileDescriptorInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.FenceGetWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.FenceGetWin32HandleInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.FenceGetWin32HandleInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.FenceGetWin32HandleInfo.Fence">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.FenceGetWin32HandleInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.FormatProperties2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.FormatProperties2.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.FormatProperties2.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.FormatProperties2.FormatProperties">
            <summary>
            A structure of type FormatProperties describing features supported
            by the requested format.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ImageFormatListCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImageFormatListCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImageFormatListCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImageFormatListCreateInfo.ViewFormatCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImageFormatListCreateInfo.ViewFormats">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ImageFormatProperties2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImageFormatProperties2.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImageFormatProperties2.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImageFormatProperties2.ImageFormatProperties">
            <summary>
            An instance of a ImageFormatProperties structure in which
            capabilities are returned.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ImageMemoryRequirementsInfo2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImageMemoryRequirementsInfo2.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImageMemoryRequirementsInfo2.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImageMemoryRequirementsInfo2.Image">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ImagePlaneMemoryRequirementsInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImagePlaneMemoryRequirementsInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImagePlaneMemoryRequirementsInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImagePlaneMemoryRequirementsInfo.PlaneAspect">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ImageSparseMemoryRequirementsInfo2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImageSparseMemoryRequirementsInfo2.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImageSparseMemoryRequirementsInfo2.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImageSparseMemoryRequirementsInfo2.Image">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ImageViewUsageCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImageViewUsageCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImageViewUsageCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImageViewUsageCreateInfo.Usage">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ImportFenceFileDescriptorInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportFenceFileDescriptorInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportFenceFileDescriptorInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportFenceFileDescriptorInfo.Fence">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportFenceFileDescriptorInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportFenceFileDescriptorInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportFenceFileDescriptorInfo.FileDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ImportFenceWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportFenceWin32HandleInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportFenceWin32HandleInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportFenceWin32HandleInfo.Fence">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportFenceWin32HandleInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportFenceWin32HandleInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportFenceWin32HandleInfo.Handle">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportFenceWin32HandleInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ImportMemoryFileDescriptorInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportMemoryFileDescriptorInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportMemoryFileDescriptorInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportMemoryFileDescriptorInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportMemoryFileDescriptorInfo.FileDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ImportMemoryWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportMemoryWin32HandleInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportMemoryWin32HandleInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportMemoryWin32HandleInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportMemoryWin32HandleInfo.Handle">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportMemoryWin32HandleInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ImportSemaphoreFileDescriptorInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportSemaphoreFileDescriptorInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportSemaphoreFileDescriptorInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportSemaphoreFileDescriptorInfo.Semaphore">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportSemaphoreFileDescriptorInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportSemaphoreFileDescriptorInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportSemaphoreFileDescriptorInfo.FileDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.ImportSemaphoreWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportSemaphoreWin32HandleInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportSemaphoreWin32HandleInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportSemaphoreWin32HandleInfo.Semaphore">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportSemaphoreWin32HandleInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportSemaphoreWin32HandleInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportSemaphoreWin32HandleInfo.Handle">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.ImportSemaphoreWin32HandleInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.MemoryDedicatedAllocateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryDedicatedAllocateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryDedicatedAllocateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryDedicatedAllocateInfo.Image">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryDedicatedAllocateInfo.Buffer">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.MemoryDedicatedRequirements">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryDedicatedRequirements.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryDedicatedRequirements.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryDedicatedRequirements.PrefersDedicatedAllocation">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryDedicatedRequirements.RequiresDedicatedAllocation">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.MemoryFileDescriptorProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryFileDescriptorProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryFileDescriptorProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryFileDescriptorProperties.MemoryTypeBits">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.MemoryGetFileDescriptorInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryGetFileDescriptorInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryGetFileDescriptorInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryGetFileDescriptorInfo.Memory">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryGetFileDescriptorInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.MemoryGetWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryGetWin32HandleInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryGetWin32HandleInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryGetWin32HandleInfo.Memory">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryGetWin32HandleInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.MemoryRequirements2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryRequirements2.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryRequirements2.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryRequirements2.MemoryRequirements">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.MemoryWin32HandleProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryWin32HandleProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryWin32HandleProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MemoryWin32HandleProperties.MemoryTypeBits">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.MirSurfaceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MirSurfaceCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MirSurfaceCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MirSurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MirSurfaceCreateInfo.Connection">
            <summary>
            connection and surface are pointers to the MirConnection and
            MirSurface for the window to associate the surface with.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.MirSurfaceCreateInfo.MirSurface">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PhysicalDevice16BitStorageFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDevice16BitStorageFeatures.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDevice16BitStorageFeatures.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDevice16BitStorageFeatures.StorageBuffer16BitAccess">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDevice16BitStorageFeatures.UniformAndStorageBuffer16BitAccess">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDevice16BitStorageFeatures.StoragePushConstant16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDevice16BitStorageFeatures.StorageInputOutput16">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PhysicalDeviceExternalBufferInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceExternalBufferInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceExternalBufferInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceExternalBufferInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceExternalBufferInfo.Usage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceExternalBufferInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PhysicalDeviceExternalFenceInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceExternalFenceInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceExternalFenceInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceExternalFenceInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PhysicalDeviceExternalImageFormatInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceExternalImageFormatInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceExternalImageFormatInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceExternalImageFormatInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PhysicalDeviceExternalSemaphoreInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceExternalSemaphoreInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceExternalSemaphoreInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceExternalSemaphoreInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PhysicalDeviceFeatures2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceFeatures2.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceFeatures2.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceFeatures2.Features">
            <summary>
            A structure of type PhysicalDeviceFeatures describing the
            fine-grained features of the Vulkan 1.0 API.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PhysicalDeviceIDProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceIDProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceIDProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceIDProperties.DeviceUUID">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceIDProperties.DriverUUID">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceIDProperties.DeviceLUID">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceIDProperties.DeviceNodeMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceIDProperties.DeviceLUIDValid">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PhysicalDeviceImageFormatInfo2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceImageFormatInfo2.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceImageFormatInfo2.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceImageFormatInfo2.Format">
            <summary>
            The image format, corresponding to ImageCreateInfo::format.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceImageFormatInfo2.Type">
            <summary>
            The image type, corresponding to ImageCreateInfo::imageType.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceImageFormatInfo2.Tiling">
            <summary>
            The image tiling, corresponding to ImageCreateInfo::tiling.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceImageFormatInfo2.Usage">
            <summary>
            The intended usage of the image, corresponding to
            ImageCreateInfo::usage.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceImageFormatInfo2.Flags">
            <summary>
            A bitmask describing additional parameters of the image,
            corresponding to ImageCreateInfo::flags.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PhysicalDeviceMemoryProperties2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceMemoryProperties2.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceMemoryProperties2.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceMemoryProperties2.MemoryProperties">
            <summary>
            A structure of type PhysicalDeviceMemoryProperties which is
            populated with the same values as in
            flink:vkGetPhysicalDeviceMemoryProperties.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PhysicalDevicePointClippingProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDevicePointClippingProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDevicePointClippingProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDevicePointClippingProperties.PointClippingBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PhysicalDeviceProperties2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceProperties2.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceProperties2.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceProperties2.Properties">
            <summary>
            A structure of type PhysicalDeviceProperties describing the
            properties of the physical device. This structure is written with
            the same values as if it were written by
            flink:vkGetPhysicalDeviceProperties.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PhysicalDevicePushDescriptorProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDevicePushDescriptorProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDevicePushDescriptorProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDevicePushDescriptorProperties.MaxPushDescriptors">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PhysicalDeviceSamplerYcbcrConversionFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceSamplerYcbcrConversionFeatures.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceSamplerYcbcrConversionFeatures.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceSamplerYcbcrConversionFeatures.SamplerYcbcrConversion">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PhysicalDeviceSparseImageFormatInfo2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceSparseImageFormatInfo2.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceSparseImageFormatInfo2.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceSparseImageFormatInfo2.Format">
            <summary>
            The image format.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceSparseImageFormatInfo2.Type">
            <summary>
            The dimensionality of image.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceSparseImageFormatInfo2.Samples">
            <summary>
            The number of samples per pixel as defined in SampleCountFlagBits.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceSparseImageFormatInfo2.Usage">
            <summary>
            A bitmask describing the intended usage of the image.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceSparseImageFormatInfo2.Tiling">
            <summary>
            The tiling arrangement of the data elements in memory.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PhysicalDeviceSurfaceInfo2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceSurfaceInfo2.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceSurfaceInfo2.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceSurfaceInfo2.Surface">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PhysicalDeviceVariablePointerFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceVariablePointerFeatures.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceVariablePointerFeatures.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceVariablePointerFeatures.VariablePointersStorageBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PhysicalDeviceVariablePointerFeatures.VariablePointers">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PipelineTessellationDomainOriginStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PipelineTessellationDomainOriginStateCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PipelineTessellationDomainOriginStateCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PipelineTessellationDomainOriginStateCreateInfo.DomainOrigin">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PresentInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PresentInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PresentInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PresentInfo.WaitSemaphoreCount">
            <summary>
            The number of semaphores to wait for before issuing the present
            request. The number may be zero.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PresentInfo.WaitSemaphores">
            <summary>
            If not Null, is an array of Semaphore objects with
            waitSemaphoreCount entries, and specifies the semaphores to wait
            for before issuing the present request.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PresentInfo.SwapchainCount">
            <summary>
            The number of swapchains being presented to by this command.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PresentInfo.Swapchains">
            <summary>
            An array of SwapchainKHR objects with swapchainCount entries. A
            given swapchain must not appear in this list more than once.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PresentInfo.ImageIndices">
            <summary>
            An array of indices into the array of each swapchain's presentable
            images, with swapchainCount entries. Each entry in this array
            identifies the image to present on the corresponding entry in the
            pSwapchains array.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PresentInfo.Results">
            <summary>
            An array of Result typed elements with swapchainCount entries.
            Applications that do not need per-swapchain results can use Null
            for pResults. If non-Null, each entry in pResults will be set to
            the Result for presenting the swapchain corresponding to the same
            index in pSwapchains.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PresentRegion">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PresentRegion.RectangleCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PresentRegion.Rectangles">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.PresentRegions">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PresentRegions.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PresentRegions.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PresentRegions.SwapchainCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.PresentRegions.Regions">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.QueueFamilyProperties2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.QueueFamilyProperties2.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.QueueFamilyProperties2.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.QueueFamilyProperties2.QueueFamilyProperties">
            <summary>
            A structure of type QueueFamilyProperties which is populated with
            the same values as in
            flink:vkGetPhysicalDeviceQueueFamilyProperties.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.RenderPassInputAttachmentAspectCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.RenderPassInputAttachmentAspectCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.RenderPassInputAttachmentAspectCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.RenderPassInputAttachmentAspectCreateInfo.AspectReferenceCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.RenderPassInputAttachmentAspectCreateInfo.AspectReferences">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.SamplerYcbcrConversion">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Khronos.SamplerYcbcrConversion.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Khronos.SamplerYcbcrConversion.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Khronos.SamplerYcbcrConversion.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.SamplerYcbcrConversionCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SamplerYcbcrConversionCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SamplerYcbcrConversionCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SamplerYcbcrConversionCreateInfo.Format">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SamplerYcbcrConversionCreateInfo.YcbcrModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SamplerYcbcrConversionCreateInfo.YcbcrRange">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SamplerYcbcrConversionCreateInfo.Components">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SamplerYcbcrConversionCreateInfo.XChromaOffset">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SamplerYcbcrConversionCreateInfo.YChromaOffset">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SamplerYcbcrConversionCreateInfo.ChromaFilter">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SamplerYcbcrConversionCreateInfo.ForceExplicitReconstruction">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.SamplerYcbcrConversionImageFormatProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SamplerYcbcrConversionImageFormatProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SamplerYcbcrConversionImageFormatProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SamplerYcbcrConversionImageFormatProperties.CombinedImageSamplerDescriptorCount">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.SamplerYcbcrConversionInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SamplerYcbcrConversionInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SamplerYcbcrConversionInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SamplerYcbcrConversionInfo.Conversion">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.SemaphoreGetFileDescriptorInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SemaphoreGetFileDescriptorInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SemaphoreGetFileDescriptorInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SemaphoreGetFileDescriptorInfo.Semaphore">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SemaphoreGetFileDescriptorInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.SemaphoreGetWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SemaphoreGetWin32HandleInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SemaphoreGetWin32HandleInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SemaphoreGetWin32HandleInfo.Semaphore">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SemaphoreGetWin32HandleInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.SharedPresentSurfaceCapabilities">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SharedPresentSurfaceCapabilities.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SharedPresentSurfaceCapabilities.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SharedPresentSurfaceCapabilities.SharedPresentSupportedUsageFlags">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.SparseImageFormatProperties2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SparseImageFormatProperties2.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SparseImageFormatProperties2.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SparseImageFormatProperties2.Properties">
            <summary>
            A structure of type SparseImageFormatProperties which is populated
            with the same values as in
            flink:vkGetPhysicalDeviceSparseImageFormatProperties.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.SparseImageMemoryRequirements2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SparseImageMemoryRequirements2.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SparseImageMemoryRequirements2.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SparseImageMemoryRequirements2.MemoryRequirements">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Surface">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Khronos.Surface.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Khronos.Surface.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Khronos.Surface.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.SurfaceCapabilities2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SurfaceCapabilities2.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SurfaceCapabilities2.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SurfaceCapabilities2.SurfaceCapabilities">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.SurfaceFormat2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SurfaceFormat2.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SurfaceFormat2.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SurfaceFormat2.SurfaceFormat">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Swapchain">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Khronos.Swapchain.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Khronos.Swapchain.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Khronos.Swapchain.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.SwapchainCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.Flags">
            <summary>
            A bitmask indicating parameters of swapchain creation. Bits which
            can be set include: + --
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.Surface">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.MinImageCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.ImageFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.ImageColorSpace">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.ImageExtent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.ImageArrayLayers">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.ImageUsage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.ImageSharingMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.QueueFamilyIndexCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.QueueFamilyIndices">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.PreTransform">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.CompositeAlpha">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.PresentMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.Clipped">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.SwapchainCreateInfo.OldSwapchain">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkCommandBufferPushDescriptorSetDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkCommandBufferPushDescriptorSetWithTemplateDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkCommandPoolTrimDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDescriptorUpdateTemplateKHRDestroyDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceBindBufferMemory2Delegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceBindImageMemory2Delegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceCreateDescriptorUpdateTemplateDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceCreateSamplerYcbcrConversionDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceCreateSharedSwapchainsDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceCreateSwapchainDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceGetBufferMemoryRequirements2Delegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceGetFenceFileDescriptorDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceGetFenceWin32HandleDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceGetImageMemoryRequirements2Delegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceGetImageSparseMemoryRequirements2Delegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceGetMemoryFileDescriptorDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceGetMemoryFileDescriptorPropertiesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceGetMemoryWin32HandleDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceGetMemoryWin32HandlePropertiesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceGetSemaphoreFileDescriptorDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceGetSemaphoreWin32HandleDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceImportFenceFileDescriptorDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceImportFenceWin32HandleDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceImportSemaphoreFileDescriptorDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceImportSemaphoreWin32HandleDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDeviceUpdateDescriptorSetWithTemplateDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkDisplayModeKHRGetDisplayPlaneCapabilitiesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkInstanceCreateAndroidSurfaceDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkInstanceCreateDisplayPlaneSurfaceDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkInstanceCreateMirSurfaceDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkInstanceCreateWaylandSurfaceDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkInstanceCreateWin32SurfaceDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkInstanceCreateXcbSurfaceDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkInstanceCreateXlibSurfaceDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceCreateDisplayModeDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetDisplayModePropertiesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetDisplayPlanePropertiesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetDisplayPlaneSupportedDisplaysDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetDisplayPropertiesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetExternalBufferPropertiesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetExternalFencePropertiesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetExternalSemaphorePropertiesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetFeatures2Delegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetFormatProperties2Delegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetImageFormatProperties2Delegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetMemoryProperties2Delegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetMirPresentationSupportDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetProperties2Delegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetQueueFamilyProperties2Delegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetSparseImageFormatProperties2Delegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetSurfaceCapabilities2Delegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetSurfaceCapabilitiesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetSurfaceFormats2Delegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetSurfaceFormatsDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetSurfacePresentModesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetSurfaceSupportDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetWaylandPresentationSupportDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetWin32PresentationSupportDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetXcbPresentationSupportDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkPhysicalDeviceGetXlibPresentationSupportDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkQueuePresentDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkSamplerYcbcrConversionKHRDestroyDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkSurfaceKHRDestroyDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkSwapchainKHRAcquireNextImageDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkSwapchainKHRDestroyDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkSwapchainKHRGetImagesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.VkSwapchainKHRGetStatusDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.WaylandSurfaceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.WaylandSurfaceCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.WaylandSurfaceCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.WaylandSurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.WaylandSurfaceCreateInfo.Display">
            <summary>
            display and surface are pointers to the Wayland wl_display and
            wl_surface to associate the surface with.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.WaylandSurfaceCreateInfo.Surface">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Win32KeyedMutexAcquireReleaseInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Win32KeyedMutexAcquireReleaseInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Win32KeyedMutexAcquireReleaseInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Win32KeyedMutexAcquireReleaseInfo.AcquireCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Win32KeyedMutexAcquireReleaseInfo.AcquireSyncs">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Win32KeyedMutexAcquireReleaseInfo.AcquireKeys">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Win32KeyedMutexAcquireReleaseInfo.AcquireTimeouts">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Win32KeyedMutexAcquireReleaseInfo.ReleaseCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Win32KeyedMutexAcquireReleaseInfo.ReleaseSyncs">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Win32KeyedMutexAcquireReleaseInfo.ReleaseKeys">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.Win32SurfaceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Win32SurfaceCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Win32SurfaceCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Win32SurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Win32SurfaceCreateInfo.Hinstance">
            <summary>
            hinstance and hwnd are the Win32 HINSTANCE and HWND for the window
            to associate the surface with.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.Win32SurfaceCreateInfo.Hwnd">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.XcbSurfaceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.XcbSurfaceCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.XcbSurfaceCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.XcbSurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.XcbSurfaceCreateInfo.Connection">
            <summary>
            An xcb_connection_t to the X server.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.XcbSurfaceCreateInfo.Window">
            <summary>
            The xcb_window_t for the X11 window to associate the surface with.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Khronos.XlibSurfaceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.XlibSurfaceCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.XlibSurfaceCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.XlibSurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.XlibSurfaceCreateInfo.Dpy">
            <summary>
            An Xlib Display connection to the X server.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Khronos.XlibSurfaceCreateInfo.Window">
            <summary>
            An Xlib Window to associate the surface with.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.LayerProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.LayerProperties.LayerName">
            <summary>
            A string specifying the name of the layer. Use this name in the
            ppEnabledLayerNames array passed in the InstanceCreateInfo
            structure to enable this layer for an instance.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.LayerProperties.SpecVersion">
            <summary>
            The Vulkan version the layer was written to, encoded as described
            in the API Version Numbers and Semantics section.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.LayerProperties.ImplementationVersion">
            <summary>
            The version of this layer. It is an integer, increasing with
            backward compatible changes.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.LayerProperties.Description">
            <summary>
            A string providing additional details that can be used by the
            application to identify the layer.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.MappedMemoryRange">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MappedMemoryRange.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MappedMemoryRange.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MappedMemoryRange.Memory">
            <summary>
            The memory object to which this range belongs.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MappedMemoryRange.Offset">
            <summary>
            The zero-based byte offset from the beginning of the memory object.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MappedMemoryRange.Size">
            <summary>
            size is either the size of range, or VK_WHOLE_SIZE to affect the
            range from offset to the end of the current mapping of the
            allocation.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.MemoryAllocateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MemoryAllocateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MemoryAllocateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MemoryAllocateInfo.AllocationSize">
            <summary>
            The size of the allocation in bytes
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MemoryAllocateInfo.MemoryTypeIndex">
            <summary>
            The memory type index, which selects the properties of the memory
            to be allocated, as well as the heap the memory will come from.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.MemoryBarrier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MemoryBarrier.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MemoryBarrier.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MemoryBarrier.SourceAccessMask">
            <summary>
            srcAccessMask defines a source access mask.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MemoryBarrier.DestinationAccessMask">
            <summary>
            dstAccessMask defines a destination access mask.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.MoltenVk.IOSSurfaceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MoltenVk.IOSSurfaceCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MoltenVk.IOSSurfaceCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MoltenVk.IOSSurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MoltenVk.IOSSurfaceCreateInfo.View">
            <summary>
            A reference to a UIView object which will display this surface.
            This UIView must be backed by a CALayer instance of type
            CAMetalLayer.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.MoltenVk.MacOSSurfaceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MoltenVk.MacOSSurfaceCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MoltenVk.MacOSSurfaceCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MoltenVk.MacOSSurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.MoltenVk.MacOSSurfaceCreateInfo.View">
            <summary>
            A reference to a NSView object which will display this surface.
            This NSView must be backed by a CALayer instance of type
            CAMetalLayer.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.MoltenVk.VkInstanceCreateIOSSurfaceDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.MoltenVk.VkInstanceCreateMacOSSurfaceDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.AttachmentSampleLocations">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.AttachmentSampleLocations.AttachmentIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.AttachmentSampleLocations.SampleLocationsInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.DebugMarkerMarkerInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugMarkerMarkerInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugMarkerMarkerInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugMarkerMarkerInfo.MarkerName">
            <summary>
            A string that contains the name of the marker.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugMarkerMarkerInfo.Color">
            <summary>
            An optional RGBA color value that can be associated with the
            marker. A particular implementation may choose to ignore this color
            value. The values contain RGBA values in order, in the range 0.0 to
            1.0. If all elements in color are set to 0.0 then it is ignored.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.DebugMarkerObjectNameInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugMarkerObjectNameInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugMarkerObjectNameInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugMarkerObjectNameInfo.ObjectType">
            <summary>
            A DebugReportObjectTypeEXT specifying the type of the object to be
            named.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugMarkerObjectNameInfo.Object">
            <summary>
            The object to be named.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugMarkerObjectNameInfo.ObjectName">
            <summary>
            A string specifying the name to apply to object.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.DebugMarkerObjectTagInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugMarkerObjectTagInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugMarkerObjectTagInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugMarkerObjectTagInfo.ObjectType">
            <summary>
            A DebugReportObjectTypeEXT specifying the type of the object to be
            named.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugMarkerObjectTagInfo.Object">
            <summary>
            The object to be tagged.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugMarkerObjectTagInfo.TagName">
            <summary>
            A numerical identifier of the tag.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugMarkerObjectTagInfo.TagSize">
            <summary>
            The number of bytes of data to attach to the object.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugMarkerObjectTagInfo.Tag">
            <summary>
            An array of tagSize bytes containing the data to be associated with
            the object.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.DebugReportCallback">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Multivendor.DebugReportCallback.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Multivendor.DebugReportCallback.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Multivendor.DebugReportCallback.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.DebugReportCallbackCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugReportCallbackCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugReportCallbackCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugReportCallbackCreateInfo.Flags">
            <summary>
            flags indicate which event(s) will cause this callback to be
            called. Flags are interpreted as bitmasks and multiple may be set.
            Bits which can be set include: + --
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugReportCallbackCreateInfo.Callback">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DebugReportCallbackCreateInfo.UserData">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.DeviceEventInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DeviceEventInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DeviceEventInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DeviceEventInfo.DeviceEvent">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.DisplayEventInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DisplayEventInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DisplayEventInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DisplayEventInfo.DisplayEvent">
            <summary>
            Specifies when the fence will be signaled. Possible values are: +
            --
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.DisplayPowerInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DisplayPowerInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DisplayPowerInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.DisplayPowerInfo.PowerState">
            <summary>
            The new power state of the display. Possible values are: + --
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.HdrMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.HdrMetadata.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.HdrMetadata.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.HdrMetadata.DisplayPrimaryRed">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.HdrMetadata.DisplayPrimaryGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.HdrMetadata.DisplayPrimaryBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.HdrMetadata.WhitePoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.HdrMetadata.MaxLuminance">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.HdrMetadata.MinLuminance">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.HdrMetadata.MaxContentLightLevel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.HdrMetadata.MaxFrameAverageLightLevel">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.MultisampleProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.MultisampleProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.MultisampleProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.MultisampleProperties.MaxSampleLocationGridSize">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.PhysicalDeviceBlendOperationAdvancedFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceBlendOperationAdvancedFeatures.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceBlendOperationAdvancedFeatures.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceBlendOperationAdvancedFeatures.AdvancedBlendCoherentOperations">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties.AdvancedBlendMaxColorAttachments">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties.AdvancedBlendIndependentBlend">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties.AdvancedBlendNonPremultipliedSourceColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties.AdvancedBlendNonPremultipliedDestinationColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties.AdvancedBlendCorrelatedOverlap">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties.AdvancedBlendAllOperations">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.PhysicalDeviceDiscardRectangleProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceDiscardRectangleProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceDiscardRectangleProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceDiscardRectangleProperties.MaxDiscardRectangles">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.PhysicalDeviceSampleLocationsProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceSampleLocationsProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceSampleLocationsProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceSampleLocationsProperties.SampleLocationSampleCounts">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceSampleLocationsProperties.MaxSampleLocationGridSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceSampleLocationsProperties.SampleLocationCoordinateRange">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceSampleLocationsProperties.SampleLocationSubPixelBits">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceSampleLocationsProperties.VariableSampleLocations">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.PhysicalDeviceSamplerFilterMinmaxProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceSamplerFilterMinmaxProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceSamplerFilterMinmaxProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceSamplerFilterMinmaxProperties.FilterMinmaxSingleComponentFormats">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PhysicalDeviceSamplerFilterMinmaxProperties.FilterMinmaxImageComponentMapping">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.PipelineColorBlendAdvancedStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PipelineColorBlendAdvancedStateCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PipelineColorBlendAdvancedStateCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PipelineColorBlendAdvancedStateCreateInfo.SourcePremultiplied">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PipelineColorBlendAdvancedStateCreateInfo.DestinationPremultiplied">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PipelineColorBlendAdvancedStateCreateInfo.BlendOverlap">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.PipelineDiscardRectangleStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PipelineDiscardRectangleStateCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PipelineDiscardRectangleStateCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PipelineDiscardRectangleStateCreateInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PipelineDiscardRectangleStateCreateInfo.DiscardRectangleMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PipelineDiscardRectangleStateCreateInfo.DiscardRectangleCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PipelineDiscardRectangleStateCreateInfo.DiscardRectangles">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.PipelineSampleLocationsStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PipelineSampleLocationsStateCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PipelineSampleLocationsStateCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PipelineSampleLocationsStateCreateInfo.SampleLocationsEnable">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.PipelineSampleLocationsStateCreateInfo.SampleLocationsInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.RenderPassSampleLocationsBeginInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.RenderPassSampleLocationsBeginInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.RenderPassSampleLocationsBeginInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.RenderPassSampleLocationsBeginInfo.AttachmentInitialSampleLocationsCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.RenderPassSampleLocationsBeginInfo.AttachmentInitialSampleLocations">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.RenderPassSampleLocationsBeginInfo.PostSubpassSampleLocationsCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.RenderPassSampleLocationsBeginInfo.SubpassSampleLocations">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.SampleLocationsInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SampleLocationsInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SampleLocationsInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SampleLocationsInfo.SampleLocationsPerPixel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SampleLocationsInfo.SampleLocationGridSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SampleLocationsInfo.SampleLocationsCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SampleLocationsInfo.SampleLocations">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.SamplerReductionModeCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SamplerReductionModeCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SamplerReductionModeCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SamplerReductionModeCreateInfo.ReductionMode">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.ShaderModuleValidationCacheCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.ShaderModuleValidationCacheCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.ShaderModuleValidationCacheCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.ShaderModuleValidationCacheCreateInfo.ValidationCache">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.SubpassSampleLocations">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SubpassSampleLocations.SubpassIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SubpassSampleLocations.SampleLocationsInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.SurfaceCapabilities2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SurfaceCapabilities2.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SurfaceCapabilities2.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SurfaceCapabilities2.MinImageCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SurfaceCapabilities2.MaxImageCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SurfaceCapabilities2.CurrentExtent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SurfaceCapabilities2.MinImageExtent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SurfaceCapabilities2.MaxImageExtent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SurfaceCapabilities2.MaxImageArrayLayers">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SurfaceCapabilities2.SupportedTransforms">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SurfaceCapabilities2.CurrentTransform">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SurfaceCapabilities2.SupportedCompositeAlpha">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SurfaceCapabilities2.SupportedUsageFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SurfaceCapabilities2.SupportedSurfaceCounters">
            <summary>
            A bitfield containing one bit set for each surface counter type
            supported.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.SwapchainCounterCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SwapchainCounterCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SwapchainCounterCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.SwapchainCounterCreateInfo.SurfaceCounters">
            <summary>
            A bitmask containing a bit set for each surface counter to enable
            for the swapchain.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.ValidationCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Multivendor.ValidationCache.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Multivendor.ValidationCache.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Multivendor.ValidationCache.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.ValidationCacheCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.ValidationCacheCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.ValidationCacheCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.ValidationCacheCreateInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.ValidationCacheCreateInfo.InitialDataSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.ValidationCacheCreateInfo.InitialData">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.ValidationFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.ValidationFlags.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.ValidationFlags.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.ValidationFlags.DisabledValidationCheckCount">
            <summary>
            The number of checks to disable.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Multivendor.ValidationFlags.DisabledValidationChecks">
            <summary>
            An array of values specifying the validation checks to be disabled.
            Checks which may be specified include: + --
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkCommandBufferDebugMarkerBeginDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkCommandBufferDebugMarkerEndDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkCommandBufferDebugMarkerInsertDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkCommandBufferSetDiscardRectangleDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkCommandBufferSetSampleLocationsDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkDebugReportCallbackEXTDestroyDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkDeviceCreateValidationCacheDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkDeviceDebugMarkerSetObjectNameDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkDeviceDebugMarkerSetObjectTagDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkDeviceDisplayPowerControlDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkDeviceRegisterDisplayEventDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkDeviceRegisterEventDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkDeviceSetHdrMetadataDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkInstanceCreateDebugReportCallbackDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkInstanceDebugReportMessageDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkPhysicalDeviceAcquireXlibDisplayDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkPhysicalDeviceGetMultisamplePropertiesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkPhysicalDeviceGetRandROutputDisplayDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkPhysicalDeviceGetSurfaceCapabilities2Delegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkPhysicalDeviceReleaseDisplayDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkSwapchainKHRGetCounterDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkValidationCacheEXTDestroyDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkValidationCacheEXTGetDataDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Multivendor.VkValidationCacheEXTMergeValidationCachesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Nintendo.ViSurfaceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Nintendo.ViSurfaceCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Nintendo.ViSurfaceCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Nintendo.ViSurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.Nintendo.ViSurfaceCreateInfo.Window">
            <summary>
            The nn::vi::NativeWindowHandle for the nn::vi::Layer with which to
            associate the surface.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Nintendo.VkInstanceCreateViSurfaceDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.DedicatedAllocationBufferCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.DedicatedAllocationBufferCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.DedicatedAllocationBufferCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.DedicatedAllocationBufferCreateInfo.DedicatedAllocation">
            <summary>
            Indicates whether the buffer will have a dedicated allocation bound
            to it.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.DedicatedAllocationImageCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.DedicatedAllocationImageCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.DedicatedAllocationImageCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.DedicatedAllocationImageCreateInfo.DedicatedAllocation">
            <summary>
            Indicates whether the image will have a dedicated allocation bound
            to it.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.DedicatedAllocationMemoryAllocateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.DedicatedAllocationMemoryAllocateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.DedicatedAllocationMemoryAllocateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.DedicatedAllocationMemoryAllocateInfo.Image">
            <summary>
            image is null or a handle of an image which this memory will be
            bound to.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.DedicatedAllocationMemoryAllocateInfo.Buffer">
            <summary>
            buffer is null or a handle of a buffer which this memory will be
            bound to.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.CommandProcessCommandsInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.CommandProcessCommandsInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.CommandProcessCommandsInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.CommandProcessCommandsInfo.ObjectTable">
            <summary>
            The ObjectTableNVX to be used for the generation process. Only
            registered objects at the time
            flink:vkCmdReserveSpaceForCommandsNVX is called, will be taken into
            account for the reservation.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.CommandProcessCommandsInfo.IndirectCommandsLayout">
            <summary>
            The IndirectCommandsLayoutNVX that provides the command sequence to
            generate.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.CommandProcessCommandsInfo.IndirectCommandsTokenCount">
            <summary>
            indirectCommandsTokenCount defines the number of input tokens used.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.CommandProcessCommandsInfo.IndirectCommandsTokens">
            <summary>
            pIndirectCommandsTokens provides an array of
            IndirectCommandsTokenNVX that reference the input data for each
            token command.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.CommandProcessCommandsInfo.MaxSequencesCount">
            <summary>
            The maximum number of sequences for which command buffer space will
            be reserved. If sequencesCountBuffer is null, this is also the
            actual number of sequences generated.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.CommandProcessCommandsInfo.TargetCommandBuffer">
            <summary>
            targetCommandBuffer can be the secondary CommandBuffer in which the
            commands should be recorded. If targetCommandBuffer is Null an
            implicit reservation as well as execution takes place on the
            processing CommandBuffer.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.CommandProcessCommandsInfo.SequencesCountBuffer">
            <summary>
            sequencesCountBuffer can be Buffer from which the actual amount of
            sequences is sourced from as ftext:uint32_t value.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.CommandProcessCommandsInfo.SequencesCountOffset">
            <summary>
            The byte offset into sequencesCountBuffer where the count value is
            stored.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.CommandProcessCommandsInfo.SequencesIndexBuffer">
            <summary>
            sequencesIndexBuffer must be set if indirectCommandsLayout's
            VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT is set and
            provides the used sequence indices as ftext:uint32_t array.
            Otherwise it must be null.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.CommandProcessCommandsInfo.SequencesIndexOffset">
            <summary>
            The byte offset into sequencesIndexBuffer where the index values
            start.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.CommandReserveSpaceForCommandsInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.CommandReserveSpaceForCommandsInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.CommandReserveSpaceForCommandsInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.CommandReserveSpaceForCommandsInfo.ObjectTable">
            <summary>
            The ObjectTableNVX to be used for the generation process. Only
            registered objects at the time
            flink:vkCmdReserveSpaceForCommandsNVX is called, will be taken into
            account for the reservation.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.CommandReserveSpaceForCommandsInfo.IndirectCommandsLayout">
            <summary>
            The IndirectCommandsLayoutNVX that must also be used at generation
            time.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.CommandReserveSpaceForCommandsInfo.MaxSequencesCount">
            <summary>
            The maximum number of sequences for which command buffer space will
            be reserved.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.DeviceGeneratedCommandsFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.DeviceGeneratedCommandsFeatures.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.DeviceGeneratedCommandsFeatures.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.DeviceGeneratedCommandsFeatures.ComputeBindingPointSupport">
            <summary>
            Indicates whether the ObjectTableNVX supports entries with
            VK_OBJECT_ENTRY_USAGE_GRAPHICS_BIT_NVX bit set and
            IndirectCommandsLayoutNVX supports VK_PIPELINE_BIND_POINT_COMPUTE.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.DeviceGeneratedCommandsLimits">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.DeviceGeneratedCommandsLimits.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.DeviceGeneratedCommandsLimits.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.DeviceGeneratedCommandsLimits.MaxIndirectCommandsLayoutTokenCount">
            <summary>
            maxIndirectCommandsLayoutTokenCount the maximum number of tokens in
            IndirectCommandsLayoutNVX.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.DeviceGeneratedCommandsLimits.MaxObjectEntryCounts">
            <summary>
            maxObjectEntryCounts the maximum number of entries per resource
            type in ObjectTableNVX.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.DeviceGeneratedCommandsLimits.MinSequenceCountBufferOffsetAlignment">
            <summary>
            The minimum alignment for memory addresses optionally used in
            CommandBuffer.ProcessCommands().
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.DeviceGeneratedCommandsLimits.MinSequenceIndexBufferOffsetAlignment">
            <summary>
            The minimum alignment for memory addresses optionally used in
            CommandBuffer.ProcessCommands().
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.DeviceGeneratedCommandsLimits.MinCommandsTokenBufferOffsetAlignment">
            <summary>
            The minimum alignment for memory addresses optionally used in
            CommandBuffer.ProcessCommands().
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.IndirectCommandsLayout">
            <summary>
            Opaque handle to an indirect commands layout object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.NVidia.Experimental.IndirectCommandsLayout.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.NVidia.Experimental.IndirectCommandsLayout.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.NVidia.Experimental.IndirectCommandsLayout.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.IndirectCommandsLayoutCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.IndirectCommandsLayoutCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.IndirectCommandsLayoutCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.IndirectCommandsLayoutCreateInfo.PipelineBindPoint">
            <summary>
            The PipelineBindPoint that this layout targets.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.IndirectCommandsLayoutCreateInfo.Flags">
            <summary>
            A bitmask providing usage hints of this layout. See
            IndirectCommandsLayoutUsageFlagBitsNVX below for a description of
            the supported bits.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.IndirectCommandsLayoutCreateInfo.TokenCount">
            <summary>
            The length of the individual command sequnce.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.IndirectCommandsLayoutCreateInfo.Tokens">
            <summary>
            An array describing each command token in detail. See
            IndirectCommandsTokenTypeNVX and IndirectCommandsLayoutTokenNVX
            below for details.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.IndirectCommandsToken">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.IndirectCommandsToken.TokenType">
            <summary>
            Specifies the token command type.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.IndirectCommandsToken.Buffer">
            <summary>
            Specifies the Buffer storing the functional arguments for each
            squence. These argumetns can be written by the device.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.IndirectCommandsToken.Offset">
            <summary>
            offset specified an offset into buffer where the arguments start.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.ObjectTable">
            <summary>
            Opaque handle to an object table.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.NVidia.Experimental.ObjectTable.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.NVidia.Experimental.ObjectTable.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.NVidia.Experimental.ObjectTable.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.ObjectTableCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableCreateInfo.ObjectCount">
            <summary>
            The number of entry configurations that the object table supports.
            The following array parameters must match the size provided here.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableCreateInfo.ObjectEntryTypes">
            <summary>
            An array of ObjectEntryTypeNVX providing the entry type of a given
            configuration.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableCreateInfo.ObjectEntryCounts">
            <summary>
            An array of counts how many objects can be registered in the table.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableCreateInfo.ObjectEntryUsageFlags">
            <summary>
            An array of bitmasks describing the binding usage of the entry. See
            ObjectEntryUsageFlagBitsNVX below for a description of the
            supported bits.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableCreateInfo.MaxUniformBuffersPerDescriptor">
            <summary>
            The maximum number of VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER or
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC used by any single
            registered DescriptorSet in this table.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableCreateInfo.MaxStorageBuffersPerDescriptor">
            <summary>
            The maximum number of VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC used by any single
            registered DescriptorSet in this table.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableCreateInfo.MaxStorageImagesPerDescriptor">
            <summary>
            The maximum number of VK_DESCRIPTOR_TYPE_STORAGE_IMAGE or
            VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER used by any single
            registered DescriptorSet in this table.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableCreateInfo.MaxSampledImagesPerDescriptor">
            <summary>
            The maximum number of VK_DESCRIPTOR_TYPE_SAMPLER,
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER
            or VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT used by any single
            registered DescriptorSet in this table.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableCreateInfo.MaxPipelineLayouts">
            <summary>
            The maximum number of unique PipelineLayout used by any registered
            DescriptorSet or Pipeline in this table.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.ObjectTableDescriptorSetEntry">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableDescriptorSetEntry.Type">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableDescriptorSetEntry.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableDescriptorSetEntry.PipelineLayout">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableDescriptorSetEntry.DescriptorSet">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.ObjectTableIndexBufferEntry">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableIndexBufferEntry.Type">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableIndexBufferEntry.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableIndexBufferEntry.Buffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableIndexBufferEntry.IndexType">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.ObjectTablePipelineEntry">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTablePipelineEntry.Type">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTablePipelineEntry.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTablePipelineEntry.Pipeline">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.ObjectTablePushConstantEntry">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTablePushConstantEntry.Type">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTablePushConstantEntry.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTablePushConstantEntry.PipelineLayout">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTablePushConstantEntry.StageFlags">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.ObjectTableVertexBufferEntry">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableVertexBufferEntry.Type">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableVertexBufferEntry.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.ObjectTableVertexBufferEntry.Buffer">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.PhysicalDeviceMultiviewPerViewAttributesProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.PhysicalDeviceMultiviewPerViewAttributesProperties.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.PhysicalDeviceMultiviewPerViewAttributesProperties.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Experimental.PhysicalDeviceMultiviewPerViewAttributesProperties.PerViewPositionAllComponents">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.VkCommandBufferProcessCommandsDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.VkCommandBufferReserveSpaceForCommandsDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.VkDeviceCreateIndirectCommandsLayoutDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.VkDeviceCreateObjectTableDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.VkIndirectCommandsLayoutNVXDestroyDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.VkObjectTableNVXDestroyDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.VkObjectTableNVXRegisterObjectsDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.VkObjectTableNVXUnregisterObjectsDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Experimental.VkPhysicalDeviceGetGeneratedCommandsPropertiesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.ExportMemoryAllocateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.ExportMemoryAllocateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.ExportMemoryAllocateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.ExportMemoryAllocateInfo.HandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.ExportMemoryWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.ExportMemoryWin32HandleInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.ExportMemoryWin32HandleInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.ExportMemoryWin32HandleInfo.Attributes">
            <summary>
            A Windows SECURITY_ATTRIBUTES structure specifying security
            attributes of the handle.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.ExportMemoryWin32HandleInfo.DwAccess">
            <summary>
            A DWORD specifying access rights of the handle.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.ExternalMemoryImageCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.ExternalMemoryImageCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.ExternalMemoryImageCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.ExternalMemoryImageCreateInfo.HandleTypes">
            <summary>
            A bitmask of ExternalMemoryHandleTypeFlagBitsNV specifying one or
            more external memory handle types. The types must all be compatible
            with each other and the other image creation parameters, as
            reported by
            flink:vkGetPhysicalDeviceExternalImageFormatPropertiesNV.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.ImportMemoryWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.ImportMemoryWin32HandleInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.ImportMemoryWin32HandleInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.ImportMemoryWin32HandleInfo.HandleType">
            <summary>
            A flag specifying the type of memory handle in handle.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.ImportMemoryWin32HandleInfo.Handle">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.PipelineCoverageModulationStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineCoverageModulationStateCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineCoverageModulationStateCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineCoverageModulationStateCreateInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineCoverageModulationStateCreateInfo.CoverageModulationMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineCoverageModulationStateCreateInfo.CoverageModulationTableEnable">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineCoverageModulationStateCreateInfo.CoverageModulationTableCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineCoverageModulationStateCreateInfo.CoverageModulationTable">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.PipelineCoverageToColorStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineCoverageToColorStateCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineCoverageToColorStateCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineCoverageToColorStateCreateInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineCoverageToColorStateCreateInfo.CoverageToColorEnable">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineCoverageToColorStateCreateInfo.CoverageToColorLocation">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.PipelineViewportSwizzleStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineViewportSwizzleStateCreateInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineViewportSwizzleStateCreateInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineViewportSwizzleStateCreateInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineViewportSwizzleStateCreateInfo.ViewportCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineViewportSwizzleStateCreateInfo.ViewportSwizzles">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.PipelineViewportWScalingStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineViewportWScalingStateCreateInfo.SType">
            <summary>
            The type of this structure
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineViewportWScalingStateCreateInfo.Next">
            <summary>
            Null or an extension-specific structure
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineViewportWScalingStateCreateInfo.ViewportWScalingEnable">
            <summary>
            The enable for viewport W scaling
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineViewportWScalingStateCreateInfo.ViewportCount">
            <summary>
            The number of viewports used by W scaling and must match the number
            of viewports in the pipeline if viewport W scaling is enabled.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.PipelineViewportWScalingStateCreateInfo.ViewportWScalings">
            <summary>
            An array of ViewportWScalingNV structures which define the W
            scaling parameters for the corresponding viewport. If the viewport
            W scaling state is dynamic, this member is ignored.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.VkCommandBufferSetViewportWScalingDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.VkDeviceMemoryGetWin32HandleDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.VkPhysicalDeviceGetExternalImageFormatPropertiesDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.NVidia.Win32KeyedMutexAcquireReleaseInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Win32KeyedMutexAcquireReleaseInfo.SType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Win32KeyedMutexAcquireReleaseInfo.Next">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Win32KeyedMutexAcquireReleaseInfo.AcquireCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Win32KeyedMutexAcquireReleaseInfo.AcquireSyncs">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Win32KeyedMutexAcquireReleaseInfo.AcquireKeys">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Win32KeyedMutexAcquireReleaseInfo.AcquireTimeoutMilliseconds">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Win32KeyedMutexAcquireReleaseInfo.ReleaseCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Win32KeyedMutexAcquireReleaseInfo.ReleaseSyncs">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.NVidia.Win32KeyedMutexAcquireReleaseInfo.ReleaseKeys">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PhysicalDevice">
            <summary>
            Opaque handle to a physical device object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.PhysicalDevice.#ctor(System.UIntPtr)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.PhysicalDevice.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.PhysicalDevice.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PhysicalDeviceFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.RobustBufferAccess">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.FullDrawIndexUint32">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ImageCubeArray">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.IndependentBlend">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.GeometryShader">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.TessellationShader">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.SampleRateShading">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.DualSourceBlend">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.LogicOp">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.MultiDrawIndirect">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.DrawIndirectFirstInstance">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.DepthClamp">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.DepthBiasClamp">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.FillModeNonSolid">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.DepthBounds">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.WideLines">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.LargePoints">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.AlphaToOne">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.MultiViewport">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.SamplerAnisotropy">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.TextureCompressionETC2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.TexturecompressionastcLdr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.TextureCompressionBC">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.OcclusionQueryPrecise">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.PipelineStatisticsQuery">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.VertexPipelineStoresAndAtomics">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.FragmentStoresAndAtomics">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ShaderTessellationAndGeometryPointSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ShaderImageGatherExtended">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ShaderStorageImageExtendedFormats">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ShaderStorageImageMultisample">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ShaderStorageImageReadWithoutFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ShaderStorageImageWriteWithoutFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ShaderUniformBufferArrayDynamicIndexing">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ShaderSampledImageArrayDynamicIndexing">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ShaderStorageBufferArrayDynamicIndexing">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ShaderStorageImageArrayDynamicIndexing">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ShaderClipDistance">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ShaderCullDistance">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ShaderFloat64">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ShaderInt64">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ShaderInt16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ShaderResourceResidency">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.ShaderResourceMinLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.SparseBinding">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.SparseResidencyBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.SparseResidencyImage2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.SparseResidencyImage3D">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.SparseResidency2Samples">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.SparseResidency4Samples">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.SparseResidency8Samples">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.SparseResidency16Samples">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.SparseResidencyAliased">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.VariableMultisampleRate">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceFeatures.InheritedQueries">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PhysicalDeviceLimits">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxImageDimension1D">
            <summary>
            The maximum dimension (width) of an image created with an imageType
            of VK_IMAGE_TYPE_1D.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxImageDimension2D">
            <summary>
            The maximum dimension (width or height) of an image created with an
            imageType of VK_IMAGE_TYPE_2D and without
            VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT set in flags.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxImageDimension3D">
            <summary>
            The maximum dimension (width, height, or depth) of an image created
            with an imageType of VK_IMAGE_TYPE_3D.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxImageDimensionCube">
            <summary>
            The maximum dimension (width or height) of an image created with an
            imageType of VK_IMAGE_TYPE_2D and with
            VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT set in flags.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxImageArrayLayers">
            <summary>
            The maximum number of layers (arrayLayers) for an image.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxTexelBufferElements">
            <summary>
            The maximum number of addressable texels for a buffer view created
            on a buffer which was created with the
            VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT or
            VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT set in the usage member of
            the BufferCreateInfo structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxUniformBufferRange">
            <summary>
            The maximum value that can be specified in the range member of any
            DescriptorBufferInfo structures passed to a call to
            flink:vkUpdateDescriptorSets for descriptors of type
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER or
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxStorageBufferRange">
            <summary>
            The maximum value that can be specified in the range member of any
            DescriptorBufferInfo structures passed to a call to
            flink:vkUpdateDescriptorSets for descriptors of type
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxPushConstantsSize">
            <summary>
            The maximum size, in bytes, of the pool of push constant memory.
            For each of the push constant ranges indicated by the
            pPushConstantRanges member of the PipelineLayoutCreateInfo
            structure, offset + size must be less than or equal to this limit.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxMemoryAllocationCount">
            <summary>
            maxMemoryAllocationCount is the maximum number of device memory
            allocations, as created by flink:vkAllocateMemory, which can
            simultaneously exist.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxSamplerAllocationCount">
            <summary>
            maxSamplerAllocationCount is the maximum number of sampler objects,
            as created by flink:vkCreateSampler, which can simultaneously exist
            on a device.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.BufferImageGranularity">
            <summary>
            The granularity, in bytes, at which buffer or linear image
            resources, and optimal image resources can be bound to adjacent
            offsets in the same DeviceMemory object without aliasing. See
            Buffer-Image Granularity for more details.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.SparseAddressSpaceSize">
            <summary>
            The total amount of address space available, in bytes, for sparse
            memory resources. This is an upper bound on the sum of the size of
            all sparse resources, regardless of whether any memory is bound to
            them.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxBoundDescriptorSets">
            <summary>
            The maximum number of descriptor sets that can be simultaneously
            used by a pipeline. All DescriptorSet decorations in shader modules
            must have a value less than maxBoundDescriptorSets. See
            &lt;&lt;descriptorsets-sets.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxPerStageDescriptorSamplers">
            <summary>
            maxPerStageDescriptorSamplers is the maximum number of samplers
            that can be accessible to a single shader stage in a pipeline
            layout. Descriptors with a type of VK_DESCRIPTOR_TYPE_SAMPLER or
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER count against this limit.
            A descriptor is accessible to a shader stage when the stageFlags
            member of the DescriptorSetLayoutBinding structure has the bit for
            that shader stage set. See &lt;&lt;descriptorsets-sampler and
            &lt;&lt;descriptorsets-combinedimagesampler.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxPerStageDescriptorUniformBuffers">
            <summary>
            maxPerStageDescriptorUniformBuffers is the maximum number of
            uniform buffers that can be accessible to a single shader stage in
            a pipeline layout. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER or
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC count against this limit.
            A descriptor is accessible to a shader stage when the stageFlags
            member of the DescriptorSetLayoutBinding structure has the bit for
            that shader stage set. See &lt;&lt;descriptorsets-uniformbuffer and
            &lt;&lt;descriptorsets-uniformbufferdynamic.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxPerStageDescriptorStorageBuffers">
            <summary>
            maxPerStageDescriptorStorageBuffers is the maximum number of
            storage buffers that can be accessible to a single shader stage in
            a pipeline layout. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC count against this limit.
            A descriptor is accessible to a pipeline shader stage when the
            stageFlags member of the DescriptorSetLayoutBinding structure has
            the bit for that shader stage set. See
            &lt;&lt;descriptorsets-storagebuffer and
            &lt;&lt;descriptorsets-storagebufferdynamic.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxPerStageDescriptorSampledImages">
            <summary>
            maxPerStageDescriptorSampledImages is the maximum number of sampled
            images that can be accessible to a single shader stage in a
            pipeline layout. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE,
            or VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER count against this
            limit. A descriptor is accessible to a pipeline shader stage when
            the stageFlags member of the DescriptorSetLayoutBinding structure
            has the bit for that shader stage set. See
            &lt;&lt;descriptorsets-combinedimagesampler, &lt;&lt;descriptorsets-sampledimage,
            and &lt;&lt;descriptorsets-uniformtexelbuffer.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxPerStageDescriptorStorageImages">
            <summary>
            maxPerStageDescriptorStorageImages is the maximum number of storage
            images that can be accessible to a single shader stage in a
            pipeline layout. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_STORAGE_IMAGE, or
            VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER count against this limit. A
            descriptor is accessible to a pipeline shader stage when the
            stageFlags member of the DescriptorSetLayoutBinding structure has
            the bit for that shader stage set. See
            &lt;&lt;descriptorsets-storageimage, and
            &lt;&lt;descriptorsets-storagetexelbuffer.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxPerStageDescriptorInputAttachments">
            <summary>
            maxPerStageDescriptorInputAttachments is the maximum number of
            input attachments that can be accessible to a single shader stage
            in a pipeline layout. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT count against this limit. A
            descriptor is accessible to a pipeline shader stage when the
            stageFlags member of the DescriptorSetLayoutBinding structure has
            the bit for that shader stage set. These are only supported for the
            fragment stage. See &lt;&lt;descriptorsets-inputattachment.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxPerStageResources">
            <summary>
            The maximum number of resources that can be accessible to a single
            shader stage in a pipeline layout. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE,
            VK_DESCRIPTOR_TYPE_STORAGE_IMAGE,
            VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER, VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER,
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER,
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER, VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC,
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC, or
            VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT count against this limit. For
            the fragment shader stage the framebuffer color attachments also
            count against this limit.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxDescriptorSetSamplers">
            <summary>
            maxDescriptorSetSamplers is the maximum number of samplers that can
            be included in descriptor bindings in a pipeline layout across all
            pipeline shader stages and descriptor set numbers. Descriptors with
            a type of VK_DESCRIPTOR_TYPE_SAMPLER or
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER count against this limit.
            See &lt;&lt;descriptorsets-sampler and
            &lt;&lt;descriptorsets-combinedimagesampler.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxDescriptorSetUniformBuffers">
            <summary>
            maxDescriptorSetUniformBuffers is the maximum number of uniform
            buffers that can be included in descriptor bindings in a pipeline
            layout across all pipeline shader stages and descriptor set
            numbers. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER or
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC count against this limit.
            See &lt;&lt;descriptorsets-uniformbuffer and
            &lt;&lt;descriptorsets-uniformbufferdynamic.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxDescriptorSetUniformBuffersDynamic">
            <summary>
            maxDescriptorSetUniformBuffersDynamic is the maximum number of
            dynamic uniform buffers that can be included in descriptor bindings
            in a pipeline layout across all pipeline shader stages and
            descriptor set numbers. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC count against this limit.
            See &lt;&lt;descriptorsets-uniformbufferdynamic.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxDescriptorSetStorageBuffers">
            <summary>
            maxDescriptorSetStorageBuffers is the maximum number of storage
            buffers that can be included in descriptor bindings in a pipeline
            layout across all pipeline shader stages and descriptor set
            numbers. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC count against this limit.
            See &lt;&lt;descriptorsets-storagebuffer and
            &lt;&lt;descriptorsets-storagebufferdynamic.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxDescriptorSetStorageBuffersDynamic">
            <summary>
            maxDescriptorSetStorageBuffersDynamic is the maximum number of
            dynamic storage buffers that can be included in descriptor bindings
            in a pipeline layout across all pipeline shader stages and
            descriptor set numbers. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC count against this limit.
            See &lt;&lt;descriptorsets-storagebufferdynamic.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxDescriptorSetSampledImages">
            <summary>
            maxDescriptorSetSampledImages is the maximum number of sampled
            images that can be included in descriptor bindings in a pipeline
            layout across all pipeline shader stages and descriptor set
            numbers. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE,
            or VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER count against this
            limit. See &lt;&lt;descriptorsets-combinedimagesampler,
            &lt;&lt;descriptorsets-sampledimage, and
            &lt;&lt;descriptorsets-uniformtexelbuffer.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxDescriptorSetStorageImages">
            <summary>
            maxDescriptorSetStorageImages is the maximum number of storage
            images that can be included in descriptor bindings in a pipeline
            layout across all pipeline shader stages and descriptor set
            numbers. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_STORAGE_IMAGE, or
            VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER count against this limit.
            See &lt;&lt;descriptorsets-storageimage, and
            &lt;&lt;descriptorsets-storagetexelbuffer.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxDescriptorSetInputAttachments">
            <summary>
            maxDescriptorSetInputAttachments is the maximum number of input
            attachments that can be included in descriptor bindings in a
            pipeline layout across all pipeline shader stages and descriptor
            set numbers. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT count against this limit. See
            &lt;&lt;descriptorsets-inputattachment.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxVertexInputAttributes">
            <summary>
            maxVertexInputAttributes is the maximum number of vertex input
            attributes that can be specified for a graphics pipeline. These are
            described in the array of VertexInputAttributeDescription
            structures that are provided at graphics pipeline creation time via
            the pVertexAttributeDescriptions member of the
            PipelineVertexInputStateCreateInfo structure. See
            &lt;&lt;fxvertex-attrib and &lt;&lt;fxvertex-input.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxVertexInputBindings">
            <summary>
            The maximum number of vertex buffers that can be specified for
            providing vertex attributes to a graphics pipeline. These are
            described in the array of VertexInputBindingDescription structures
            that are provided at graphics pipeline creation time via the
            pVertexBindingDescriptions member of the
            PipelineVertexInputStateCreateInfo structure. The binding member of
            VertexInputBindingDescription must be less than this limit. See
            &lt;&lt;fxvertex-input.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxVertexInputAttributeOffset">
            <summary>
            maxVertexInputAttributeOffset is the maximum vertex input attribute
            offset that can be added to the vertex input binding stride. The
            offset member of the VertexInputAttributeDescription structure must
            be less than or equal to this limit. See &lt;&lt;fxvertex-input.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxVertexInputBindingStride">
            <summary>
            maxVertexInputBindingStride is the maximum vertex input binding
            stride that can be specified in a vertex input binding. The stride
            member of the VertexInputBindingDescription structure must be less
            than or equal to this limit. See &lt;&lt;fxvertex-input.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxVertexOutputComponents">
            <summary>
            maxVertexOutputComponents is the maximum number of components of
            output variables which can be output by a vertex shader. See
            &lt;&lt;shaders-vertex.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxTessellationGenerationLevel">
            <summary>
            maxTessellationGenerationLevel is the maximum tessellation
            generation level supported by the fixed-function tessellation
            primitive generator. See &lt;&lt;tessellation.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxTessellationPatchSize">
            <summary>
            maxTessellationPatchSize is the maximum patch size, in vertices, of
            patches that can be processed by the tessellation control shader
            and tessellation primitive generator. The patchControlPoints member
            of the PipelineTessellationStateCreateInfo structure specified at
            pipeline creation time and the value provided in the OutputVertices
            execution mode of shader modules must be less than or equal to this
            limit. See &lt;&lt;tessellation.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxTessellationControlPerVertexInputComponents">
            <summary>
            maxTessellationControlPerVertexInputComponents is the maximum
            number of components of input variables which can be provided as
            per-vertex inputs to the tessellation control shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxTessellationControlPerVertexOutputComponents">
            <summary>
            maxTessellationControlPerVertexOutputComponents is the maximum
            number of components of per-vertex output variables which can be
            output from the tessellation control shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxTessellationControlPerPatchOutputComponents">
            <summary>
            maxTessellationControlPerPatchOutputComponents is the maximum
            number of components of per-patch output variables which can be
            output from the tessellation control shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxTessellationControlTotalOutputComponents">
            <summary>
            maxTessellationControlTotalOutputComponents is the maximum total
            number of components of per-vertex and per-patch output variables
            which can be output from the tessellation control shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxTessellationEvaluationInputComponents">
            <summary>
            maxTessellationEvaluationInputComponents is the maximum number of
            components of input variables which can be provided as per-vertex
            inputs to the tessellation evaluation shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxTessellationEvaluationOutputComponents">
            <summary>
            maxTessellationEvaluationOutputComponents is the maximum number of
            components of per-vertex output variables which can be output from
            the tessellation evaluation shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxGeometryShaderInvocations">
            <summary>
            maxGeometryShaderInvocations is the maximum invocation count
            supported for instanced geometry shaders. The value provided in the
            Invocations execution mode of shader modules must be less than or
            equal to this limit. See &lt;&lt;geometry.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxGeometryInputComponents">
            <summary>
            maxGeometryInputComponents is the maximum number of components of
            input variables which can be provided as inputs to the geometry
            shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxGeometryOutputComponents">
            <summary>
            maxGeometryOutputComponents is the maximum number of components of
            output variables which can be output from the geometry shader
            stage.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxGeometryOutputVertices">
            <summary>
            maxGeometryOutputVertices is the maximum number of vertices which
            can be emitted by any geometry shader.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxGeometryTotalOutputComponents">
            <summary>
            maxGeometryTotalOutputComponents is the maximum total number of
            components of output, across all emitted vertices, which can be
            output from the geometry shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxFragmentInputComponents">
            <summary>
            maxFragmentInputComponents is the maximum number of components of
            input variables which can be provided as inputs to the fragment
            shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxFragmentOutputAttachments">
            <summary>
            maxFragmentOutputAttachments is the maximum number of output
            attachments which can be written to by the fragment shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxFragmentDualSourceAttachments">
            <summary>
            maxFragmentDualSrcAttachments is the maximum number of output
            attachments which can be written to by the fragment shader stage
            when blending is enabled and one of the dual source blend modes is
            in use. See &lt;&lt;framebuffer-dsb and dualSrcBlend.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxFragmentCombinedOutputResources">
            <summary>
            maxFragmentCombinedOutputResources is the total number of storage
            buffers, storage images, and output buffers which can be used in
            the fragment shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxComputeSharedMemorySize">
            <summary>
            maxComputeSharedMemorySize is the maximum total storage size, in
            bytes, of all variables declared with the WorkgroupLocal storage
            class in shader modules (or with the shared storage qualifier in
            GLSL) in the compute shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxComputeWorkGroupCount">
            <summary>
            maxComputeWorkGroupCount[3] is the maximum number of local
            workgroups that can be dispatched by a single dispatch command.
            These three values represent the maximum number of local workgroups
            for the X, Y, and Z dimensions, respectively. The workgroup count
            parameters to the dispatch commands must be less than or equal to
            the corresponding limit. See &lt;&lt;dispatch.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxComputeWorkGroupInvocations">
            <summary>
            maxComputeWorkGroupInvocations is the maximum total number of
            compute shader invocations in a single local workgroup. The product
            of the X, Y, and Z sizes as specified by the LocalSize execution
            mode in shader modules and by the object decorated by the
            WorkgroupSize decoration must be less than or equal to this limit.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxComputeWorkGroupSize">
            <summary>
            maxComputeWorkGroupSize[3] is the maximum size of a local compute
            workgroup, per dimension. These three values represent the maximum
            local workgroup size in the X, Y, and Z dimensions, respectively.
            The x, y, and z sizes specified by the LocalSize execution mode and
            by the object decorated by the WorkgroupSize decoration in shader
            modules must be less than or equal to the corresponding limit.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.SubPixelPrecisionBits">
            <summary>
            The number of bits of subpixel precision in framebuffer coordinates
            [eq]#x~f~# and [eq]#y~f~#. See &lt;&lt;primsrast.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.SubTexelPrecisionBits">
            <summary>
            The number of bits of precision in the division along an axis of an
            image used for minification and magnification filters.
            [eq]#2^subTexelPrecisionBits^# is the actual number of divisions
            along each axis of the image represented. The filtering hardware
            will snap to these locations when computing the filtered results.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MipmapPrecisionBits">
            <summary>
            The number of bits of division that the LOD calculation for mipmap
            fetching get snapped to when determining the contribution from each
            mip level to the mip filtered results. [eq]#2^mipmapPrecisionBits^#
            is the actual number of divisions. + -- [NOTE] .Note ==== For
            example, if this value is 2 bits then when linearly filtering
            between two levels, each level could: contribute: 0%, 33%, 66%, or
            100% (this is just an example and the amount of contribution
            should: be covered by different equations in the spec). ==== -- +
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxDrawIndexedIndexValue">
            <summary>
            maxDrawIndexedIndexValue is the maximum index value that can be
            used for indexed draw calls when using 32-bit indices. This
            excludes the primitive restart index value of 0xFFFFFFFF. See
            fullDrawIndexUint32.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxDrawIndirectCount">
            <summary>
            The maximum draw count that is supported for indirect draw calls.
            See multiDrawIndirect.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxSamplerLodBias">
            <summary>
            The maximum absolute sampler level of detail bias. The sum of the
            mipLodBias member of the SamplerCreateInfo structure and the Bias
            operand of image sampling operations in shader modules (or 0 if no
            Bias operand is provided to an image sampling operation) are
            clamped to the range [eq]#[-maxSamplerLodBias,+maxSamplerLodBias]#.
            See &lt;&lt;samplers-mipLodBias.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxSamplerAnisotropy">
            <summary>
            The maximum degree of sampler anisotropy. The maximum degree of
            anisotropic filtering used for an image sampling operation is the
            minimum of the maxAnisotropy member of the SamplerCreateInfo
            structure and this limit. See &lt;&lt;samplers-maxAnisotropy.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxViewports">
            <summary>
            The maximum number of active viewports. The viewportCount member of
            the PipelineViewportStateCreateInfo structure that is provided at
            pipeline creation must be less than or equal to this limit.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxViewportDimensions">
            <summary>
            maxViewportDimensions[2] are the maximum viewport dimensions in the
            X (width) and Y (height) dimensions, respectively. The maximum
            viewport dimensions must be greater than or equal to the largest
            image which can be created and used as a framebuffer attachment.
            See Controlling the Viewport.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.ViewportBoundsRange">
            <summary>
            viewportBoundsRange[2] is the [eq]#[minimum, maximum]# range that
            the corners of a viewport must be contained in. This range must be
            at least [eq]#[-2 {times} size, 2 {times} size - 1]#, where
            [eq]#size = max(maxViewportDimensions[0],
            maxViewportDimensions[1])#. See Controlling the Viewport. + --
            [NOTE] .Note ==== The intent of the viewportBoundsRange limit is to
            allow a maximum sized viewport to be arbitrarily shifted relative
            to the output target as long as at least some portion intersects.
            This would give a bounds limit of [eq]#[-size + 1, 2 {times} size -
            1]# which would allow all possible non-empty-set intersections of
            the output target and the viewport. Since these numbers are
            typically powers of two, picking the signed number range using the
            smallest possible number of bits ends up with the specified range.
            ==== --
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.ViewportSubPixelBits">
            <summary>
            The number of bits of subpixel precision for viewport bounds. The
            subpixel precision that floating-point viewport bounds are
            interpreted at is given by this limit.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MinMemoryMapAlignment">
            <summary>
            The minimum required: alignment, in bytes, of host visible memory
            allocations within the host address space. When mapping a memory
            allocation with flink:vkMapMemory, subtracting offset bytes from
            the returned pointer will always produce an integer multiple of
            this limit. See &lt;&lt;memory-device-hostaccess.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MinTexelBufferOffsetAlignment">
            <summary>
            minTexelBufferOffsetAlignment is the minimum required: alignment,
            in bytes, for the offset member of the BufferViewCreateInfo
            structure for texel buffers. When a buffer view is created for a
            buffer which was created with
            VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT or
            VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT set in the usage member of
            the BufferCreateInfo structure, the offset must be an integer
            multiple of this limit.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MinUniformBufferOffsetAlignment">
            <summary>
            minUniformBufferOffsetAlignment is the minimum required: alignment,
            in bytes, for the offset member of the DescriptorBufferInfo
            structure for uniform buffers. When a descriptor of type
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER or
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC is updated, the offset
            must be an integer multiple of this limit. Similarly, dynamic
            offsets for uniform buffers must be multiples of this limit.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MinStorageBufferOffsetAlignment">
            <summary>
            minStorageBufferOffsetAlignment is the minimum required: alignment,
            in bytes, for the offset member of the DescriptorBufferInfo
            structure for storage buffers. When a descriptor of type
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC is updated, the offset
            must be an integer multiple of this limit. Similarly, dynamic
            offsets for storage buffers must be multiples of this limit.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MinTexelOffset">
            <summary>
            The minimum offset value for the ConstOffset image operand of any
            of the OpImageSample* or OpImageFetch* image instructions.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxTexelOffset">
            <summary>
            The maximum offset value for the ConstOffset image operand of any
            of the OpImageSample* or OpImageFetch* image instructions.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MinTexelGatherOffset">
            <summary>
            The minimum offset value for the Offset or ConstOffsets image
            operands of any of the OpImage*Gather image instructions.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxTexelGatherOffset">
            <summary>
            The maximum offset value for the Offset or ConstOffsets image
            operands of any of the OpImage*Gather image instructions.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MinInterpolationOffset">
            <summary>
            The minimum negative offset value for the offset operand of the
            InterpolateAtOffset extended instruction.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxInterpolationOffset">
            <summary>
            The maximum positive offset value for the offset operand of the
            InterpolateAtOffset extended instruction.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.SubPixelInterpolationOffsetBits">
            <summary>
            subPixelInterpolationOffsetBits is the number of subpixel
            fractional bits that the x and y offsets to the InterpolateAtOffset
            extended instruction may be rounded to as fixed-point values.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxFramebufferWidth">
            <summary>
            The maximum width for a framebuffer. The width member of the
            FramebufferCreateInfo structure must be less than or equal to this
            limit.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxFramebufferHeight">
            <summary>
            The maximum height for a framebuffer. The height member of the
            FramebufferCreateInfo structure must be less than or equal to this
            limit.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxFramebufferLayers">
            <summary>
            The maximum layer count for a layered framebuffer. The layers
            member of the FramebufferCreateInfo structure must be less than or
            equal to this limit.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.FramebufferColorSampleCounts">
            <summary>
            framebufferColorSampleCounts is a bitmask^1^ of SampleCountFlagBits
            bits indicating the color sample counts that are supported for all
            framebuffer color attachments.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.FramebufferDepthSampleCounts">
            <summary>
            framebufferDepthSampleCounts is a bitmask^1^ of SampleCountFlagBits
            bits indicating the supported depth sample counts for all
            framebuffer depth/stencil attachments, when the format includes a
            depth component.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.FramebufferStencilSampleCounts">
            <summary>
            A bitmask^1^ of SampleCountFlagBits bits indicating the supported
            stencil sample counts for all framebuffer depth/stencil
            attachments, when the format includes a stencil component.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.FramebufferNoAttachmentsSampleCounts">
            <summary>
            A bitmask^1^ of SampleCountFlagBits bits indicating the supported
            sample counts for a framebuffer with no attachments.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxColorAttachments">
            <summary>
            The maximum number of color attachments that can be used by a
            subpass in a render pass. The colorAttachmentCount member of the
            SubpassDescription structure must be less than or equal to this
            limit.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.SampledImageColorSampleCounts">
            <summary>
            sampledImageColorSampleCounts is a bitmask^1^ of
            SampleCountFlagBits bits indicating the sample counts supported for
            all 2D images created with VK_IMAGE_TILING_OPTIMAL, usage
            containing VK_IMAGE_USAGE_SAMPLED_BIT, and a non-integer color
            format.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.SampledImageIntegerSampleCounts">
            <summary>
            sampledImageIntegerSampleCounts is a bitmask^1^ of
            SampleCountFlagBits bits indicating the sample counts supported for
            all 2D images created with VK_IMAGE_TILING_OPTIMAL, usage
            containing VK_IMAGE_USAGE_SAMPLED_BIT, and an integer color format.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.SampledImageDepthSampleCounts">
            <summary>
            sampledImageDepthSampleCounts is a bitmask^1^ of
            SampleCountFlagBits bits indicating the sample counts supported for
            all 2D images created with VK_IMAGE_TILING_OPTIMAL, usage
            containing VK_IMAGE_USAGE_SAMPLED_BIT, and a depth format.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.SampledImageStencilSampleCounts">
            <summary>
            sampledImageStencilSampleCounts is a bitmask^1^ of
            SampleCountFlagBits bits indicating the sample supported for all 2D
            images created with VK_IMAGE_TILING_OPTIMAL, usage containing
            VK_IMAGE_USAGE_SAMPLED_BIT, and a stencil format.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.StorageImageSampleCounts">
            <summary>
            storageImageSampleCounts is a bitmask^1^ of SampleCountFlagBits
            bits indicating the sample counts supported for all 2D images
            created with VK_IMAGE_TILING_OPTIMAL, and usage containing
            VK_IMAGE_USAGE_STORAGE_BIT.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxSampleMaskWords">
            <summary>
            The maximum number of array elements of a variable decorated with
            the SampleMask built-in decoration.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.TimestampComputeAndGraphics">
            <summary>
            timestampComputeAndGraphics indicates support for timestamps on all
            graphics and compute queues. If this limit is set to VK_TRUE, all
            queues that advertise the VK_QUEUE_GRAPHICS_BIT or
            VK_QUEUE_COMPUTE_BIT in the QueueFamilyProperties::queueFlags
            support QueueFamilyProperties::timestampValidBits of at least 36.
            See Timestamp Queries.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.TimestampPeriod">
            <summary>
            The number of nanoseconds required: for a timestamp query to be
            incremented by 1. See Timestamp Queries.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxClipDistances">
            <summary>
            The maximum number of clip distances that can be used in a single
            shader stage. The size of any array declared with the ClipDistance
            built-in decoration in a shader module must be less than or equal
            to this limit.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxCullDistances">
            <summary>
            The maximum number of cull distances that can be used in a single
            shader stage. The size of any array declared with the CullDistance
            built-in decoration in a shader module must be less than or equal
            to this limit.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.MaxCombinedClipAndCullDistances">
            <summary>
            maxCombinedClipAndCullDistances is the maximum combined number of
            clip and cull distances that can be used in a single shader stage.
            The sum of the sizes of any pair of arrays declared with the
            ClipDistance and CullDistance built-in decoration used by a single
            shader stage in a shader module must be less than or equal to this
            limit.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.DiscreteQueuePriorities">
            <summary>
            discreteQueuePriorities is the number of discrete priorities that
            can be assigned to a queue based on the value of each member of
            DeviceQueueCreateInfo::pQueuePriorities. This must be at least 2,
            and levels must be spread evenly over the range, with at least one
            level at 1.0, and another at 0.0. See
            &lt;&lt;devsandqueues-priority.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.PointSizeRange">
            <summary>
            pointSizeRange[2] is the range [eq]#[minimum,maximum]# of supported
            sizes for points. Values written to variables decorated with the
            PointSize built-in decoration are clamped to this range.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.LineWidthRange">
            <summary>
            lineWidthRange[2] is the range [eq]#[minimum,maximum]# of supported
            widths for lines. Values specified by the lineWidth member of the
            PipelineRasterizationStateCreateInfo or the lineWidth parameter to
            fname:vkCmdSetLineWidth are clamped to this range.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.PointSizeGranularity">
            <summary>
            The granularity of supported point sizes. Not all point sizes in
            the range defined by pointSizeRange are supported. This limit
            specifies the granularity (or increment) between successive
            supported point sizes.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.LineWidthGranularity">
            <summary>
            The granularity of supported line widths. Not all line widths in
            the range defined by lineWidthRange are supported. This limit
            specifies the granularity (or increment) between successive
            supported line widths.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.StrictLines">
            <summary>
            Indicates whether lines are rasterized according to the preferred
            method of rasterization. If set to VK_FALSE, lines may be
            rasterized under a relaxed set of rules. If set to VK_TRUE, lines
            are rasterized as per the strict definition. See Basic Line Segment
            Rasterization.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.StandardSampleLocations">
            <summary>
            standardSampleLocations indicates whether rasterization uses the
            standard sample locations as documented in Multisampling. If set to
            VK_TRUE, the implementation uses the documented sample locations.
            If set to VK_FALSE, the implementation may use different sample
            locations.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.OptimalBufferCopyOffsetAlignment">
            <summary>
            optimalBufferCopyOffsetAlignment is the optimal buffer offset
            alignment in bytes for fname:vkCmdCopyBufferToImage and
            fname:vkCmdCopyImageToBuffer. The per texel alignment requirements
            are still enforced, this is just an additional alignment
            recommendation for optimal performance and power.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.OptimalBufferCopyRowPitchAlignment">
            <summary>
            optimalBufferCopyRowPitchAlignment is the optimal buffer row pitch
            alignment in bytes for fname:vkCmdCopyBufferToImage and
            fname:vkCmdCopyImageToBuffer. Row pitch is the number of bytes
            between texels with the same X coordinate in adjacent rows (Y
            coordinates differ by one). The per texel alignment requirements
            are still enforced, this is just an additional alignment
            recommendation for optimal performance and power.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceLimits.NonCoherentAtomSize">
            <summary>
            The size and alignment in bytes that bounds concurrent access to
            host-mapped device memory.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PhysicalDeviceMemoryProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypeCount">
            <summary>
            The number of valid elements in the memoryTypes array.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_0">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_1">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_3">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_4">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_5">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_6">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_7">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_9">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_10">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_11">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_12">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_13">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_14">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_15">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_17">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_18">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_19">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_20">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_21">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_22">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_23">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_24">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_25">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_26">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_27">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_28">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_29">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_30">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryTypes_31">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryHeapCount">
            <summary>
            The number of valid elements in the memoryHeaps array.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryHeaps_0">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryHeaps_1">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryHeaps_2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryHeaps_3">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryHeaps_4">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryHeaps_5">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryHeaps_6">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryHeaps_7">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryHeaps_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryHeaps_9">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryHeaps_10">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryHeaps_11">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryHeaps_12">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryHeaps_13">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryHeaps_14">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceMemoryProperties.MemoryHeaps_15">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PhysicalDeviceProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceProperties.ApiVersion">
            <summary>
            The version of Vulkan supported by the device, encoded as described
            in the API Version Numbers and Semantics section.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceProperties.DriverVersion">
            <summary>
            The vendor-specified version of the driver.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceProperties.VendorID">
            <summary>
            A unique identifier for the _vendor_ (see below) of the physical
            device.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceProperties.DeviceID">
            <summary>
            A unique identifier for the physical device among devices available
            from the vendor.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceProperties.DeviceType">
            <summary>
            A PhysicalDeviceType specifying the type of device.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceProperties.DeviceName">
            <summary>
            A string containing the name of the device.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceProperties.PipelineCacheUUID">
            <summary>
            An array of size VK_UUID_SIZE, containing 8-bit values that
            represent a universally unique identifier for the device.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceProperties.Limits">
            <summary>
            The PhysicalDeviceLimits structure which specifies device-specific
            limits of the physical device. See Limits for details.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceProperties.SparseProperties">
            <summary>
            The PhysicalDeviceSparseProperties structure which specifies
            various sparse related properties of the physical device. See
            Sparse Properties for details.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PhysicalDeviceSparseProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceSparseProperties.ResidencyStandard2DBlockShape">
            <summary>
            residencyStandard2DBlockShape is VK_TRUE if the physical device
            will access all single-sample 2D sparse resources using the
            standard sparse image block shapes (based on image format), as
            described in the Standard Sparse Image Block Shapes (Single Sample)
            table. If this property is not supported the value returned in the
            imageGranularity member of the SparseImageFormatProperties
            structure for single-sample 2D images is not required: to match the
            standard sparse image block dimensions listed in the table.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceSparseProperties.ResidencyStandard2DMultisampleBlockShape">
            <summary>
            residencyStandard2DMultisampleBlockShape is VK_TRUE if the physical
            device will access all multisample 2D sparse resources using the
            standard sparse image block shapes (based on image format), as
            described in the Standard Sparse Image Block Shapes (MSAA) table.
            If this property is not supported, the value returned in the
            imageGranularity member of the SparseImageFormatProperties
            structure for multisample 2D images is not required: to match the
            standard sparse image block dimensions listed in the table.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceSparseProperties.ResidencyStandard3DBlockShape">
            <summary>
            residencyStandard3DBlockShape is VK_TRUE if the physical device
            will access all 3D sparse resources using the standard sparse image
            block shapes (based on image format), as described in the Standard
            Sparse Image Block Shapes (Single Sample) table. If this property
            is not supported, the value returned in the imageGranularity member
            of the SparseImageFormatProperties structure for 3D images is not
            required: to match the standard sparse image block dimensions
            listed in the table.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceSparseProperties.ResidencyAlignedMipSize">
            <summary>
            residencyAlignedMipSize is VK_TRUE if images with mip level
            dimensions that are not integer multiples of the corresponding
            dimensions of the sparse image block may be placed in the mip tail.
            If this property is not reported, only mip levels with dimensions
            smaller than the imageGranularity member of the
            SparseImageFormatProperties structure will be placed in the mip
            tail. If this property is reported the implementation is allowed to
            return VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT in the flags
            member of SparseImageFormatProperties, indicating that mip level
            dimensions that are not integer multiples of the corresponding
            dimensions of the sparse image block will be placed in the mip
            tail.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PhysicalDeviceSparseProperties.ResidencyNonResidentStrict">
            <summary>
            Specifies whether the physical device can consistently access
            non-resident regions of a resource. If this property is VK_TRUE,
            access to non-resident regions of resources will be guaranteed to
            return values as if the resource were populated with 0; writes to
            non-resident regions will be discarded.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Pipeline">
            <summary>
            Opaque handle to a pipeline object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Pipeline.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Pipeline.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Pipeline.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PipelineCache">
            <summary>
            Opaque handle to a pipeline cache object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.PipelineCache.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.PipelineCache.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.PipelineCache.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PipelineCacheCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineCacheCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineCacheCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineCacheCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineCacheCreateInfo.InitialDataSize">
            <summary>
            The number of bytes in pInitialData. If initialDataSize is zero,
            the pipeline cache will initially be empty.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineCacheCreateInfo.InitialData">
            <summary>
            A pointer to previously retrieved pipeline cache data. If the
            pipeline cache data is incompatible (as defined below) with the
            device, the pipeline cache will be initially empty. If
            initialDataSize is zero, pInitialData is ignored.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PipelineColorBlendAttachmentState">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineColorBlendAttachmentState.BlendEnable">
            <summary>
            blendEnable controls whether blending is enabled for the
            corresponding color attachment. If blending is not enabled, the
            source fragment's color for that attachment is passed through
            unmodified.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineColorBlendAttachmentState.SourceColorBlendFactor">
            <summary>
            srcColorBlendFactor selects which blend factor is used to determine
            the source factors [eq]#(S~r~,S~g~,S~b~)#.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineColorBlendAttachmentState.DestinationColorBlendFactor">
            <summary>
            dstColorBlendFactor selects which blend factor is used to determine
            the destination factors [eq]#(D~r~,D~g~,D~b~)#.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineColorBlendAttachmentState.ColorBlendOp">
            <summary>
            colorBlendOp selects which blend operation is used to calculate the
            RGB values to write to the color attachment.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineColorBlendAttachmentState.SourceAlphaBlendFactor">
            <summary>
            srcAlphaBlendFactor selects which blend factor is used to determine
            the source factor [eq]#S~a~#.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineColorBlendAttachmentState.DestinationAlphaBlendFactor">
            <summary>
            dstAlphaBlendFactor selects which blend factor is used to determine
            the destination factor [eq]#D~a~#.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineColorBlendAttachmentState.AlphaBlendOp">
            <summary>
            alphaBlendOp selects which blend operation is use to calculate the
            alpha values to write to the color attachment.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineColorBlendAttachmentState.ColorWriteMask">
            <summary>
            A bitmask selecting which of the R, G, B, and/or A components are
            enabled for writing, as described later in this chapter.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PipelineColorBlendStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineColorBlendStateCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineColorBlendStateCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineColorBlendStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineColorBlendStateCreateInfo.LogicOpEnable">
            <summary>
            logicOpEnable controls whether to apply Logical Operations.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineColorBlendStateCreateInfo.LogicOp">
            <summary>
            logicOp selects which logical operation to apply.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineColorBlendStateCreateInfo.AttachmentCount">
            <summary>
            The number of PipelineColorBlendAttachmentState elements in
            pAttachments. This value must equal the colorAttachmentCount for
            the subpass in which this pipeline is used.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineColorBlendStateCreateInfo.Attachments">
            <summary>
            pAttachments: is array of per target attachment states.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineColorBlendStateCreateInfo.BlendConstants">
            <summary>
            An array of four values used as the R, G, B, and A components of
            the blend constant that are used in blending, depending on the
            blend factor.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PipelineDepthStencilStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineDepthStencilStateCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineDepthStencilStateCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineDepthStencilStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineDepthStencilStateCreateInfo.DepthTestEnable">
            <summary>
            depthTestEnable controls whether depth testing is enabled.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineDepthStencilStateCreateInfo.DepthWriteEnable">
            <summary>
            depthWriteEnable controls whether depth writes are enabled.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineDepthStencilStateCreateInfo.DepthCompareOp">
            <summary>
            The comparison operator used in the depth test.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineDepthStencilStateCreateInfo.DepthBoundsTestEnable">
            <summary>
            depthBoundsTestEnable controls whether depth bounds testing is
            enabled.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineDepthStencilStateCreateInfo.StencilTestEnable">
            <summary>
            stencilTestEnable controls whether stencil testing is enabled.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineDepthStencilStateCreateInfo.Front">
            <summary>
            front and back control the parameters of the stencil test.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineDepthStencilStateCreateInfo.Back">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineDepthStencilStateCreateInfo.MinDepthBounds">
            <summary>
            minDepthBounds and maxDepthBounds define the range of values used
            in the depth bounds test.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineDepthStencilStateCreateInfo.MaxDepthBounds">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PipelineDynamicStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineDynamicStateCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineDynamicStateCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineDynamicStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineDynamicStateCreateInfo.DynamicStateCount">
            <summary>
            The number of elements in the pDynamicStates array.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineDynamicStateCreateInfo.DynamicStates">
            <summary>
            An array of DynamicState enums which indicate which pieces of
            pipeline state will use the values from dynamic state commands
            rather than from the pipeline state creation info.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PipelineInputAssemblyStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineInputAssemblyStateCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineInputAssemblyStateCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineInputAssemblyStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineInputAssemblyStateCreateInfo.Topology">
            <summary>
            A PrimitiveTopology defining the primitive topology, as described
            below.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineInputAssemblyStateCreateInfo.PrimitiveRestartEnable">
            <summary>
            primitiveRestartEnable controls whether a special vertex index
            value is treated as restarting the assembly of primitives. This
            enable only applies to indexed draws (flink:vkCmdDrawIndexed and
            flink:vkCmdDrawIndexedIndirect), and the special index value is
            either 0xFFFFFFFF when the indexType parameter of
            fname:vkCmdBindIndexBuffer is equal to VK_INDEX_TYPE_UINT32, or
            0xFFFF when indexType is equal to VK_INDEX_TYPE_UINT16. Primitive
            restart is not allowed for "`list`" topologies.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PipelineLayout">
            <summary>
            Opaque handle to a pipeline layout object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.PipelineLayout.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.PipelineLayout.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.PipelineLayout.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PipelineLayoutCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineLayoutCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineLayoutCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineLayoutCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineLayoutCreateInfo.SetLayoutCount">
            <summary>
            The number of descriptor sets included in the pipeline layout.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineLayoutCreateInfo.SetLayouts">
            <summary>
            An array of DescriptorSetLayout objects.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineLayoutCreateInfo.PushConstantRangeCount">
            <summary>
            The number of push constant ranges included in the pipeline layout.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineLayoutCreateInfo.PushConstantRanges">
            <summary>
            An array of PushConstantRange structures defining a set of push
            constant ranges for use in a single pipeline layout. In addition to
            descriptor set layouts, a pipeline layout also describes how many
            push constants can be accessed by each stage of the pipeline. +
            [NOTE] .Note ==== Push constants represent a high speed path to
            modify constant data in pipelines that is expected to outperform
            memory-backed resource updates. ====
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PipelineMultisampleStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineMultisampleStateCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineMultisampleStateCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineMultisampleStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineMultisampleStateCreateInfo.RasterizationSamples">
            <summary>
            A SampleCountFlagBits specifying the number of samples per pixel
            used in rasterization.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineMultisampleStateCreateInfo.SampleShadingEnable">
            <summary>
            Specifies that fragment shading executes per-sample if VK_TRUE, or
            per-fragment if VK_FALSE, as described in Sample Shading.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineMultisampleStateCreateInfo.MinSampleShading">
            <summary>
            The minimum fraction of sample shading, as described in Sample
            Shading.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineMultisampleStateCreateInfo.SampleMask">
            <summary>
            A bitmask of static coverage information that is ANDed with the
            coverage information generated during rasterization, as described
            in Sample Mask.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineMultisampleStateCreateInfo.AlphaToCoverageEnable">
            <summary>
            alphaToCoverageEnable controls whether a temporary coverage value
            is generated based on the alpha component of the fragment's first
            color output as specified in the Multisample Coverage section.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineMultisampleStateCreateInfo.AlphaToOneEnable">
            <summary>
            alphaToOneEnable controls whether the alpha component of the
            fragment's first color output is replaced with one as described in
            Multisample Coverage.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PipelineRasterizationStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineRasterizationStateCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineRasterizationStateCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineRasterizationStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineRasterizationStateCreateInfo.DepthClampEnable">
            <summary>
            depthClampEnable controls whether to clamp the fragment's depth
            values instead of clipping primitives to the z planes of the
            frustum, as described in Primitive Clipping.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineRasterizationStateCreateInfo.RasterizerDiscardEnable">
            <summary>
            rasterizerDiscardEnable controls whether primitives are discarded
            immediately before the rasterization stage.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineRasterizationStateCreateInfo.PolygonMode">
            <summary>
            The triangle rendering mode. See PolygonMode.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineRasterizationStateCreateInfo.CullMode">
            <summary>
            The triangle facing direction used for primitive culling. See
            CullModeFlagBits.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineRasterizationStateCreateInfo.FrontFace">
            <summary>
            The front-facing triangle orientation to be used for culling. See
            FrontFace.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineRasterizationStateCreateInfo.DepthBiasEnable">
            <summary>
            depthBiasEnable controls whether to bias fragment depth values.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineRasterizationStateCreateInfo.DepthBiasConstantFactor">
            <summary>
            A scalar factor controlling the constant depth value added to each
            fragment.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineRasterizationStateCreateInfo.DepthBiasClamp">
            <summary>
            The maximum (or minimum) depth bias of a fragment.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineRasterizationStateCreateInfo.DepthBiasSlopeFactor">
            <summary>
            A scalar factor applied to a fragment's slope in depth bias
            calculations.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineRasterizationStateCreateInfo.LineWidth">
            <summary>
            The width of rasterized line segments.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PipelineShaderStageCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineShaderStageCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineShaderStageCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineShaderStageCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineShaderStageCreateInfo.Stage">
            <summary>
            stage names a single pipeline stage. Bits which can be set include:
            + --
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineShaderStageCreateInfo.Module">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineShaderStageCreateInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineShaderStageCreateInfo.SpecializationInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PipelineTessellationStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineTessellationStateCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineTessellationStateCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineTessellationStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineTessellationStateCreateInfo.PatchControlPoints">
            <summary>
            patchControlPoints number of control points per patch.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PipelineVertexInputStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineVertexInputStateCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineVertexInputStateCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineVertexInputStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineVertexInputStateCreateInfo.VertexBindingDescriptionCount">
            <summary>
            The number of vertex binding descriptions provided in
            pVertexBindingDescriptions.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineVertexInputStateCreateInfo.VertexBindingDescriptions">
            <summary>
            An array of VertexInputBindingDescription structures.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineVertexInputStateCreateInfo.VertexAttributeDescriptionCount">
            <summary>
            The number of vertex attribute descriptions provided in
            pVertexAttributeDescriptions.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineVertexInputStateCreateInfo.VertexAttributeDescriptions">
            <summary>
            An array of VertexInputAttributeDescription structures.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.PipelineViewportStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineViewportStateCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineViewportStateCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineViewportStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineViewportStateCreateInfo.ViewportCount">
            <summary>
            The number of viewports used by the pipeline.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineViewportStateCreateInfo.Viewports">
            <summary>
            An array of Viewport structures, defining the viewport transforms.
            If the viewport state is dynamic, this member is ignored.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineViewportStateCreateInfo.ScissorCount">
            <summary>
            The number of scissors and must match the number of viewports.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.PipelineViewportStateCreateInfo.Scissors">
            <summary>
            An array of Rect2D structures which define the rectangular bounds
            of the scissor for the corresponding viewport. If the scissor state
            is dynamic, this member is ignored.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.QueryPool">
            <summary>
            Opaque handle to a query pool object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.QueryPool.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.QueryPool.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.QueryPool.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.QueryPoolCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.QueryPoolCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.QueryPoolCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.QueryPoolCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.QueryPoolCreateInfo.QueryType">
            <summary>
            The type of queries managed by the pool.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.QueryPoolCreateInfo.QueryCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.QueryPoolCreateInfo.PipelineStatistics">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Queue">
            <summary>
            Opaque handle to a queue object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Queue.#ctor(System.UIntPtr)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Queue.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Queue.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.RenderPass">
            <summary>
            Opaque handle to a render pass object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.RenderPass.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.RenderPass.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.RenderPass.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.RenderPassBeginInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.RenderPassBeginInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.RenderPassBeginInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.RenderPassBeginInfo.RenderPass">
            <summary>
            The render pass to begin an instance of.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.RenderPassBeginInfo.Framebuffer">
            <summary>
            The framebuffer containing the attachments that are used with the
            render pass.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.RenderPassBeginInfo.RenderArea">
            <summary>
            The render area that is affected by the render pass instance, and
            is described in more detail below.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.RenderPassBeginInfo.ClearValueCount">
            <summary>
            The number of elements in pClearValues.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.RenderPassBeginInfo.ClearValues">
            <summary>
            An array of ClearValue structures that contains clear values for
            each attachment, if the attachment uses a loadOp value of
            VK_ATTACHMENT_LOAD_OP_CLEAR or if the attachment has a
            depth/stencil format and uses a stencilLoadOp value of
            VK_ATTACHMENT_LOAD_OP_CLEAR. The array is indexed by attachment
            number. Only elements corresponding to cleared attachments are
            used. Other elements of pClearValues are ignored.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.RenderPassCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.RenderPassCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.RenderPassCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.RenderPassCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.RenderPassCreateInfo.AttachmentCount">
            <summary>
            The number of attachments used by this render pass, or zero
            indicating no attachments. Attachments are referred to by
            zero-based indices in the range [0,attachmentCount).
            </summary>
        </member>
        <member name="F:SharpVk.Interop.RenderPassCreateInfo.Attachments">
            <summary>
            An array of attachmentCount number of AttachmentDescription
            structures describing properties of the attachments, or Null if
            attachmentCount is zero.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.RenderPassCreateInfo.SubpassCount">
            <summary>
            The number of subpasses to create for this render pass. Subpasses
            are referred to by zero-based indices in the range
            [0,subpassCount). A render pass must have at least one subpass.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.RenderPassCreateInfo.Subpasses">
            <summary>
            An array of SubpassDescription structures describing properties of
            the subpasses.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.RenderPassCreateInfo.DependencyCount">
            <summary>
            The number of dependencies between pairs of subpasses, or zero
            indicating no dependencies.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.RenderPassCreateInfo.Dependencies">
            <summary>
            An array of dependencyCount number of SubpassDependency structures
            describing dependencies between pairs of subpasses, or Null if
            dependencyCount is zero.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Sampler">
            <summary>
            Opaque handle to a sampler object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Sampler.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Sampler.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Sampler.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.SamplerCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.MagFilter">
            <summary>
            The magnification filter to apply to lookups.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.MinFilter">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.MipmapMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.AddressModeU">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.AddressModeV">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.AddressModeW">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.MipLodBias">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.AnisotropyEnable">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.MaxAnisotropy">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.CompareEnable">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.CompareOp">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.MinLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.MaxLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.BorderColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SamplerCreateInfo.UnnormalizedCoordinates">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.Semaphore">
            <summary>
            Opaque handle to a semaphore object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Semaphore.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.Semaphore.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.Semaphore.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.SemaphoreCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SemaphoreCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SemaphoreCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SemaphoreCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.ShaderModule">
            <summary>
            Opaque handle to a shader module object.
            </summary>
        </member>
        <member name="M:SharpVk.Interop.ShaderModule.#ctor(System.UInt64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Interop.ShaderModule.Null">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Interop.ShaderModule.ToUInt64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.ShaderModuleCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ShaderModuleCreateInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ShaderModuleCreateInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ShaderModuleCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ShaderModuleCreateInfo.CodeSize">
            <summary>
            The size, in bytes, of the code pointed to by pCode.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.ShaderModuleCreateInfo.Code">
            <summary>
            pCode points to code that is used to create the shader module. The
            type and format of the code is determined from the content of the
            memory addressed by pCode.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.SparseBufferMemoryBindInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseBufferMemoryBindInfo.Buffer">
            <summary>
            The Buffer object to be bound.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseBufferMemoryBindInfo.BindCount">
            <summary>
            The number of SparseMemoryBind structures in the pBinds array.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseBufferMemoryBindInfo.Binds">
            <summary>
            Array of SparseMemoryBind structures.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.SparseImageMemoryBind">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseImageMemoryBind.Subresource">
            <summary>
            The aspectMask and region of interest in the image.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseImageMemoryBind.Offset">
            <summary>
            offset are the coordinates of the first texel within the image
            subresource to bind.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseImageMemoryBind.Extent">
            <summary>
            The size in texels of the region within the image subresource to
            bind. The extent must be a multiple of the sparse image block
            dimensions, except when binding sparse image blocks along the edge
            of an image subresource it can instead be such that any coordinate
            of [eq]#offset + extent# equals the corresponding dimensions of the
            image subresource.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseImageMemoryBind.Memory">
            <summary>
            The DeviceMemory object that the sparse image blocks of the image
            are bound to. If memory is null, the sparse image blocks are
            unbound.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseImageMemoryBind.MemoryOffset">
            <summary>
            An offset into DeviceMemory object. If memory is null, this value
            is ignored.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseImageMemoryBind.Flags">
            <summary>
            flags are sparse memory binding flags.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.SparseImageMemoryBindInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseImageMemoryBindInfo.Image">
            <summary>
            The Image object to be bound
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseImageMemoryBindInfo.BindCount">
            <summary>
            The number of SparseImageMemoryBind structures in pBinds array
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseImageMemoryBindInfo.Binds">
            <summary>
            Array of SparseImageMemoryBind structures
            </summary>
        </member>
        <member name="T:SharpVk.Interop.SparseImageOpaqueMemoryBindInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseImageOpaqueMemoryBindInfo.Image">
            <summary>
            The Image object to be bound.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseImageOpaqueMemoryBindInfo.BindCount">
            <summary>
            The number of SparseMemoryBind structures in the pBinds array.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseImageOpaqueMemoryBindInfo.Binds">
            <summary>
            Array of SparseMemoryBind structures.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.SparseMemoryBind">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseMemoryBind.ResourceOffset">
            <summary>
            The offset into the resource.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseMemoryBind.Size">
            <summary>
            The size of the memory region to be bound.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseMemoryBind.Memory">
            <summary>
            The DeviceMemory object that the range of the resource is bound to.
            If memory is null, the range is unbound.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseMemoryBind.MemoryOffset">
            <summary>
            The offset into the DeviceMemory object to bind the resource range
            to. If memory is null, this value is ignored.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SparseMemoryBind.Flags">
            <summary>
            A bitmask specifying usage of the binding operation. Bits which can
            be set include: + --
            </summary>
        </member>
        <member name="T:SharpVk.Interop.SpecializationInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SpecializationInfo.MapEntryCount">
            <summary>
            The number of entries in the pMapEntries array.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SpecializationInfo.MapEntries">
            <summary>
            An array of SpecializationMapEntry which maps constant IDs to
            offsets in pData.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SpecializationInfo.DataSize">
            <summary>
            The byte size of the pData buffer.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SpecializationInfo.Data">
            <summary>
            pData contains the actual constant values to specialize with.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.SubmitInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubmitInfo.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubmitInfo.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubmitInfo.WaitSemaphoreCount">
            <summary>
            The number of semaphores upon which to wait before executing the
            command buffers for the batch.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubmitInfo.WaitSemaphores">
            <summary>
            An array of semaphores upon which to wait before the command
            buffers for this batch begin execution. If semaphores to wait on
            are provided, they define a semaphore wait operation.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubmitInfo.WaitDestinationStageMask">
            <summary>
            An array of pipeline stages at which each corresponding semaphore
            wait will occur.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubmitInfo.CommandBufferCount">
            <summary>
            The number of command buffers to execute in the batch.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubmitInfo.CommandBuffers">
            <summary>
            An array of command buffers to execute in the batch.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubmitInfo.SignalSemaphoreCount">
            <summary>
            The number of semaphores to be signaled once the commands specified
            in pCommandBuffers have completed execution.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubmitInfo.SignalSemaphores">
            <summary>
            An array of semaphores which will be signaled when the command
            buffers for this batch have completed execution. If semaphores to
            be signaled are provided, they define a semaphore signal operation.
            </summary>
        </member>
        <member name="T:SharpVk.Interop.SubpassDescription">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubpassDescription.Flags">
            <summary>
            A bitmask indicating usage of the subpass. Bits which can be set
            include: + --
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubpassDescription.PipelineBindPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubpassDescription.InputAttachmentCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubpassDescription.InputAttachments">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubpassDescription.ColorAttachmentCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubpassDescription.ColorAttachments">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubpassDescription.ResolveAttachments">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubpassDescription.DepthStencilAttachment">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubpassDescription.PreserveAttachmentCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.SubpassDescription.PreserveAttachments">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Interop.WriteDescriptorSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Interop.WriteDescriptorSet.SType">
            <summary>
            The type of this structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.WriteDescriptorSet.Next">
            <summary>
            Null or an extension-specific structure.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.WriteDescriptorSet.DestinationSet">
            <summary>
            The destination descriptor set to update.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.WriteDescriptorSet.DestinationBinding">
            <summary>
            The descriptor binding within that set.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.WriteDescriptorSet.DestinationArrayElement">
            <summary>
            The starting element in that array.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.WriteDescriptorSet.DescriptorCount">
            <summary>
            The number of descriptors to update (the number of elements in
            pImageInfo, pBufferInfo, or pTexelBufferView).
            </summary>
        </member>
        <member name="F:SharpVk.Interop.WriteDescriptorSet.DescriptorType">
            <summary>
            A DescriptorType specifying the type of each descriptor in
            pImageInfo, pBufferInfo, or pTexelBufferView, as described below.
            It must be the same type as that specified in
            DescriptorSetLayoutBinding for dstSet at dstBinding. The type of
            the descriptor also controls which array the descriptors are taken
            from.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.WriteDescriptorSet.ImageInfo">
            <summary>
            An array of DescriptorImageInfo structures or is ignored, as
            described below.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.WriteDescriptorSet.BufferInfo">
            <summary>
            An array of DescriptorBufferInfo structures or is ignored, as
            described below.
            </summary>
        </member>
        <member name="F:SharpVk.Interop.WriteDescriptorSet.TexelBufferView">
            <summary>
            An array of BufferView handles as described in the Buffer Views
            section or is ignored, as described below.
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.AndroidSurfaceCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.AndroidSurfaceCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.AndroidSurfaceCreateInfo">
            <summary>
            Structure specifying parameters of a newly created Android surface
            object.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.AndroidSurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.AndroidSurfaceCreateInfo.Window">
            <summary>
            A pointer to the ANativeWindow to associate the surface with.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.AndroidSurfaceCreateInfo.MarshalTo(SharpVk.Interop.Khronos.AndroidSurfaceCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.BindBufferMemoryInfo">
            <summary>
            Structure specifying how to bind a buffer to memory.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.BindBufferMemoryInfo.Buffer">
            <summary>
            The buffer to be attached to memory.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.BindBufferMemoryInfo.Memory">
            <summary>
            A DeviceMemory object describing the device memory to attach.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.BindBufferMemoryInfo.MemoryOffset">
            <summary>
            The start offset of the region of memory which is to be bound to
            the buffer. The number of bytes returned in the
            MemoryRequirements.size member in memory, starting from
            memoryOffset bytes, will be bound to the specified buffer.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.BindBufferMemoryInfo.MarshalTo(SharpVk.Interop.Khronos.BindBufferMemoryInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.BindImageMemoryInfo">
            <summary>
            Structure specifying how to bind an image to memory.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.BindImageMemoryInfo.Image">
            <summary>
            The image to be attached to memory.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.BindImageMemoryInfo.Memory">
            <summary>
            DeviceMemory object describing the device memory to attach.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.BindImageMemoryInfo.MemoryOffset">
            <summary>
            The start offset of the region of memory which is to be bound to
            the image. If SFRRectCount is zero, the number of bytes returned in
            the MemoryRequirements::size member in memory, starting from
            memoryOffset bytes, will be bound to the specified image.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.BindImageMemoryInfo.MarshalTo(SharpVk.Interop.Khronos.BindImageMemoryInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.BindImagePlaneMemoryInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.BindImagePlaneMemoryInfo.PlaneAspect">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.BindImagePlaneMemoryInfo.MarshalTo(SharpVk.Interop.Khronos.BindImagePlaneMemoryInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.BufferMemoryRequirementsInfo2">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.BufferMemoryRequirementsInfo2.Buffer">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.BufferMemoryRequirementsInfo2.MarshalTo(SharpVk.Interop.Khronos.BufferMemoryRequirementsInfo2*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.BufferMemoryRequirementsInfo2.MarshalFrom(SharpVk.Interop.Khronos.BufferMemoryRequirementsInfo2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ChromaLocation">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ChromaLocation.CositedEven">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ChromaLocation.Midpoint">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ColorSpace">
            <summary>
            Supported color space of the presentation engine.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ColorSpace.SrgbNonlinear">
            <summary>
            Supports the sRGB color space.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ColorSpace.DisplayP3NonlinearExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ColorSpace.ExtendedSrgbLinearExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ColorSpace.DciP3LinearExt">
            <summary>
            Supports the DCI-P3 color space and applies a linear OETF.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ColorSpace.DciP3NonlinearExt">
            <summary>
            Supports the DCI-P3 color space and applies the Gamma 2.6 OETF.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ColorSpace.Bt709LinearExt">
            <summary>
            Supports the BT709 color space and applies a linear OETF.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ColorSpace.Bt709NonlinearExt">
            <summary>
            Supports the BT709 color space and applies the SMPTE 170M OETF.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ColorSpace.Bt2020LinearExt">
            <summary>
            Supports the BT2020 color space and applies a linear OETF.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ColorSpace.Hdr10St2084Ext">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ColorSpace.DolbyvisionExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ColorSpace.Hdr10HlgExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ColorSpace.AdobergbLinearExt">
            <summary>
            Supports the AdobeRGB color space and applies a linear OETF.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ColorSpace.AdobergbNonlinearExt">
            <summary>
            Supports the AdobeRGB color space and applies the Gamma 2.2 OETF.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ColorSpace.PassThroughExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ColorSpace.ExtendedSrgbNonlinearExt">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.CommandBufferExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.CommandBufferExtensions.PushDescriptorSet(SharpVk.CommandBuffer,SharpVk.PipelineBindPoint,SharpVk.PipelineLayout,System.UInt32,System.Nullable{SharpVk.ArrayProxy{SharpVk.WriteDescriptorSet}})">
            <summary>
            Pushes descriptor updates into a command buffer.
            </summary>
            <param name="extendedHandle">
            The CommandBuffer handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.CommandBufferExtensions.PushDescriptorSetWithTemplate(SharpVk.CommandBuffer,SharpVk.Khronos.DescriptorUpdateTemplate,SharpVk.PipelineLayout,System.UInt32,System.IntPtr)">
            <summary>
            Pushes descriptor updates into a command buffer using a descriptor
            update template.
            </summary>
            <param name="extendedHandle">
            The CommandBuffer handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.Khronos.CommandPoolExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.CommandPoolExtensions.Trim(SharpVk.CommandPool,System.Nullable{SharpVk.Khronos.CommandPoolTrimFlags})">
            <summary>
            Trim a command pool.
            </summary>
            <param name="extendedHandle">
            The CommandPool handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.Khronos.CommandPoolTrimFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.CommandPoolTrimFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.CompositeAlphaFlags">
            <summary>
            Alpha compositing modes supported on a device.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.CompositeAlphaFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.CompositeAlphaFlags.Opaque">
            <summary>
            The alpha channel, if it exists, of the images is ignored in the
            compositing process. Instead, the image is treated as if it has a
            constant alpha of 1.0.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.CompositeAlphaFlags.PreMultiplied">
            <summary>
            The alpha channel, if it exists, of the images is respected in the
            compositing process. The non-alpha channels of the image are
            expected to already be multiplied by the alpha channel by the
            application.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.CompositeAlphaFlags.PostMultiplied">
            <summary>
            The alpha channel, if it exists, of the images is respected in the
            compositing process. The non-alpha channels of the image are not
            expected to already be multiplied by the alpha channel by the
            application; instead, the compositor will multiply the non-alpha
            channels of the image by the alpha channel during compositing.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.CompositeAlphaFlags.Inherit">
            <summary>
            The way in which the presentation engine treats the alpha channel
            in the images is unknown to the Vulkan API. Instead, the
            application is responsible for setting the composite alpha blending
            mode using native window system commands. If the application does
            not set the blending mode using native window system commands, then
            a platform-specific default will be used.
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.D3D12FenceSubmitInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.D3D12FenceSubmitInfo.WaitSemaphoreValues">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.D3D12FenceSubmitInfo.SignalSemaphoreValues">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.D3D12FenceSubmitInfo.MarshalTo(SharpVk.Interop.Khronos.D3D12FenceSubmitInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.DescriptorUpdateTemplate">
            <summary>
            A descriptor update template specifies a mapping from descriptor update
            information in host memory to descriptors in a descriptor set. It is
            designed to avoid passing redundant information to the driver when
            frequently updating the same set of descriptors in descriptor sets.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DescriptorUpdateTemplate.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.DescriptorUpdateTemplate.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a descriptor update template object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.Khronos.DescriptorUpdateTemplateCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DescriptorUpdateTemplateCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.DescriptorUpdateTemplateCreateInfo">
            <summary>
            Structure specifying parameters of a newly created descriptor update
            template.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DescriptorUpdateTemplateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DescriptorUpdateTemplateCreateInfo.DescriptorUpdateEntries">
            <summary>
            An array of DescriptorUpdateTemplateEntryKHR structures describing
            the descriptors to be updated by the descriptor update template.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DescriptorUpdateTemplateCreateInfo.TemplateType">
            <summary>
            Specifies the type of the descriptor update template. If set to
            VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR it can only
            be used to update descriptor sets with a fixed descriptorSetLayout.
            If set to VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR
            it can only be used to push descriptor sets using the provided
            pipelineBindPoint, pipelineLayout, and set number.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DescriptorUpdateTemplateCreateInfo.DescriptorSetLayout">
            <summary>
            The descriptor set layout the parameter update template will be
            used with. All descriptor sets which are going to be updated
            through the newly created descriptor update template must be
            created with this layout. descriptorSetLayout is the descriptor set
            layout used to build the descriptor update template. All descriptor
            sets which are going to be updated through the newly created
            descriptor update template must be created with a layout that
            matches (is the same as, or defined identically to) this layout.
            This parameter is ignored if templateType is not
            VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DescriptorUpdateTemplateCreateInfo.PipelineBindPoint">
            <summary>
            A PipelineBindPoint indicating whether the descriptors will be used
            by graphics pipelines or compute pipelines. This parameter is
            ignored if templateType is not
            VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DescriptorUpdateTemplateCreateInfo.PipelineLayout">
            <summary>
            A PipelineLayout object used to program the bindings. This
            parameter is ignored if templateType is not
            VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DescriptorUpdateTemplateCreateInfo.Set">
            <summary>
            The set number of the descriptor set in the pipeline layout that
            will be updated. This parameter is ignored if templateType is not
            VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR ifndef::VK_KHR_push_descriptor[]
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.DescriptorUpdateTemplateCreateInfo.MarshalTo(SharpVk.Interop.Khronos.DescriptorUpdateTemplateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.DescriptorUpdateTemplateEntry">
            <summary>
            Describes a single descriptor update of the descriptor update template.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.DescriptorUpdateTemplateEntry.#ctor(System.UInt32,System.UInt32,System.UInt32,SharpVk.DescriptorType,SharpVk.HostSize,SharpVk.HostSize)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DescriptorUpdateTemplateEntry.DestinationBinding">
            <summary>
            The descriptor binding to update when using this descriptor update
            template.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DescriptorUpdateTemplateEntry.DestinationArrayElement">
            <summary>
            The starting element in the array belonging to dstBinding.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DescriptorUpdateTemplateEntry.DescriptorCount">
            <summary>
            The number of descriptors to update. If descriptorCount is greater
            than the number of remaining array elements in the destination
            binding, those affect consecutive bindings in a manner similar to
            WriteDescriptorSet above.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DescriptorUpdateTemplateEntry.DescriptorType">
            <summary>
            A DescriptorType specifying the type of the descriptor.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DescriptorUpdateTemplateEntry.Offset">
            <summary>
            The offset in bytes of the first binding in the raw data structure.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DescriptorUpdateTemplateEntry.Stride">
            <summary>
            The stride in bytes between two consecutive array elements of the
            descriptor update informations in the raw data structure. The
            actual pointer ptr for each array element j of update entry i is
            computed using the following formula: [source,c++]
            --------------------------------------------------- const char *ptr
            = (const char *)pData + pDescriptorUpdateEntries[i].offset + j *
            pDescriptorUpdateEntries[i].stride ---------------------------------------------------
            The stride is useful in case the bindings are stored in structs
            along with other data.
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.DescriptorUpdateTemplateType">
            <summary>
            Indicates the valid usage of the descriptor update template.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DescriptorUpdateTemplateType.DescriptorSet">
            <summary>
            Indicates that the descriptor update template will be used for
            descriptor set updates only.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DescriptorUpdateTemplateType.PushDescriptors">
            <summary>
            Indicates that the descriptor update template will be used for push
            descriptor updates only.
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.DeviceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.CreateSharedSwapchains(SharpVk.Device,System.Nullable{SharpVk.ArrayProxy{SharpVk.Khronos.SwapchainCreateInfo}},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create multiple swapchains that share presentable images.
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.CreateSwapchain(SharpVk.Device,SharpVk.Khronos.Surface,System.UInt32,SharpVk.Format,SharpVk.Khronos.ColorSpace,SharpVk.Extent2D,System.UInt32,SharpVk.ImageUsageFlags,SharpVk.SharingMode,System.Nullable{SharpVk.ArrayProxy{System.UInt32}},SharpVk.Khronos.SurfaceTransformFlags,SharpVk.Khronos.CompositeAlphaFlags,SharpVk.Khronos.PresentMode,System.Boolean,SharpVk.Khronos.Swapchain,System.Nullable{SharpVk.Khronos.SwapchainCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a swapchain.
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
            <param name="flags">
            A bitmask indicating parameters of swapchain creation. Bits which
            can be set include: + --
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.GetMemoryWin32Handle(SharpVk.Device,SharpVk.Khronos.MemoryGetWin32HandleInfo)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.GetMemoryWin32HandleProperties(SharpVk.Device,SharpVk.Khronos.ExternalMemoryHandleTypeFlags,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.GetMemoryFileDescriptor(SharpVk.Device,SharpVk.Khronos.MemoryGetFileDescriptorInfo)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.GetMemoryFileDescriptorProperties(SharpVk.Device,SharpVk.Khronos.ExternalMemoryHandleTypeFlags,System.Int32)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.GetSemaphoreWin32Handle(SharpVk.Device,SharpVk.Khronos.SemaphoreGetWin32HandleInfo)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.ImportSemaphoreWin32Handle(SharpVk.Device,SharpVk.Khronos.ImportSemaphoreWin32HandleInfo)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.GetSemaphoreFileDescriptor(SharpVk.Device,SharpVk.Khronos.SemaphoreGetFileDescriptorInfo)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.ImportSemaphoreFileDescriptor(SharpVk.Device,SharpVk.Khronos.ImportSemaphoreFileDescriptorInfo)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.GetFenceWin32Handle(SharpVk.Device,SharpVk.Khronos.FenceGetWin32HandleInfo)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.ImportFenceWin32Handle(SharpVk.Device,SharpVk.Khronos.ImportFenceWin32HandleInfo)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.GetFenceFileDescriptor(SharpVk.Device,SharpVk.Khronos.FenceGetFileDescriptorInfo)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.ImportFenceFileDescriptor(SharpVk.Device,SharpVk.Khronos.ImportFenceFileDescriptorInfo)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.BindBufferMemory2(SharpVk.Device,System.Nullable{SharpVk.ArrayProxy{SharpVk.Khronos.BindBufferMemoryInfo}})">
            <summary>
            Bind device memory to buffer objects.
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.BindImageMemory2(SharpVk.Device,System.Nullable{SharpVk.ArrayProxy{SharpVk.Khronos.BindImageMemoryInfo}})">
            <summary>
            Bind device memory to image objects.
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.CreateDescriptorUpdateTemplate(SharpVk.Device,System.Nullable{SharpVk.ArrayProxy{SharpVk.Khronos.DescriptorUpdateTemplateEntry}},SharpVk.Khronos.DescriptorUpdateTemplateType,SharpVk.DescriptorSetLayout,SharpVk.PipelineLayout,System.Nullable{SharpVk.Khronos.DescriptorUpdateTemplateCreateFlags},System.Nullable{SharpVk.PipelineBindPoint},System.Nullable{System.UInt32},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a new descriptor update template.
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="templateType">
            Specifies the type of the descriptor update template. If set to
            VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR it can only
            be used to update descriptor sets with a fixed descriptorSetLayout.
            If set to VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR
            it can only be used to push descriptor sets using the provided
            pipelineBindPoint, pipelineLayout, and set number.
            </param>
            <param name="descriptorSetLayout">
            The descriptor set layout the parameter update template will be
            used with. All descriptor sets which are going to be updated
            through the newly created descriptor update template must be
            created with this layout. descriptorSetLayout is the descriptor set
            layout used to build the descriptor update template. All descriptor
            sets which are going to be updated through the newly created
            descriptor update template must be created with a layout that
            matches (is the same as, or defined identically to) this layout.
            This parameter is ignored if templateType is not
            VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR.
            </param>
            <param name="pipelineBindPoint">
            A PipelineBindPoint indicating whether the descriptors will be used
            by graphics pipelines or compute pipelines. This parameter is
            ignored if templateType is not
            VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR
            </param>
            <param name="pipelineLayout">
            A PipelineLayout object used to program the bindings. This
            parameter is ignored if templateType is not
            VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR
            </param>
            <param name="set">
            The set number of the descriptor set in the pipeline layout that
            will be updated. This parameter is ignored if templateType is not
            VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR ifndef::VK_KHR_push_descriptor[]
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.UpdateDescriptorSetWithTemplate(SharpVk.Device,SharpVk.DescriptorSet,SharpVk.Khronos.DescriptorUpdateTemplate,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.GetBufferMemoryRequirements2(SharpVk.Device,SharpVk.Khronos.BufferMemoryRequirementsInfo2)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.GetImageMemoryRequirements2(SharpVk.Device,SharpVk.Khronos.ImageMemoryRequirementsInfo2)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.GetImageSparseMemoryRequirements2(SharpVk.Device,SharpVk.Khronos.ImageSparseMemoryRequirementsInfo2)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.DeviceExtensions.CreateSamplerYcbcrConversion(SharpVk.Device,SharpVk.Format,SharpVk.Khronos.SamplerYcbcrModelConversion,SharpVk.Khronos.SamplerYcbcrRange,SharpVk.ComponentMapping,SharpVk.Khronos.ChromaLocation,SharpVk.Khronos.ChromaLocation,SharpVk.Filter,System.Boolean,System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.Khronos.Display">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Display.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.DisplayMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplayMode.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.DisplayMode.GetDisplayPlaneCapabilities(System.UInt32)">
            <summary>
            Query capabilities of a mode and plane combination.
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.DisplayModeCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplayModeCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.DisplayModeCreateInfo">
            <summary>
            Structure specifying parameters of a newly created display mode object.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplayModeCreateInfo.Flags">
            <summary>
            Reserved for future use, and must be zero.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplayModeCreateInfo.Parameters">
            <summary>
            A DisplayModeParametersKHR structure describing the display
            parameters to use in creating the new mode. If the parameters are
            not compatible with the specified display, the implementation must
            return Result.ErrorINITIALIZATION_FAILED.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.DisplayModeCreateInfo.MarshalTo(SharpVk.Interop.Khronos.DisplayModeCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.DisplayModeParameters">
            <summary>
            Structure describing display parameters associated with a display mode.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.DisplayModeParameters.#ctor(SharpVk.Extent2D,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplayModeParameters.VisibleRegion">
            <summary>
            The 2D extents of the visible region.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplayModeParameters.RefreshRate">
            <summary>
            A uint32_t that is the number of times the display is refreshed
            each second multiplied by 1000.
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.DisplayModeProperties">
            <summary>
            Structure describing display mode properties.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplayModeProperties.DisplayMode">
            <summary>
            A handle to the display mode described in this structure. This
            handle will be valid for the lifetime of the Vulkan instance.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplayModeProperties.Parameters">
            <summary>
            A DisplayModeParametersKHR structure describing the display
            parameters associated with displayMode.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.DisplayModeProperties.MarshalFrom(SharpVk.Interop.Khronos.DisplayModeProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.DisplayPlaneAlphaFlags">
            <summary>
            Alpha blending type.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplayPlaneAlphaFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplayPlaneAlphaFlags.Opaque">
            <summary>
            The source image will be treated as opaque.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplayPlaneAlphaFlags.Global">
            <summary>
            VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR: A global alpha value must be
            specified that will be applied to all pixels in the source image.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplayPlaneAlphaFlags.PerPixel">
            <summary>
            The alpha value will be determined by the alpha channel of the
            source image's pixels. If the source format contains no alpha
            values, no blending will be applied. The source alpha values are
            not premultiplied into the source image's other color channels.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplayPlaneAlphaFlags.PerPixelPremultiplied">
            <summary>
            This is equivalent to VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR
            except the source alpha values are assumed to be premultiplied into
            the source image's other color channels.
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.DisplayPlaneCapabilities">
            <summary>
            Structure describing capabilities of a mode and plane combination.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.DisplayPlaneCapabilities.#ctor(SharpVk.Khronos.DisplayPlaneAlphaFlags,SharpVk.Offset2D,SharpVk.Offset2D,SharpVk.Extent2D,SharpVk.Extent2D,SharpVk.Offset2D,SharpVk.Offset2D,SharpVk.Extent2D,SharpVk.Extent2D)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplayPlaneCapabilities.SupportedAlpha">
            <summary>
            A bitmask of DisplayPlaneAlphaFlagBitsKHR describing the supported
            alpha blending modes.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplayPlaneCapabilities.MinSourcePosition">
            <summary>
            The minimum source rectangle offset supported by this plane using
            the specified mode.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplayPlaneCapabilities.MaxSourcePosition">
            <summary>
            The maximum source rectangle offset supported by this plane using
            the specified mode. The x and y components of maxSrcPosition must
            each be greater than or equal to the x and y components of
            minSrcPosition, respectively.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplayPlaneCapabilities.MinSourceExtent">
            <summary>
            The minimum source rectangle size supported by this plane using the
            specified mode.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplayPlaneCapabilities.MaxSourceExtent">
            <summary>
            The maximum source rectangle size supported by this plane using the
            specified mode.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplayPlaneCapabilities.MinDestinationPosition">
            <summary>
            minDstPosition, maxDstPosition, minDstExtent, maxDstExtent all have
            similar semantics to their corresponding "Src" equivalents, but
            apply to the output region within the mode rather than the input
            region within the source image. Unlike the "Src" offsets,
            minDstPosition and maxDstPosition may contain negative values.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplayPlaneCapabilities.MaxDestinationPosition">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplayPlaneCapabilities.MinDestinationExtent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplayPlaneCapabilities.MaxDestinationExtent">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.DisplayPlaneProperties">
            <summary>
            Structure describing display plane properties.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplayPlaneProperties.CurrentDisplay">
            <summary>
            The handle of the display the plane is currently associated with.
            If the plane is not currently attached to any displays, this will
            be null.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplayPlaneProperties.CurrentStackIndex">
            <summary>
            The current z-order of the plane. This will be between 0 and the
            value returned by
            fname:vkGetPhysicalDeviceDisplayPlanePropertiesKHR() in
            pPropertyCount.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.DisplayPlaneProperties.MarshalFrom(SharpVk.Interop.Khronos.DisplayPlaneProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.DisplayPresentInfo">
            <summary>
            Structure describing parameters of a queue presentation to a swapchain.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplayPresentInfo.SourceRect">
            <summary>
            A rectangular region of pixels to present. It must be a subset of
            the image being presented. If DisplayPresentInfoKHR is not
            specified, this region will be assumed to be the entire presentable
            image.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplayPresentInfo.DestinationRect">
            <summary>
            A rectangular region within the visible region of the swapchain's
            display mode. If DisplayPresentInfoKHR is not specified, this
            region will be assumed to be the entire visible region of the
            visible region of the swapchain's mode. If the specified rectangle
            is a subset of the display mode's visible region, content from
            display planes below the swapchain's plane will be visible outside
            the rectangle. If there are no planes below the swapchain's, the
            area outside the specified rectangle will be black. If portions of
            the specified rectangle are outside of the display's visible
            region, pixels mapping only to those portions of the rectangle will
            be discarded.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplayPresentInfo.Persistent">
            <summary>
            persistent: If this is VK_TRUE, the display engine will enable
            buffered mode on displays that support it. This allows the display
            engine to stop sending content to the display until a new image is
            presented. The display will instead maintain a copy of the last
            presented image. This allows less power to be used, but may
            increase presentation latency. If DisplayPresentInfoKHR is not
            specified, persistent mode will not be used.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.DisplayPresentInfo.MarshalTo(SharpVk.Interop.Khronos.DisplayPresentInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.DisplayProperties">
            <summary>
            Structure describing an available display device.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplayProperties.Display">
            <summary>
            A handle that is used to refer to the display described here. This
            handle will be valid for the lifetime of the Vulkan instance.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplayProperties.DisplayName">
            <summary>
            A NULL-terminated string containing the name of the display.
            Generally, this will be the name provided by the display's EDID. It
            can be Null if no suitable name is available.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplayProperties.PhysicalDimensions">
            <summary>
            physicalDimensions describes the physical width and height of the
            visible portion of the display, in millimeters.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplayProperties.PhysicalResolution">
            <summary>
            physicalResolution describes the physical, native, or preferred
            resolution of the display.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplayProperties.SupportedTransforms">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplayProperties.PlaneReorderPossible">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplayProperties.PersistentContent">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.DisplayProperties.MarshalFrom(SharpVk.Interop.Khronos.DisplayProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.DisplaySurfaceCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.DisplaySurfaceCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.DisplaySurfaceCreateInfo">
            <summary>
            Structure specifying parameters of a newly created display plane
            surface object.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplaySurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use, and must be zero.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplaySurfaceCreateInfo.DisplayMode">
            <summary>
            The mode to use when displaying this surface.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplaySurfaceCreateInfo.PlaneIndex">
            <summary>
            The plane on which this surface appears.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplaySurfaceCreateInfo.PlaneStackIndex">
            <summary>
            The z-order of the plane.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplaySurfaceCreateInfo.Transform">
            <summary>
            The transform to apply to the images as part of the scanout
            operation.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplaySurfaceCreateInfo.GlobalAlpha">
            <summary>
            The global alpha value. This value is ignored if alphaMode is not
            VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplaySurfaceCreateInfo.AlphaMode">
            <summary>
            The type of alpha blending to use.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.DisplaySurfaceCreateInfo.ImageExtent">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.DisplaySurfaceCreateInfo.MarshalTo(SharpVk.Interop.Khronos.DisplaySurfaceCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.AcquireNextImageInfo">
            <summary>
            Structure specifying parameters of the acquire.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.AcquireNextImageInfo.Swapchain">
            <summary>
            The swapchain from which an image is being acquired.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.AcquireNextImageInfo.Timeout">
            <summary>
            Indicates how long the function waits, in nanoseconds, if no image
            is available.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.AcquireNextImageInfo.Semaphore">
            <summary>
            Null or a semaphore to signal.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.AcquireNextImageInfo.Fence">
            <summary>
            Null or a fence to signal.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.AcquireNextImageInfo.DeviceMask">
            <summary>
            A mask of physical devices for which the swapchain image will be
            ready to use when the semaphore or fence is signaled.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.AcquireNextImageInfo.MarshalTo(SharpVk.Interop.Khronos.Experimental.AcquireNextImageInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.BindBufferMemoryDeviceGroupInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.BindBufferMemoryDeviceGroupInfo.DeviceIndices">
            <summary>
            An array of device indices.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.BindBufferMemoryDeviceGroupInfo.MarshalTo(SharpVk.Interop.Khronos.Experimental.BindBufferMemoryDeviceGroupInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.BindImageMemoryDeviceGroupInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.BindImageMemoryDeviceGroupInfo.DeviceIndices">
            <summary>
            An array of device indices.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.BindImageMemoryDeviceGroupInfo.SFRRects">
            <summary>
            An array of rectangles describing which regions of the image are
            attached to each instance of memory.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.BindImageMemoryDeviceGroupInfo.MarshalTo(SharpVk.Interop.Khronos.Experimental.BindImageMemoryDeviceGroupInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.BindImageMemorySwapchainInfo">
            <summary>
            Structure specifying swapchain image memory to bind to.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.BindImageMemorySwapchainInfo.Swapchain">
            <summary>
            Null or a swapchain handle.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.BindImageMemorySwapchainInfo.ImageIndex">
            <summary>
            An image index within swapchain.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.BindImageMemorySwapchainInfo.MarshalTo(SharpVk.Interop.Khronos.Experimental.BindImageMemorySwapchainInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.CommandBufferExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.CommandBufferExtensions.SetDeviceMask(SharpVk.CommandBuffer,System.UInt32)">
            <summary>
            Modify device mask of a command buffer.
            </summary>
            <param name="extendedHandle">
            The CommandBuffer handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.CommandBufferExtensions.DispatchBase(SharpVk.CommandBuffer,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Dispatch compute work items.
            </summary>
            <param name="extendedHandle">
            The CommandBuffer handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.DeviceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.DeviceExtensions.GetGroupPeerMemoryFeatures(SharpVk.Device,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Query supported peer memory features of a device.
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.DeviceExtensions.GetGroupPresentCapabilities(SharpVk.Device)">
            <summary>
            Query present capabilities from other physical devices.
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.DeviceExtensions.GetGroupSurfacePresentModes(SharpVk.Device,SharpVk.Khronos.Surface)">
            <summary>
            Query present capabilities for a surface.
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.DeviceExtensions.AcquireNextImage2(SharpVk.Device,SharpVk.Khronos.Experimental.AcquireNextImageInfo)">
            <summary>
            Retrieve the index of the next available presentable image.
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.DeviceGroupBindSparseInfo">
            <summary>
            Structure indicating which instances are bound.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.DeviceGroupBindSparseInfo.ResourceDeviceIndex">
            <summary>
            A device index indicating which instance of the resource is bound.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.DeviceGroupBindSparseInfo.MemoryDeviceIndex">
            <summary>
            A device index indicating which instance of the memory the resource
            instance is bound to.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.DeviceGroupBindSparseInfo.MarshalTo(SharpVk.Interop.Khronos.Experimental.DeviceGroupBindSparseInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.DeviceGroupCommandBufferBeginInfo">
            <summary>
            Set the initial device mask for a command buffer.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.DeviceGroupCommandBufferBeginInfo.DeviceMask">
            <summary>
            The initial value of the command buffer's device mask.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.DeviceGroupCommandBufferBeginInfo.MarshalTo(SharpVk.Interop.Khronos.Experimental.DeviceGroupCommandBufferBeginInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.DeviceGroupDeviceCreateInfo">
            <summary>
            Create a logical device from multiple physical devices.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.DeviceGroupDeviceCreateInfo.PhysicalDevices">
            <summary>
            An array of physical device handles belonging to the same device
            group.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.DeviceGroupDeviceCreateInfo.MarshalTo(SharpVk.Interop.Khronos.Experimental.DeviceGroupDeviceCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.DeviceGroupPresentCapabilities">
            <summary>
            Present capabilities from other physical devices.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.DeviceGroupPresentCapabilities.PresentMask">
            <summary>
            An array of masks, where the mask at element [eq]#i# is non-zero if
            physical device [eq]#i# has a presentation engine, and where bit
            [eq]#j# is set in element [eq]#i# if physical device [eq]#i# can
            present swapchain images from physical device [eq]#j#. If element
            [eq]#i# is non-zero, then bit [eq]#i# must be set.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.DeviceGroupPresentCapabilities.Modes">
            <summary>
            A bitmask indicating which device group presentation modes are
            supported. The bits returned in modes are: + --
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.DeviceGroupPresentCapabilities.MarshalFrom(SharpVk.Interop.Khronos.Experimental.DeviceGroupPresentCapabilities*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.DeviceGroupPresentInfo">
            <summary>
            Mode and mask controlling which physical devices' images are presented.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.DeviceGroupPresentInfo.DeviceMasks">
            <summary>
            An array of device masks, one for each element of
            PresentInfoKHR::pSwapchains.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.DeviceGroupPresentInfo.Mode">
            <summary>
            The device group present mode that will be used for this present.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.DeviceGroupPresentInfo.MarshalTo(SharpVk.Interop.Khronos.Experimental.DeviceGroupPresentInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.DeviceGroupPresentModeFlags">
            <summary>
            Bitmask specifying supported device group present modes.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.Experimental.DeviceGroupPresentModeFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.Experimental.DeviceGroupPresentModeFlags.Local">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.Experimental.DeviceGroupPresentModeFlags.Remote">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.Experimental.DeviceGroupPresentModeFlags.Sum">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.Experimental.DeviceGroupPresentModeFlags.LocalMultiDevice">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.DeviceGroupRenderPassBeginInfo">
            <summary>
            Set the initial device mask and render areas for a render pass
            instance.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.DeviceGroupRenderPassBeginInfo.DeviceMask">
            <summary>
            The device mask for the render pass instance.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.DeviceGroupRenderPassBeginInfo.DeviceRenderAreas">
            <summary>
            An array of structures of type Rect2D defining the render area for
            each physical device.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.DeviceGroupRenderPassBeginInfo.MarshalTo(SharpVk.Interop.Khronos.Experimental.DeviceGroupRenderPassBeginInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.DeviceGroupSubmitInfo">
            <summary>
            Structure indicating which physical devices execute semaphore
            operations and command buffers.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.DeviceGroupSubmitInfo.WaitSemaphoreDeviceIndices">
            <summary>
            An array of device indices indicating which physical device
            executes the semaphore wait operation in the corresponding element
            of SubmitInfo::pWaitSemaphores.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.DeviceGroupSubmitInfo.CommandBufferDeviceMasks">
            <summary>
            An array of device masks indicating which physical devices execute
            the command buffer in the corresponding element of
            SubmitInfo::pCommandBuffers. A physical device executes the command
            buffer if the corresponding bit is set in the mask.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.DeviceGroupSubmitInfo.SignalSemaphoreDeviceIndices">
            <summary>
            An array of device indices indicating which physical device
            executes the semaphore signal operation in the corresponding
            element of SubmitInfo::pSignalSemaphores.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.DeviceGroupSubmitInfo.MarshalTo(SharpVk.Interop.Khronos.Experimental.DeviceGroupSubmitInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.DeviceGroupSwapchainCreateInfo">
            <summary>
            Structure specifying parameters of a newly created swapchain object.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.DeviceGroupSwapchainCreateInfo.Modes">
            <summary>
            A bitfield of modes that the swapchain can be used with.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.DeviceGroupSwapchainCreateInfo.MarshalTo(SharpVk.Interop.Khronos.Experimental.DeviceGroupSwapchainCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.ImageSwapchainCreateInfo">
            <summary>
            Specify that an image will be bound to swapchain memory.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.ImageSwapchainCreateInfo.Swapchain">
            <summary>
            swapchain is null or a handle of a swapchain that the image will be
            bound to.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.ImageSwapchainCreateInfo.MarshalTo(SharpVk.Interop.Khronos.Experimental.ImageSwapchainCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.InstanceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.InstanceExtensions.EnumeratePhysicalDeviceGroups(SharpVk.Instance)">
            <summary>
            Enumerates groups of physical devices that can be used to create a
            single logical device.
            </summary>
            <param name="extendedHandle">
            The Instance handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.MemoryAllocateFlags">
            <summary>
            Bitmask specifying flags for a device memory allocation.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.Experimental.MemoryAllocateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.Experimental.MemoryAllocateFlags.DeviceMask">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.MemoryAllocateFlagsInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.MemoryAllocateFlagsInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.MemoryAllocateFlagsInfo.DeviceMask">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.MemoryAllocateFlagsInfo.MarshalTo(SharpVk.Interop.Khronos.Experimental.MemoryAllocateFlagsInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.PeerMemoryFeatureFlags">
            <summary>
            Bitmask specifying supported peer memory features.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.Experimental.PeerMemoryFeatureFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.Experimental.PeerMemoryFeatureFlags.CopySource">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.Experimental.PeerMemoryFeatureFlags.CopyDestination">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.Experimental.PeerMemoryFeatureFlags.GenericSource">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.Experimental.PeerMemoryFeatureFlags.GenericDestination">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.PhysicalDeviceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.PhysicalDeviceExtensions.GetPresentRectangles(SharpVk.PhysicalDevice,SharpVk.Khronos.Surface)">
            <summary>
            Query present rectangles for a surface on a physical device.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.PhysicalDeviceGroupProperties">
            <summary>
            Structure specifying physical device group properties.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.PhysicalDeviceGroupProperties.PhysicalDevices">
            <summary>
            An array of physical device handles representing all physical
            devices in the group. The first physicalDeviceCount elements of the
            array will be valid.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.PhysicalDeviceGroupProperties.SubsetAllocation">
            <summary>
            Indicates whether logical devices created from the group support
            allocating device memory on a subset of devices, via the deviceMask
            member of the MemoryAllocateFlagsInfoKHX. If this is VK_FALSE, then
            all device memory allocations are made across all physical devices
            in the group. If physicalDeviceCount is `1`, then subsetAllocation
            must be VK_FALSE.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.PhysicalDeviceGroupProperties.MarshalFrom(SharpVk.Interop.Khronos.Experimental.PhysicalDeviceGroupProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.PhysicalDeviceMultiviewFeatures">
            <summary>
            Structure describing multiview features that can be supported by an
            implementation.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.PhysicalDeviceMultiviewFeatures.Multiview">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.PhysicalDeviceMultiviewFeatures.MultiviewGeometryShader">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.PhysicalDeviceMultiviewFeatures.MultiviewTessellationShader">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.PhysicalDeviceMultiviewFeatures.MarshalTo(SharpVk.Interop.Khronos.Experimental.PhysicalDeviceMultiviewFeatures*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.PhysicalDeviceMultiviewFeatures.MarshalFrom(SharpVk.Interop.Khronos.Experimental.PhysicalDeviceMultiviewFeatures*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.PhysicalDeviceMultiviewProperties">
            <summary>
            Structure describing multiview limits that can be supported by an
            implementation.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.PhysicalDeviceMultiviewProperties.MaxMultiviewViewCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.PhysicalDeviceMultiviewProperties.MaxMultiviewInstanceIndex">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.PhysicalDeviceMultiviewProperties.MarshalFrom(SharpVk.Interop.Khronos.Experimental.PhysicalDeviceMultiviewProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Experimental.RenderPassMultiviewCreateInfo">
            <summary>
            Structure containing multiview info for all subpasses.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.RenderPassMultiviewCreateInfo.ViewMasks">
            <summary>
            An array of view masks, where each mask is a bitfield of view
            indices describing which views rendering is broadcast to in each
            subpass, when multiview is enabled. If subpassCount is zero, each
            view mask is treated as zero.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.RenderPassMultiviewCreateInfo.ViewOffsets">
            <summary>
            An array of dependencyCount view offsets, one for each dependency.
            If dependencyCount is zero, each dependency's view offset is
            treated as zero. Each view offset controls which views in the
            source subpass the views in the destination subpass depend on.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Experimental.RenderPassMultiviewCreateInfo.CorrelationMasks">
            <summary>
            An array of view masks indicating sets of views that may be more
            efficient to render concurrently.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Experimental.RenderPassMultiviewCreateInfo.MarshalTo(SharpVk.Interop.Khronos.Experimental.RenderPassMultiviewCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExportFenceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExportFenceCreateInfo.HandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ExportFenceCreateInfo.MarshalTo(SharpVk.Interop.Khronos.ExportFenceCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExportFenceWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExportFenceWin32HandleInfo.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExportFenceWin32HandleInfo.DwAccess">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExportFenceWin32HandleInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ExportFenceWin32HandleInfo.MarshalTo(SharpVk.Interop.Khronos.ExportFenceWin32HandleInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExportMemoryAllocateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExportMemoryAllocateInfo.HandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ExportMemoryAllocateInfo.MarshalTo(SharpVk.Interop.Khronos.ExportMemoryAllocateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExportMemoryWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExportMemoryWin32HandleInfo.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExportMemoryWin32HandleInfo.DwAccess">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExportMemoryWin32HandleInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ExportMemoryWin32HandleInfo.MarshalTo(SharpVk.Interop.Khronos.ExportMemoryWin32HandleInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExportSemaphoreCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExportSemaphoreCreateInfo.HandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ExportSemaphoreCreateInfo.MarshalTo(SharpVk.Interop.Khronos.ExportSemaphoreCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExportSemaphoreWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExportSemaphoreWin32HandleInfo.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExportSemaphoreWin32HandleInfo.DwAccess">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExportSemaphoreWin32HandleInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ExportSemaphoreWin32HandleInfo.MarshalTo(SharpVk.Interop.Khronos.ExportSemaphoreWin32HandleInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExternalBufferProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExternalBufferProperties.ExternalMemoryProperties">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ExternalBufferProperties.MarshalFrom(SharpVk.Interop.Khronos.ExternalBufferProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExternalFenceFeatureFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalFenceFeatureFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalFenceFeatureFlags.Exportable">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalFenceFeatureFlags.Importable">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExternalFenceHandleTypeFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalFenceHandleTypeFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalFenceHandleTypeFlags.OpaqueFileDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalFenceHandleTypeFlags.OpaqueWin32">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalFenceHandleTypeFlags.OpaqueWin32Kmt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalFenceHandleTypeFlags.SyncFileDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExternalFenceProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExternalFenceProperties.ExportFromImportedHandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExternalFenceProperties.CompatibleHandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExternalFenceProperties.ExternalFenceFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ExternalFenceProperties.MarshalFrom(SharpVk.Interop.Khronos.ExternalFenceProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExternalImageFormatProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExternalImageFormatProperties.ExternalMemoryProperties">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ExternalImageFormatProperties.MarshalFrom(SharpVk.Interop.Khronos.ExternalImageFormatProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExternalMemoryBufferCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExternalMemoryBufferCreateInfo.HandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ExternalMemoryBufferCreateInfo.MarshalTo(SharpVk.Interop.Khronos.ExternalMemoryBufferCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExternalMemoryFeatureFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalMemoryFeatureFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalMemoryFeatureFlags.DedicatedOnly">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalMemoryFeatureFlags.Exportable">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalMemoryFeatureFlags.Importable">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExternalMemoryHandleTypeFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalMemoryHandleTypeFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalMemoryHandleTypeFlags.OpaqueFileDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalMemoryHandleTypeFlags.OpaqueWin32">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalMemoryHandleTypeFlags.OpaqueWin32Kmt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalMemoryHandleTypeFlags.D3d11Texture">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalMemoryHandleTypeFlags.D3d11TextureKmt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalMemoryHandleTypeFlags.D3d12Heap">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalMemoryHandleTypeFlags.D3d12Resource">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExternalMemoryImageCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExternalMemoryImageCreateInfo.HandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ExternalMemoryImageCreateInfo.MarshalTo(SharpVk.Interop.Khronos.ExternalMemoryImageCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExternalMemoryProperties">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ExternalMemoryProperties.#ctor(SharpVk.Khronos.ExternalMemoryFeatureFlags,SharpVk.Khronos.ExternalMemoryHandleTypeFlags,SharpVk.Khronos.ExternalMemoryHandleTypeFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalMemoryProperties.ExternalMemoryFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalMemoryProperties.ExportFromImportedHandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalMemoryProperties.CompatibleHandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExternalSemaphoreFeatureFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalSemaphoreFeatureFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalSemaphoreFeatureFlags.Exportable">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalSemaphoreFeatureFlags.Importable">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExternalSemaphoreHandleTypeFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalSemaphoreHandleTypeFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalSemaphoreHandleTypeFlags.OpaqueFileDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalSemaphoreHandleTypeFlags.OpaqueWin32">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalSemaphoreHandleTypeFlags.OpaqueWin32Kmt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalSemaphoreHandleTypeFlags.D3d12Fence">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.ExternalSemaphoreHandleTypeFlags.SyncFileDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ExternalSemaphoreProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExternalSemaphoreProperties.ExportFromImportedHandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExternalSemaphoreProperties.CompatibleHandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ExternalSemaphoreProperties.ExternalSemaphoreFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ExternalSemaphoreProperties.MarshalFrom(SharpVk.Interop.Khronos.ExternalSemaphoreProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.FenceGetFileDescriptorInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.FenceGetFileDescriptorInfo.Fence">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.FenceGetFileDescriptorInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.FenceGetFileDescriptorInfo.MarshalTo(SharpVk.Interop.Khronos.FenceGetFileDescriptorInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.FenceGetWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.FenceGetWin32HandleInfo.Fence">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.FenceGetWin32HandleInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.FenceGetWin32HandleInfo.MarshalTo(SharpVk.Interop.Khronos.FenceGetWin32HandleInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.FenceImportFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.FenceImportFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.FenceImportFlags.Temporary">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.FormatProperties2">
            <summary>
            Structure specifying image format properties.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.FormatProperties2.FormatProperties">
            <summary>
            A structure of type FormatProperties describing features supported
            by the requested format.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.FormatProperties2.MarshalFrom(SharpVk.Interop.Khronos.FormatProperties2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ImageFormatListCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImageFormatListCreateInfo.ViewFormats">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ImageFormatListCreateInfo.MarshalTo(SharpVk.Interop.Khronos.ImageFormatListCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ImageFormatProperties2">
            <summary>
            Structure specifying a image format properties.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImageFormatProperties2.ImageFormatProperties">
            <summary>
            An instance of a ImageFormatProperties structure in which
            capabilities are returned.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ImageFormatProperties2.MarshalFrom(SharpVk.Interop.Khronos.ImageFormatProperties2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ImageMemoryRequirementsInfo2">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImageMemoryRequirementsInfo2.Image">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ImageMemoryRequirementsInfo2.MarshalTo(SharpVk.Interop.Khronos.ImageMemoryRequirementsInfo2*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ImageMemoryRequirementsInfo2.MarshalFrom(SharpVk.Interop.Khronos.ImageMemoryRequirementsInfo2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ImagePlaneMemoryRequirementsInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImagePlaneMemoryRequirementsInfo.PlaneAspect">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ImagePlaneMemoryRequirementsInfo.MarshalTo(SharpVk.Interop.Khronos.ImagePlaneMemoryRequirementsInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ImageSparseMemoryRequirementsInfo2">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImageSparseMemoryRequirementsInfo2.Image">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ImageSparseMemoryRequirementsInfo2.MarshalTo(SharpVk.Interop.Khronos.ImageSparseMemoryRequirementsInfo2*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ImageSparseMemoryRequirementsInfo2.MarshalFrom(SharpVk.Interop.Khronos.ImageSparseMemoryRequirementsInfo2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ImageViewUsageCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImageViewUsageCreateInfo.Usage">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ImageViewUsageCreateInfo.MarshalTo(SharpVk.Interop.Khronos.ImageViewUsageCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ImportFenceFileDescriptorInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportFenceFileDescriptorInfo.Fence">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportFenceFileDescriptorInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportFenceFileDescriptorInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportFenceFileDescriptorInfo.FileDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ImportFenceFileDescriptorInfo.MarshalTo(SharpVk.Interop.Khronos.ImportFenceFileDescriptorInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ImportFenceWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportFenceWin32HandleInfo.Fence">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportFenceWin32HandleInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportFenceWin32HandleInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportFenceWin32HandleInfo.Handle">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportFenceWin32HandleInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ImportFenceWin32HandleInfo.MarshalTo(SharpVk.Interop.Khronos.ImportFenceWin32HandleInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ImportMemoryFileDescriptorInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportMemoryFileDescriptorInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportMemoryFileDescriptorInfo.FileDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ImportMemoryFileDescriptorInfo.MarshalTo(SharpVk.Interop.Khronos.ImportMemoryFileDescriptorInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ImportMemoryWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportMemoryWin32HandleInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportMemoryWin32HandleInfo.Handle">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportMemoryWin32HandleInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ImportMemoryWin32HandleInfo.MarshalTo(SharpVk.Interop.Khronos.ImportMemoryWin32HandleInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ImportSemaphoreFileDescriptorInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportSemaphoreFileDescriptorInfo.Semaphore">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportSemaphoreFileDescriptorInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportSemaphoreFileDescriptorInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportSemaphoreFileDescriptorInfo.FileDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ImportSemaphoreFileDescriptorInfo.MarshalTo(SharpVk.Interop.Khronos.ImportSemaphoreFileDescriptorInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.ImportSemaphoreWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportSemaphoreWin32HandleInfo.Semaphore">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportSemaphoreWin32HandleInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportSemaphoreWin32HandleInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportSemaphoreWin32HandleInfo.Handle">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.ImportSemaphoreWin32HandleInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.ImportSemaphoreWin32HandleInfo.MarshalTo(SharpVk.Interop.Khronos.ImportSemaphoreWin32HandleInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.InputAttachmentAspectReference">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.InputAttachmentAspectReference.#ctor(System.UInt32,System.UInt32,SharpVk.ImageAspectFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.InputAttachmentAspectReference.Subpass">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.InputAttachmentAspectReference.InputAttachmentIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.InputAttachmentAspectReference.AspectMask">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.InstanceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.InstanceExtensions.CreateAndroidSurface(SharpVk.Instance,System.IntPtr,System.Nullable{SharpVk.Khronos.AndroidSurfaceCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a SurfaceKHR object for an Android native window.
            </summary>
            <param name="extendedHandle">
            The Instance handle to extend.
            </param>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="window">
            A pointer to the ANativeWindow to associate the surface with.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.InstanceExtensions.CreateDisplayPlaneSurface(SharpVk.Instance,SharpVk.Khronos.DisplayMode,System.UInt32,System.UInt32,SharpVk.Khronos.SurfaceTransformFlags,System.Single,SharpVk.Khronos.DisplayPlaneAlphaFlags,SharpVk.Extent2D,System.Nullable{SharpVk.Khronos.DisplaySurfaceCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a SurfaceKHR structure representing a display plane and
            mode.
            </summary>
            <param name="extendedHandle">
            The Instance handle to extend.
            </param>
            <param name="flags">
            Reserved for future use, and must be zero.
            </param>
            <param name="displayMode">
            The mode to use when displaying this surface.
            </param>
            <param name="planeIndex">
            The plane on which this surface appears.
            </param>
            <param name="planeStackIndex">
            The z-order of the plane.
            </param>
            <param name="transform">
            The transform to apply to the images as part of the scanout
            operation.
            </param>
            <param name="globalAlpha">
            The global alpha value. This value is ignored if alphaMode is not
            VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR.
            </param>
            <param name="alphaMode">
            The type of alpha blending to use.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.InstanceExtensions.CreateMirSurface(SharpVk.Instance,System.IntPtr,System.IntPtr,System.Nullable{SharpVk.Khronos.MirSurfaceCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a SurfaceKHR object for a Mir window.
            </summary>
            <param name="extendedHandle">
            The Instance handle to extend.
            </param>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="connection">
            connection and surface are pointers to the MirConnection and
            MirSurface for the window to associate the surface with.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.InstanceExtensions.CreateWaylandSurface(SharpVk.Instance,System.IntPtr,System.IntPtr,System.Nullable{SharpVk.Khronos.WaylandSurfaceCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a SurfaceKHR object for a Wayland window.
            </summary>
            <param name="extendedHandle">
            The Instance handle to extend.
            </param>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="display">
            display and surface are pointers to the Wayland wl_display and
            wl_surface to associate the surface with.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.InstanceExtensions.CreateWin32Surface(SharpVk.Instance,System.IntPtr,System.IntPtr,System.Nullable{SharpVk.Khronos.Win32SurfaceCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a SurfaceKHR object for an Win32 native window.
            </summary>
            <param name="extendedHandle">
            The Instance handle to extend.
            </param>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="hinstance">
            hinstance and hwnd are the Win32 HINSTANCE and HWND for the window
            to associate the surface with.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.InstanceExtensions.CreateXlibSurface(SharpVk.Instance,System.IntPtr,System.IntPtr,System.Nullable{SharpVk.Khronos.XlibSurfaceCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a SurfaceKHR object for an X11 window, using the Xlib
            client-side library.
            </summary>
            <param name="extendedHandle">
            The Instance handle to extend.
            </param>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="dpy">
            An Xlib Display connection to the X server.
            </param>
            <param name="window">
            An Xlib Window to associate the surface with.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.InstanceExtensions.CreateXcbSurface(SharpVk.Instance,System.IntPtr,System.IntPtr,System.Nullable{SharpVk.Khronos.XcbSurfaceCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a SurfaceKHR object for a X11 window, using the XCB
            client-side library.
            </summary>
            <param name="extendedHandle">
            The Instance handle to extend.
            </param>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="connection">
            An xcb_connection_t to the X server.
            </param>
            <param name="window">
            The xcb_window_t for the X11 window to associate the surface with.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.Khronos.MemoryDedicatedAllocateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.MemoryDedicatedAllocateInfo.Image">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.MemoryDedicatedAllocateInfo.Buffer">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.MemoryDedicatedAllocateInfo.MarshalTo(SharpVk.Interop.Khronos.MemoryDedicatedAllocateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.MemoryDedicatedRequirements">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.MemoryDedicatedRequirements.PrefersDedicatedAllocation">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.MemoryDedicatedRequirements.RequiresDedicatedAllocation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.MemoryDedicatedRequirements.MarshalFrom(SharpVk.Interop.Khronos.MemoryDedicatedRequirements*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.MemoryFileDescriptorProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.MemoryFileDescriptorProperties.MemoryTypeBits">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.MemoryFileDescriptorProperties.MarshalFrom(SharpVk.Interop.Khronos.MemoryFileDescriptorProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.MemoryGetFileDescriptorInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.MemoryGetFileDescriptorInfo.Memory">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.MemoryGetFileDescriptorInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.MemoryGetFileDescriptorInfo.MarshalTo(SharpVk.Interop.Khronos.MemoryGetFileDescriptorInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.MemoryGetWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.MemoryGetWin32HandleInfo.Memory">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.MemoryGetWin32HandleInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.MemoryGetWin32HandleInfo.MarshalTo(SharpVk.Interop.Khronos.MemoryGetWin32HandleInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.MemoryRequirements2">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.MemoryRequirements2.MemoryRequirements">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.MemoryRequirements2.MarshalFrom(SharpVk.Interop.Khronos.MemoryRequirements2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.MemoryWin32HandleProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.MemoryWin32HandleProperties.MemoryTypeBits">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.MemoryWin32HandleProperties.MarshalFrom(SharpVk.Interop.Khronos.MemoryWin32HandleProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.MirSurfaceCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.MirSurfaceCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.MirSurfaceCreateInfo">
            <summary>
            Structure specifying parameters of a newly created Mir surface object.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.MirSurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.MirSurfaceCreateInfo.Connection">
            <summary>
            connection and surface are pointers to the MirConnection and
            MirSurface for the window to associate the surface with.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.MirSurfaceCreateInfo.MirSurface">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.MirSurfaceCreateInfo.MarshalTo(SharpVk.Interop.Khronos.MirSurfaceCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PhysicalDevice16BitStorageFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDevice16BitStorageFeatures.StorageBuffer16BitAccess">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDevice16BitStorageFeatures.UniformAndStorageBuffer16BitAccess">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDevice16BitStorageFeatures.StoragePushConstant16">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDevice16BitStorageFeatures.StorageInputOutput16">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDevice16BitStorageFeatures.MarshalTo(SharpVk.Interop.Khronos.PhysicalDevice16BitStorageFeatures*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDevice16BitStorageFeatures.MarshalFrom(SharpVk.Interop.Khronos.PhysicalDevice16BitStorageFeatures*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PhysicalDeviceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetDisplayProperties(SharpVk.PhysicalDevice)">
            <summary>
            Query information about the available displays.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetDisplayPlaneProperties(SharpVk.PhysicalDevice)">
            <summary>
            Query the plane properties.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetDisplayPlaneSupportedDisplays(SharpVk.PhysicalDevice,System.UInt32)">
            <summary>
            Query the list of displays a plane supports.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetDisplayModeProperties(SharpVk.PhysicalDevice,SharpVk.Khronos.Display)">
            <summary>
            Query the set of mode properties supported by the display.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.CreateDisplayMode(SharpVk.PhysicalDevice,SharpVk.Khronos.Display,SharpVk.Khronos.DisplayModeParameters,System.Nullable{SharpVk.Khronos.DisplayModeCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a display mode.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
            <param name="flags">
            Reserved for future use, and must be zero.
            </param>
            <param name="parameters">
            A DisplayModeParametersKHR structure describing the display
            parameters to use in creating the new mode. If the parameters are
            not compatible with the specified display, the implementation must
            return Result.ErrorINITIALIZATION_FAILED.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetMirPresentationSupport(SharpVk.PhysicalDevice,System.UInt32,System.IntPtr)">
            <summary>
            Query physical device for presentation to Mir.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetSurfaceSupport(SharpVk.PhysicalDevice,System.UInt32,SharpVk.Khronos.Surface)">
            <summary>
            Query if presentation is supported.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetSurfaceCapabilities(SharpVk.PhysicalDevice,SharpVk.Khronos.Surface)">
            <summary>
            Query surface capabilities.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetSurfaceFormats(SharpVk.PhysicalDevice,SharpVk.Khronos.Surface)">
            <summary>
            Query color formats supported by surface.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetSurfacePresentModes(SharpVk.PhysicalDevice,SharpVk.Khronos.Surface)">
            <summary>
            Query supported presentation modes.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetWaylandPresentationSupport(SharpVk.PhysicalDevice,System.UInt32,System.IntPtr)">
            <summary>
            Query physical device for presentation to Wayland.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetWin32PresentationSupport(SharpVk.PhysicalDevice,System.UInt32)">
            <summary>
            Query queue family support for presentation on a Win32 display.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetXlibPresentationSupport(SharpVk.PhysicalDevice,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            Query physical device for presentation to X11 server using Xlib.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetXcbPresentationSupport(SharpVk.PhysicalDevice,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            Query physical device for presentation to X11 server using XCB.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetFeatures2(SharpVk.PhysicalDevice)">
            <summary>
            Reports capabilities of a physical device.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetProperties2(SharpVk.PhysicalDevice)">
            <summary>
            Returns properties of a physical device.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetFormatProperties2(SharpVk.PhysicalDevice,SharpVk.Format)">
            <summary>
            Lists physical device's format capabilities.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetImageFormatProperties2(SharpVk.PhysicalDevice,SharpVk.Khronos.PhysicalDeviceImageFormatInfo2)">
            <summary>
            Lists physical device's image format capabilities.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetQueueFamilyProperties2(SharpVk.PhysicalDevice)">
            <summary>
            Reports properties of the queues of the specified physical device.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetMemoryProperties2(SharpVk.PhysicalDevice)">
            <summary>
            Reports memory information for the specified physical device.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetSparseImageFormatProperties2(SharpVk.PhysicalDevice,SharpVk.Khronos.PhysicalDeviceSparseImageFormatInfo2)">
            <summary>
            Retrieve properties of an image format applied to sparse images.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetExternalBufferProperties(SharpVk.PhysicalDevice,SharpVk.Khronos.PhysicalDeviceExternalBufferInfo)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetExternalSemaphoreProperties(SharpVk.PhysicalDevice,SharpVk.Khronos.PhysicalDeviceExternalSemaphoreInfo)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetExternalFenceProperties(SharpVk.PhysicalDevice,SharpVk.Khronos.PhysicalDeviceExternalFenceInfo)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetSurfaceCapabilities2(SharpVk.PhysicalDevice,SharpVk.Khronos.PhysicalDeviceSurfaceInfo2)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExtensions.GetSurfaceFormats2(SharpVk.PhysicalDevice,SharpVk.Khronos.PhysicalDeviceSurfaceInfo2)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.Khronos.PhysicalDeviceExternalBufferInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceExternalBufferInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceExternalBufferInfo.Usage">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceExternalBufferInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExternalBufferInfo.MarshalTo(SharpVk.Interop.Khronos.PhysicalDeviceExternalBufferInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PhysicalDeviceExternalFenceInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceExternalFenceInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExternalFenceInfo.MarshalTo(SharpVk.Interop.Khronos.PhysicalDeviceExternalFenceInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PhysicalDeviceExternalImageFormatInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceExternalImageFormatInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExternalImageFormatInfo.MarshalTo(SharpVk.Interop.Khronos.PhysicalDeviceExternalImageFormatInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PhysicalDeviceExternalSemaphoreInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceExternalSemaphoreInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceExternalSemaphoreInfo.MarshalTo(SharpVk.Interop.Khronos.PhysicalDeviceExternalSemaphoreInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PhysicalDeviceFeatures2">
            <summary>
            Structure describing the fine-grained features that can be supported by
            an implementation.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceFeatures2.Features">
            <summary>
            A structure of type PhysicalDeviceFeatures describing the
            fine-grained features of the Vulkan 1.0 API.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceFeatures2.MarshalTo(SharpVk.Interop.Khronos.PhysicalDeviceFeatures2*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceFeatures2.MarshalFrom(SharpVk.Interop.Khronos.PhysicalDeviceFeatures2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PhysicalDeviceIDProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceIDProperties.DeviceUUID">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceIDProperties.DriverUUID">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceIDProperties.DeviceLUID">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceIDProperties.DeviceNodeMask">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceIDProperties.DeviceLUIDValid">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceIDProperties.MarshalFrom(SharpVk.Interop.Khronos.PhysicalDeviceIDProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PhysicalDeviceImageFormatInfo2">
            <summary>
            Structure specifying image creation parameters.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceImageFormatInfo2.Format">
            <summary>
            The image format, corresponding to ImageCreateInfo::format.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceImageFormatInfo2.Type">
            <summary>
            The image type, corresponding to ImageCreateInfo::imageType.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceImageFormatInfo2.Tiling">
            <summary>
            The image tiling, corresponding to ImageCreateInfo::tiling.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceImageFormatInfo2.Usage">
            <summary>
            The intended usage of the image, corresponding to
            ImageCreateInfo::usage.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceImageFormatInfo2.Flags">
            <summary>
            A bitmask describing additional parameters of the image,
            corresponding to ImageCreateInfo::flags.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceImageFormatInfo2.MarshalTo(SharpVk.Interop.Khronos.PhysicalDeviceImageFormatInfo2*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceImageFormatInfo2.MarshalFrom(SharpVk.Interop.Khronos.PhysicalDeviceImageFormatInfo2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PhysicalDeviceMemoryProperties2">
            <summary>
            Structure specifying physical device memory properties.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceMemoryProperties2.MemoryProperties">
            <summary>
            A structure of type PhysicalDeviceMemoryProperties which is
            populated with the same values as in
            flink:vkGetPhysicalDeviceMemoryProperties.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceMemoryProperties2.MarshalFrom(SharpVk.Interop.Khronos.PhysicalDeviceMemoryProperties2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PhysicalDevicePointClippingProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDevicePointClippingProperties.PointClippingBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDevicePointClippingProperties.MarshalFrom(SharpVk.Interop.Khronos.PhysicalDevicePointClippingProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PhysicalDeviceProperties2">
            <summary>
            Structure specifying physical device properties.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceProperties2.Properties">
            <summary>
            A structure of type PhysicalDeviceProperties describing the
            properties of the physical device. This structure is written with
            the same values as if it were written by
            flink:vkGetPhysicalDeviceProperties.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceProperties2.MarshalFrom(SharpVk.Interop.Khronos.PhysicalDeviceProperties2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PhysicalDevicePushDescriptorProperties">
            <summary>
            Structure describing push descriptor limits that can be supported by an
            implementation.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDevicePushDescriptorProperties.MaxPushDescriptors">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDevicePushDescriptorProperties.MarshalTo(SharpVk.Interop.Khronos.PhysicalDevicePushDescriptorProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDevicePushDescriptorProperties.MarshalFrom(SharpVk.Interop.Khronos.PhysicalDevicePushDescriptorProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PhysicalDeviceSamplerYcbcrConversionFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceSamplerYcbcrConversionFeatures.SamplerYcbcrConversion">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceSamplerYcbcrConversionFeatures.MarshalTo(SharpVk.Interop.Khronos.PhysicalDeviceSamplerYcbcrConversionFeatures*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceSamplerYcbcrConversionFeatures.MarshalFrom(SharpVk.Interop.Khronos.PhysicalDeviceSamplerYcbcrConversionFeatures*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PhysicalDeviceSparseImageFormatInfo2">
            <summary>
            Structure specifying sparse image format inputs.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceSparseImageFormatInfo2.Format">
            <summary>
            The image format.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceSparseImageFormatInfo2.Type">
            <summary>
            The dimensionality of image.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceSparseImageFormatInfo2.Samples">
            <summary>
            The number of samples per pixel as defined in SampleCountFlagBits.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceSparseImageFormatInfo2.Usage">
            <summary>
            A bitmask describing the intended usage of the image.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceSparseImageFormatInfo2.Tiling">
            <summary>
            The tiling arrangement of the data elements in memory.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceSparseImageFormatInfo2.MarshalTo(SharpVk.Interop.Khronos.PhysicalDeviceSparseImageFormatInfo2*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceSparseImageFormatInfo2.MarshalFrom(SharpVk.Interop.Khronos.PhysicalDeviceSparseImageFormatInfo2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PhysicalDeviceSurfaceInfo2">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceSurfaceInfo2.Surface">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceSurfaceInfo2.MarshalTo(SharpVk.Interop.Khronos.PhysicalDeviceSurfaceInfo2*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceSurfaceInfo2.MarshalFrom(SharpVk.Interop.Khronos.PhysicalDeviceSurfaceInfo2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PhysicalDeviceVariablePointerFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceVariablePointerFeatures.VariablePointersStorageBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PhysicalDeviceVariablePointerFeatures.VariablePointers">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceVariablePointerFeatures.MarshalTo(SharpVk.Interop.Khronos.PhysicalDeviceVariablePointerFeatures*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PhysicalDeviceVariablePointerFeatures.MarshalFrom(SharpVk.Interop.Khronos.PhysicalDeviceVariablePointerFeatures*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PipelineTessellationDomainOriginStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PipelineTessellationDomainOriginStateCreateInfo.DomainOrigin">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PipelineTessellationDomainOriginStateCreateInfo.MarshalTo(SharpVk.Interop.Khronos.PipelineTessellationDomainOriginStateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PointClippingBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.PointClippingBehavior.AllClipPlanes">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.PointClippingBehavior.UserClipPlanesOnly">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PresentInfo">
            <summary>
            Structure describing parameters of a queue presentation.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PresentInfo.WaitSemaphores">
            <summary>
            If not Null, is an array of Semaphore objects with
            waitSemaphoreCount entries, and specifies the semaphores to wait
            for before issuing the present request.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PresentInfo.Swapchains">
            <summary>
            An array of SwapchainKHR objects with swapchainCount entries. A
            given swapchain must not appear in this list more than once.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PresentInfo.ImageIndices">
            <summary>
            An array of indices into the array of each swapchain's presentable
            images, with swapchainCount entries. Each entry in this array
            identifies the image to present on the corresponding entry in the
            pSwapchains array.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PresentInfo.Results">
            <summary>
            An array of Result typed elements with swapchainCount entries.
            Applications that do not need per-swapchain results can use Null
            for pResults. If non-Null, each entry in pResults will be set to
            the Result for presenting the swapchain corresponding to the same
            index in pSwapchains.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PresentInfo.MarshalTo(SharpVk.Interop.Khronos.PresentInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PresentMode">
            <summary>
            Presentation mode supported for a surface.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.PresentMode.Immediate">
            <summary>
            The presentation engine does not wait for a vertical blanking
            period to update the current image, meaning this mode may result in
            visible tearing. No internal queuing of presentation requests is
            needed, as the requests are applied immediately.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.PresentMode.Mailbox">
            <summary>
            The presentation engine waits for the next vertical blanking period
            to update the current image. Tearing cannot: be observed. An
            internal single-entry queue is used to hold pending presentation
            requests. If the queue is full when a new presentation request is
            received, the new request replaces the existing entry, and any
            images associated with the prior entry become available for re-use
            by the application. One request is removed from the queue and
            processed during each vertical blanking period in which the queue
            is non-empty.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.PresentMode.Fifo">
            <summary>
            The presentation engine waits for the next vertical blanking period
            to update the current image. Tearing cannot: be observed. An
            internal queue is used to hold pending presentation requests. New
            requests are appended to the end of the queue, and one request is
            removed from the beginning of the queue and processed during each
            vertical blanking period in which the queue is non-empty. This is
            the only value of presentMode that is required: to be supported.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.PresentMode.FifoRelaxed">
            <summary>
            The presentation engine generally waits for the next vertical
            blanking period to update the current image. If a vertical blanking
            period has already passed since the last update of the current
            image then the presentation engine does not wait for another
            vertical blanking period for the update, meaning this mode may
            result in visible tearing in this case. This mode is useful for
            reducing visual stutter with an application that will mostly
            present a new image before the next vertical blanking period, but
            may occasionally be late, and present a new image just after the
            next vertical blanking period. An internal queue is used to hold
            pending presentation requests. New requests are appended to the end
            of the queue, and one request is removed from the beginning of the
            queue and processed during or after each vertical blanking period
            in which the queue is non-empty.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.PresentMode.SharedDemandRefreshKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.PresentMode.SharedContinuousRefreshKhr">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PresentRegion">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PresentRegion.Rectangles">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PresentRegion.MarshalTo(SharpVk.Interop.Khronos.PresentRegion*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.PresentRegions">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.PresentRegions.Regions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.PresentRegions.MarshalTo(SharpVk.Interop.Khronos.PresentRegions*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.QueueExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.QueueExtensions.Present(SharpVk.Queue,System.Nullable{SharpVk.ArrayProxy{SharpVk.Semaphore}},System.Nullable{SharpVk.ArrayProxy{SharpVk.Khronos.Swapchain}},System.Nullable{SharpVk.ArrayProxy{System.UInt32}},System.Nullable{SharpVk.ArrayProxy{SharpVk.Result}})">
            <summary>
            Queue an image for presentation.
            </summary>
            <param name="extendedHandle">
            The Queue handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.Khronos.QueueFamilyProperties2">
            <summary>
            Structure providing information about a queue family.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.QueueFamilyProperties2.QueueFamilyProperties">
            <summary>
            A structure of type QueueFamilyProperties which is populated with
            the same values as in
            flink:vkGetPhysicalDeviceQueueFamilyProperties.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.QueueFamilyProperties2.MarshalFrom(SharpVk.Interop.Khronos.QueueFamilyProperties2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.RectLayer">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.RectLayer.#ctor(SharpVk.Offset2D,SharpVk.Extent2D,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.RectLayer.Offset">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.RectLayer.Extent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.RectLayer.Layer">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.RenderPassInputAttachmentAspectCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.RenderPassInputAttachmentAspectCreateInfo.AspectReferences">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.RenderPassInputAttachmentAspectCreateInfo.MarshalTo(SharpVk.Interop.Khronos.RenderPassInputAttachmentAspectCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SamplerYcbcrConversion">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SamplerYcbcrConversion.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.SamplerYcbcrConversion.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SamplerYcbcrConversionCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SamplerYcbcrConversionCreateInfo.Format">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SamplerYcbcrConversionCreateInfo.YcbcrModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SamplerYcbcrConversionCreateInfo.YcbcrRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SamplerYcbcrConversionCreateInfo.Components">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SamplerYcbcrConversionCreateInfo.XChromaOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SamplerYcbcrConversionCreateInfo.YChromaOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SamplerYcbcrConversionCreateInfo.ChromaFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SamplerYcbcrConversionCreateInfo.ForceExplicitReconstruction">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.SamplerYcbcrConversionCreateInfo.MarshalTo(SharpVk.Interop.Khronos.SamplerYcbcrConversionCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SamplerYcbcrConversionImageFormatProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SamplerYcbcrConversionImageFormatProperties.CombinedImageSamplerDescriptorCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.SamplerYcbcrConversionImageFormatProperties.MarshalFrom(SharpVk.Interop.Khronos.SamplerYcbcrConversionImageFormatProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SamplerYcbcrConversionInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SamplerYcbcrConversionInfo.Conversion">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.SamplerYcbcrConversionInfo.MarshalTo(SharpVk.Interop.Khronos.SamplerYcbcrConversionInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SamplerYcbcrModelConversion">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SamplerYcbcrModelConversion.RgbIdentity">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SamplerYcbcrModelConversion.YcbcrIdentity">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SamplerYcbcrModelConversion.Ycbcr709">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SamplerYcbcrModelConversion.Ycbcr601">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SamplerYcbcrModelConversion.Ycbcr2020">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SamplerYcbcrRange">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SamplerYcbcrRange.ItuFull">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SamplerYcbcrRange.ItuNarrow">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SemaphoreGetFileDescriptorInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SemaphoreGetFileDescriptorInfo.Semaphore">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SemaphoreGetFileDescriptorInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.SemaphoreGetFileDescriptorInfo.MarshalTo(SharpVk.Interop.Khronos.SemaphoreGetFileDescriptorInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SemaphoreGetWin32HandleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SemaphoreGetWin32HandleInfo.Semaphore">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SemaphoreGetWin32HandleInfo.HandleType">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.SemaphoreGetWin32HandleInfo.MarshalTo(SharpVk.Interop.Khronos.SemaphoreGetWin32HandleInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SemaphoreImportFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SemaphoreImportFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SemaphoreImportFlags.Temporary">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SharedPresentSurfaceCapabilities">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SharedPresentSurfaceCapabilities.SharedPresentSupportedUsageFlags">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.SharedPresentSurfaceCapabilities.MarshalFrom(SharpVk.Interop.Khronos.SharedPresentSurfaceCapabilities*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SparseImageFormatProperties2">
            <summary>
            Structure specifying sparse image format properties.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SparseImageFormatProperties2.Properties">
            <summary>
            A structure of type SparseImageFormatProperties which is populated
            with the same values as in
            flink:vkGetPhysicalDeviceSparseImageFormatProperties.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.SparseImageFormatProperties2.MarshalFrom(SharpVk.Interop.Khronos.SparseImageFormatProperties2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SparseImageMemoryRequirements2">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SparseImageMemoryRequirements2.MemoryRequirements">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.SparseImageMemoryRequirements2.MarshalFrom(SharpVk.Interop.Khronos.SparseImageMemoryRequirements2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Surface">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Surface.CreateFromHandle(SharpVk.Instance,System.UInt64)">
            <summary>
            Create a new Surface instance from an externally created handle.
            </summary>
            <param name="instance">
            The Vulkan Instance against which the handle was created.
            </param>
            <param name="handle">
            An unsigned 64-bit integer representing the created Surface.
            </param>
            <returns>
            A Surface instance.
            </returns>
        </member>
        <member name="P:SharpVk.Khronos.Surface.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Surface.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a SurfaceKHR object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.Khronos.SurfaceCapabilities">
            <summary>
            Structure describing capabilities of a surface.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.SurfaceCapabilities.#ctor(System.UInt32,System.UInt32,SharpVk.Extent2D,SharpVk.Extent2D,SharpVk.Extent2D,System.UInt32,SharpVk.Khronos.SurfaceTransformFlags,SharpVk.Khronos.SurfaceTransformFlags,SharpVk.Khronos.CompositeAlphaFlags,SharpVk.ImageUsageFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceCapabilities.MinImageCount">
            <summary>
            The minimum number of images the specified device supports for a
            swapchain created for the surface, and will be at least one.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceCapabilities.MaxImageCount">
            <summary>
            The maximum number of images the specified device supports for a
            swapchain created for the surface, and will be either 0, or greater
            than or equal to minImageCount. A value of 0 means that there is no
            limit on the number of images, though there may be limits related
            to the total amount of memory used by presentable images.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceCapabilities.CurrentExtent">
            <summary>
            The current width and height of the surface, or the special value
            [eq]#(0xFFFFFFFF, 0xFFFFFFFF)# indicating that the surface size
            will be determined by the extent of a swapchain targeting the
            surface.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceCapabilities.MinImageExtent">
            <summary>
            minImageExtent contains the smallest valid swapchain extent for the
            surface on the specified device. The width and height of the extent
            will each be less than or equal to the corresponding width and
            height of currentExtent, unless currentExtent has the special value
            described above.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceCapabilities.MaxImageExtent">
            <summary>
            maxImageExtent contains the largest valid swapchain extent for the
            surface on the specified device. The width and height of the extent
            will each be greater than or equal to the corresponding width and
            height of minImageExtent. The width and height of the extent will
            each be greater than or equal to the corresponding width and height
            of currentExtent, unless currentExtent has the special value
            described above.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceCapabilities.MaxImageArrayLayers">
            <summary>
            The maximum number of layers presentable images can have for a
            swapchain created for this device and surface, and will be at least
            one.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceCapabilities.SupportedTransforms">
            <summary>
            A bitmask of SurfaceTransformFlagBitsKHR, describing the
            presentation transforms supported for the surface on the specified
            device, and at least one bit will be set.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceCapabilities.CurrentTransform">
            <summary>
            The surface's current transform relative to the presentation
            engine's natural orientation, as described by
            SurfaceTransformFlagBitsKHR.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceCapabilities.SupportedCompositeAlpha">
            <summary>
            A bitmask of CompositeAlphaFlagBitsKHR, representing the alpha
            compositing modes supported by the presentation engine for the
            surface on the specified device, and at least one bit will be set.
            Opaque composition can be achieved in any alpha compositing mode by
            either using an image format that has no alpha component, or by
            ensuring that all pixels in the presentable images have an alpha
            value of 1.0.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceCapabilities.SupportedUsageFlags">
            <summary>
            A bitmask of ImageUsageFlagBits representing the ways the
            application can use the presentable images of a swapchain created
            for the surface on the specified device.
            VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT must be included in the set but
            implementations may support additional usages.
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SurfaceCapabilities2">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SurfaceCapabilities2.SurfaceCapabilities">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.SurfaceCapabilities2.MarshalFrom(SharpVk.Interop.Khronos.SurfaceCapabilities2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SurfaceFormat">
            <summary>
            Structure describing a supported swapchain format-color space pair.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.SurfaceFormat.#ctor(SharpVk.Format,SharpVk.Khronos.ColorSpace)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceFormat.Format">
            <summary>
            A Format that is compatible with the specified surface.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceFormat.ColorSpace">
            <summary>
            A presentation ColorSpaceKHR that is compatible with the surface.
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SurfaceFormat2">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SurfaceFormat2.SurfaceFormat">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.SurfaceFormat2.MarshalFrom(SharpVk.Interop.Khronos.SurfaceFormat2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SurfaceTransformFlags">
            <summary>
            Presentation transforms supported on a device.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceTransformFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceTransformFlags.Identity">
            <summary>
            The image content is presented without being transformed.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceTransformFlags.Rotate90">
            <summary>
            The image content is rotated 90 degrees clockwise.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceTransformFlags.Rotate180">
            <summary>
            The image content is rotated 180 degrees clockwise.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceTransformFlags.Rotate270">
            <summary>
            The image content is rotated 270 degrees clockwise.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceTransformFlags.HorizontalMirror">
            <summary>
            The image content is mirrored horizontally.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceTransformFlags.HorizontalMirrorRotate90">
            <summary>
            The image content is mirrored horizontally, then rotated 90 degrees
            clockwise.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceTransformFlags.HorizontalMirrorRotate180">
            <summary>
            The image content is mirrored horizontally, then rotated 180
            degrees clockwise.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceTransformFlags.HorizontalMirrorRotate270">
            <summary>
            The image content is mirrored horizontally, then rotated 270
            degrees clockwise.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SurfaceTransformFlags.Inherit">
            <summary>
            The presentation transform is not specified, and is instead
            determined by platform-specific considerations and mechanisms
            outside Vulkan.
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Swapchain">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Swapchain.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Swapchain.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a swapchain object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.Swapchain.GetImages">
            <summary>
            Obtain the array of presentable images associated with a swapchain.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Swapchain.AcquireNextImage(System.UInt64,SharpVk.Semaphore,SharpVk.Fence)">
            <summary>
            Retrieve the index of the next available presentable image.
            </summary>
            <param name="timeout">
            Indicates how long the function waits, in nanoseconds, if no image
            is available.
            </param>
            <param name="semaphore">
            Null or a semaphore to signal.
            </param>
            <param name="fence">
            Null or a fence to signal.
            </param>
        </member>
        <member name="M:SharpVk.Khronos.Swapchain.GetStatus">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SwapchainCreateFlags">
            <summary>
            Bitmask controlling swapchain creation.
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SwapchainCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.SwapchainCreateFlags.BindSfrBitKhx">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.SwapchainCreateInfo">
            <summary>
            Structure specifying parameters of a newly created swapchain object.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SwapchainCreateInfo.Flags">
            <summary>
            A bitmask indicating parameters of swapchain creation. Bits which
            can be set include: + --
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SwapchainCreateInfo.Surface">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SwapchainCreateInfo.MinImageCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SwapchainCreateInfo.ImageFormat">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SwapchainCreateInfo.ImageColorSpace">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SwapchainCreateInfo.ImageExtent">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SwapchainCreateInfo.ImageArrayLayers">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SwapchainCreateInfo.ImageUsage">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SwapchainCreateInfo.ImageSharingMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SwapchainCreateInfo.QueueFamilyIndices">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SwapchainCreateInfo.PreTransform">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SwapchainCreateInfo.CompositeAlpha">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SwapchainCreateInfo.PresentMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SwapchainCreateInfo.Clipped">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.SwapchainCreateInfo.OldSwapchain">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.SwapchainCreateInfo.MarshalTo(SharpVk.Interop.Khronos.SwapchainCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.TessellationDomainOrigin">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.TessellationDomainOrigin.UpperLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.TessellationDomainOrigin.LowerLeft">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.WaylandSurfaceCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.WaylandSurfaceCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.WaylandSurfaceCreateInfo">
            <summary>
            Structure specifying parameters of a newly created Wayland surface
            object.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.WaylandSurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.WaylandSurfaceCreateInfo.Display">
            <summary>
            display and surface are pointers to the Wayland wl_display and
            wl_surface to associate the surface with.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.WaylandSurfaceCreateInfo.Surface">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.WaylandSurfaceCreateInfo.MarshalTo(SharpVk.Interop.Khronos.WaylandSurfaceCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Win32KeyedMutexAcquireReleaseInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Win32KeyedMutexAcquireReleaseInfo.AcquireSyncs">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Win32KeyedMutexAcquireReleaseInfo.AcquireKeys">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Win32KeyedMutexAcquireReleaseInfo.AcquireTimeouts">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Win32KeyedMutexAcquireReleaseInfo.ReleaseSyncs">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Win32KeyedMutexAcquireReleaseInfo.ReleaseKeys">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Win32KeyedMutexAcquireReleaseInfo.MarshalTo(SharpVk.Interop.Khronos.Win32KeyedMutexAcquireReleaseInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Win32SurfaceCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.Win32SurfaceCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.Win32SurfaceCreateInfo">
            <summary>
            Structure specifying parameters of a newly created Win32 surface
            object.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Win32SurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Win32SurfaceCreateInfo.Hinstance">
            <summary>
            hinstance and hwnd are the Win32 HINSTANCE and HWND for the window
            to associate the surface with.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.Win32SurfaceCreateInfo.Hwnd">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.Win32SurfaceCreateInfo.MarshalTo(SharpVk.Interop.Khronos.Win32SurfaceCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.XcbSurfaceCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.XcbSurfaceCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.XcbSurfaceCreateInfo">
            <summary>
            Structure specifying parameters of a newly created Xcb surface object.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.XcbSurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.XcbSurfaceCreateInfo.Connection">
            <summary>
            An xcb_connection_t to the X server.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.XcbSurfaceCreateInfo.Window">
            <summary>
            The xcb_window_t for the X11 window to associate the surface with.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.XcbSurfaceCreateInfo.MarshalTo(SharpVk.Interop.Khronos.XcbSurfaceCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.XlibSurfaceCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Khronos.XlibSurfaceCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Khronos.XlibSurfaceCreateInfo">
            <summary>
            Structure specifying parameters of a newly created Xlib surface object.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.XlibSurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.XlibSurfaceCreateInfo.Dpy">
            <summary>
            An Xlib Display connection to the X server.
            </summary>
        </member>
        <member name="P:SharpVk.Khronos.XlibSurfaceCreateInfo.Window">
            <summary>
            An Xlib Window to associate the surface with.
            </summary>
        </member>
        <member name="M:SharpVk.Khronos.XlibSurfaceCreateInfo.MarshalTo(SharpVk.Interop.Khronos.XlibSurfaceCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.LayerProperties">
            <summary>
            Structure specifying layer properties.
            </summary>
        </member>
        <member name="P:SharpVk.LayerProperties.LayerName">
            <summary>
            A string specifying the name of the layer. Use this name in the
            ppEnabledLayerNames array passed in the InstanceCreateInfo
            structure to enable this layer for an instance.
            </summary>
        </member>
        <member name="P:SharpVk.LayerProperties.SpecVersion">
            <summary>
            The Vulkan version the layer was written to, encoded as described
            in the API Version Numbers and Semantics section.
            </summary>
        </member>
        <member name="P:SharpVk.LayerProperties.ImplementationVersion">
            <summary>
            The version of this layer. It is an integer, increasing with
            backward compatible changes.
            </summary>
        </member>
        <member name="P:SharpVk.LayerProperties.Description">
            <summary>
            A string providing additional details that can be used by the
            application to identify the layer.
            </summary>
        </member>
        <member name="M:SharpVk.LayerProperties.MarshalFrom(SharpVk.Interop.LayerProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.LogicOp">
            <summary>
            Framebuffer logical operations.
            </summary>
        </member>
        <member name="F:SharpVk.LogicOp.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.LogicOp.And">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.LogicOp.AndReverse">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.LogicOp.Copy">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.LogicOp.AndInverted">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.LogicOp.NoOp">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.LogicOp.Xor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.LogicOp.Or">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.LogicOp.Nor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.LogicOp.Equivalent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.LogicOp.Invert">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.LogicOp.OrReverse">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.LogicOp.CopyInverted">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.LogicOp.OrInverted">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.LogicOp.Nand">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.LogicOp.Set">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.MappedMemoryRange">
            <summary>
            Structure specifying a mapped memory range.
            </summary>
        </member>
        <member name="P:SharpVk.MappedMemoryRange.Memory">
            <summary>
            The memory object to which this range belongs.
            </summary>
        </member>
        <member name="P:SharpVk.MappedMemoryRange.Offset">
            <summary>
            The zero-based byte offset from the beginning of the memory object.
            </summary>
        </member>
        <member name="P:SharpVk.MappedMemoryRange.Size">
            <summary>
            size is either the size of range, or VK_WHOLE_SIZE to affect the
            range from offset to the end of the current mapping of the
            allocation.
            </summary>
        </member>
        <member name="M:SharpVk.MappedMemoryRange.MarshalTo(SharpVk.Interop.MappedMemoryRange*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.MappedMemoryRange.MarshalFrom(SharpVk.Interop.MappedMemoryRange*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.MemoryAllocateInfo">
            <summary>
            Structure containing parameters of a memory allocation.
            </summary>
        </member>
        <member name="P:SharpVk.MemoryAllocateInfo.AllocationSize">
            <summary>
            The size of the allocation in bytes
            </summary>
        </member>
        <member name="P:SharpVk.MemoryAllocateInfo.MemoryTypeIndex">
            <summary>
            The memory type index, which selects the properties of the memory
            to be allocated, as well as the heap the memory will come from.
            </summary>
        </member>
        <member name="M:SharpVk.MemoryAllocateInfo.MarshalTo(SharpVk.Interop.MemoryAllocateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.MemoryBarrier">
            <summary>
            Structure specifying a global memory barrier.
            </summary>
        </member>
        <member name="P:SharpVk.MemoryBarrier.SourceAccessMask">
            <summary>
            srcAccessMask defines a source access mask.
            </summary>
        </member>
        <member name="P:SharpVk.MemoryBarrier.DestinationAccessMask">
            <summary>
            dstAccessMask defines a destination access mask.
            </summary>
        </member>
        <member name="M:SharpVk.MemoryBarrier.MarshalTo(SharpVk.Interop.MemoryBarrier*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.MemoryBarrier.MarshalFrom(SharpVk.Interop.MemoryBarrier*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.MemoryHeap">
            <summary>
            Structure specifying a memory heap.
            </summary>
        </member>
        <member name="M:SharpVk.MemoryHeap.#ctor(SharpVk.DeviceSize,SharpVk.MemoryHeapFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.MemoryHeap.Size">
            <summary>
            The total memory size in bytes in the heap.
            </summary>
        </member>
        <member name="F:SharpVk.MemoryHeap.Flags">
            <summary>
            A bitmask of attribute flags for the heap. The bits specified in
            flags are: + --
            </summary>
        </member>
        <member name="T:SharpVk.MemoryHeapFlags">
            <summary>
            Bitmask specifying attribute flags for a heap.
            </summary>
        </member>
        <member name="F:SharpVk.MemoryHeapFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.MemoryHeapFlags.DeviceLocal">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.MemoryHeapFlags.MultiInstanceBitKhx">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.MemoryMapFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.MemoryMapFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.MemoryPropertyFlags">
            <summary>
            Bitmask specifying properties for a memory type.
            </summary>
        </member>
        <member name="F:SharpVk.MemoryPropertyFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.MemoryPropertyFlags.DeviceLocal">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.MemoryPropertyFlags.HostVisible">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.MemoryPropertyFlags.HostCoherent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.MemoryPropertyFlags.HostCached">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.MemoryPropertyFlags.LazilyAllocated">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.MemoryRequirements">
            <summary>
            Structure specifying memory requirements.
            </summary>
        </member>
        <member name="M:SharpVk.MemoryRequirements.#ctor(SharpVk.DeviceSize,SharpVk.DeviceSize,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.MemoryRequirements.Size">
            <summary>
            The size, in bytes, of the memory allocation required: for the
            resource.
            </summary>
        </member>
        <member name="F:SharpVk.MemoryRequirements.Alignment">
            <summary>
            The alignment, in bytes, of the offset within the allocation
            required: for the resource.
            </summary>
        </member>
        <member name="F:SharpVk.MemoryRequirements.MemoryTypeBits">
            <summary>
            A bitmask and contains one bit set for every supported memory type
            for the resource. Bit `i` is set if and only if the memory type `i`
            in the PhysicalDeviceMemoryProperties structure for the physical
            device is supported for the resource.
            </summary>
        </member>
        <member name="T:SharpVk.MemoryType">
            <summary>
            Structure specifying memory type.
            </summary>
        </member>
        <member name="M:SharpVk.MemoryType.#ctor(SharpVk.MemoryPropertyFlags,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.MemoryType.PropertyFlags">
            <summary>
            A bitmask of properties for this memory type. The bits specified in
            propertyFlags are: + --
            </summary>
        </member>
        <member name="F:SharpVk.MemoryType.HeapIndex">
            <summary>
            heapIndex describes which memory heap this memory type corresponds
            to, and must be less than memoryHeapCount from the
            PhysicalDeviceMemoryProperties structure.
            </summary>
        </member>
        <member name="T:SharpVk.MoltenVk.InstanceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.MoltenVk.InstanceExtensions.CreateIOSSurface(SharpVk.Instance,System.IntPtr,System.Nullable{SharpVk.MoltenVk.IOSSurfaceCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a SurfaceKHR object for an iOS UIView.
            </summary>
            <param name="extendedHandle">
            The Instance handle to extend.
            </param>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="view">
            A reference to a UIView object which will display this surface.
            This UIView must be backed by a CALayer instance of type
            CAMetalLayer.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.MoltenVk.InstanceExtensions.CreateMacOSSurface(SharpVk.Instance,System.IntPtr,System.Nullable{SharpVk.MoltenVk.MacOSSurfaceCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a SurfaceKHR object for a macOS NSView.
            </summary>
            <param name="extendedHandle">
            The Instance handle to extend.
            </param>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="view">
            A reference to a NSView object which will display this surface.
            This NSView must be backed by a CALayer instance of type
            CAMetalLayer.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.MoltenVk.IOSSurfaceCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.MoltenVk.IOSSurfaceCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.MoltenVk.IOSSurfaceCreateInfo">
            <summary>
            Structure specifying parameters of a newly created iOS surface object.
            </summary>
        </member>
        <member name="P:SharpVk.MoltenVk.IOSSurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.MoltenVk.IOSSurfaceCreateInfo.View">
            <summary>
            A reference to a UIView object which will display this surface.
            This UIView must be backed by a CALayer instance of type
            CAMetalLayer.
            </summary>
        </member>
        <member name="M:SharpVk.MoltenVk.IOSSurfaceCreateInfo.MarshalTo(SharpVk.Interop.MoltenVk.IOSSurfaceCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.MoltenVk.MacOSSurfaceCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.MoltenVk.MacOSSurfaceCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.MoltenVk.MacOSSurfaceCreateInfo">
            <summary>
            Structure specifying parameters of a newly created macOS surface
            object.
            </summary>
        </member>
        <member name="P:SharpVk.MoltenVk.MacOSSurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.MoltenVk.MacOSSurfaceCreateInfo.View">
            <summary>
            A reference to a NSView object which will display this surface.
            This NSView must be backed by a CALayer instance of type
            CAMetalLayer.
            </summary>
        </member>
        <member name="M:SharpVk.MoltenVk.MacOSSurfaceCreateInfo.MarshalTo(SharpVk.Interop.MoltenVk.MacOSSurfaceCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.AttachmentSampleLocations">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.AttachmentSampleLocations.AttachmentIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.AttachmentSampleLocations.SampleLocationsInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.AttachmentSampleLocations.MarshalTo(SharpVk.Interop.Multivendor.AttachmentSampleLocations*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.BlendOverlap">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.BlendOverlap.Uncorrelated">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.BlendOverlap.Disjoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.BlendOverlap.Conjoint">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.CommandBufferExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.CommandBufferExtensions.DebugMarkerBegin(SharpVk.CommandBuffer,SharpVk.Multivendor.DebugMarkerMarkerInfo)">
            <summary>
            Open a command buffer marker region.
            </summary>
            <param name="extendedHandle">
            The CommandBuffer handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Multivendor.CommandBufferExtensions.DebugMarkerEnd(SharpVk.CommandBuffer)">
            <summary>
            Close a command buffer marker region.
            </summary>
            <param name="extendedHandle">
            The CommandBuffer handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Multivendor.CommandBufferExtensions.DebugMarkerInsert(SharpVk.CommandBuffer,SharpVk.Multivendor.DebugMarkerMarkerInfo)">
            <summary>
            Insert a marker label into a command buffer.
            </summary>
            <param name="extendedHandle">
            The CommandBuffer handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Multivendor.CommandBufferExtensions.SetDiscardRectangle(SharpVk.CommandBuffer,System.UInt32,System.Nullable{SharpVk.ArrayProxy{SharpVk.Rect2D}})">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The CommandBuffer handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Multivendor.CommandBufferExtensions.SetSampleLocations(SharpVk.CommandBuffer,SharpVk.Multivendor.SampleLocationsInfo)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The CommandBuffer handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.Multivendor.DebugMarkerMarkerInfo">
            <summary>
            Specify parameters of a command buffer marker region.
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.DebugMarkerMarkerInfo.MarkerName">
            <summary>
            A string that contains the name of the marker.
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.DebugMarkerMarkerInfo.Color">
            <summary>
            An optional RGBA color value that can be associated with the
            marker. A particular implementation may choose to ignore this color
            value. The values contain RGBA values in order, in the range 0.0 to
            1.0. If all elements in color are set to 0.0 then it is ignored.
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.DebugMarkerMarkerInfo.MarshalTo(SharpVk.Interop.Multivendor.DebugMarkerMarkerInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.DebugMarkerObjectNameInfo">
            <summary>
            Specify parameters of a name to give to an object.
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.DebugMarkerObjectNameInfo.ObjectType">
            <summary>
            A DebugReportObjectTypeEXT specifying the type of the object to be
            named.
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.DebugMarkerObjectNameInfo.Object">
            <summary>
            The object to be named.
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.DebugMarkerObjectNameInfo.ObjectName">
            <summary>
            A string specifying the name to apply to object.
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.DebugMarkerObjectNameInfo.MarshalTo(SharpVk.Interop.Multivendor.DebugMarkerObjectNameInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.DebugMarkerObjectTagInfo">
            <summary>
            Specify parameters of a tag to attach to an object.
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.DebugMarkerObjectTagInfo.ObjectType">
            <summary>
            A DebugReportObjectTypeEXT specifying the type of the object to be
            named.
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.DebugMarkerObjectTagInfo.Object">
            <summary>
            The object to be tagged.
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.DebugMarkerObjectTagInfo.TagName">
            <summary>
            A numerical identifier of the tag.
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.DebugMarkerObjectTagInfo.Tag">
            <summary>
            An array of tagSize bytes containing the data to be associated with
            the object.
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.DebugMarkerObjectTagInfo.MarshalTo(SharpVk.Interop.Multivendor.DebugMarkerObjectTagInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.DebugReportCallback">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.DebugReportCallback.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.DebugReportCallback.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a debug report callback object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.Multivendor.DebugReportCallbackCreateInfo">
            <summary>
            Structure specifying parameters of a newly created debug report
            callback.
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.DebugReportCallbackCreateInfo.Flags">
            <summary>
            flags indicate which event(s) will cause this callback to be
            called. Flags are interpreted as bitmasks and multiple may be set.
            Bits which can be set include: + --
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.DebugReportCallbackCreateInfo.Callback">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.DebugReportCallbackCreateInfo.UserData">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.DebugReportCallbackCreateInfo.MarshalTo(SharpVk.Interop.Multivendor.DebugReportCallbackCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.DebugReportCallbackDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.DebugReportFlags">
            <summary>
            Bitmask specifying events which cause a debug report callback.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportFlags.Information">
            <summary>
            Indicates an informational message such as resource details that
            may be handy when debugging an application.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportFlags.Warning">
            <summary>
            Indicates use of Vulkan that may expose an app bug. Such cases may
            not be immediately harmful, such as a fragment shader outputting to
            a location with no attachment. Other cases may point to behavior
            that is almost certainly bad when unintended such as using an image
            whose memory has not been filled. In general if you see a warning
            but you know that the behavior is intended/desired, then simply
            ignore the warning.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportFlags.PerformanceWarning">
            <summary>
            Indicates a potentially non-optimal use of Vulkan. E.g. using
            flink:vkCmdClearColorImage when a RenderPass load_op would have
            worked.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportFlags.Error">
            <summary>
            Indicates an error that may cause undefined results, including an
            application crash.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportFlags.Debug">
            <summary>
            Indicates diagnostic information from the loader and layers. -- +
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.DebugReportObjectType">
            <summary>
            Specify the type of an object handle.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.Unknown">
            <summary>
            An unknown object.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.Instance">
            <summary>
            A Instance.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.PhysicalDevice">
            <summary>
            A PhysicalDevice.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.Device">
            <summary>
            A Device.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.Queue">
            <summary>
            A Queue.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.Semaphore">
            <summary>
            A Semaphore.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.CommandBuffer">
            <summary>
            A CommandBuffer.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.Fence">
            <summary>
            A Fence.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.DeviceMemory">
            <summary>
            A DeviceMemory.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.Buffer">
            <summary>
            A Buffer.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.Image">
            <summary>
            A Image.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.Event">
            <summary>
            A Event.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.QueryPool">
            <summary>
            A QueryPool.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.BufferView">
            <summary>
            A BufferView.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.ImageView">
            <summary>
            A ImageView.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.ShaderModule">
            <summary>
            A ShaderModule.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.PipelineCache">
            <summary>
            A PipelineCache.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.PipelineLayout">
            <summary>
            A PipelineLayout.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.RenderPass">
            <summary>
            A RenderPass.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.Pipeline">
            <summary>
            A Pipeline.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.DescriptorSetLayout">
            <summary>
            A DescriptorSetLayout.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.Sampler">
            <summary>
            A Sampler.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.DescriptorPool">
            <summary>
            A DescriptorPool.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.DescriptorSet">
            <summary>
            A DescriptorSet.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.Framebuffer">
            <summary>
            A Framebuffer.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.CommandPool">
            <summary>
            A CommandPool.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.SurfaceKhr">
            <summary>
            A SurfaceKHR.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.SwapchainKhr">
            <summary>
            A SwapchainKHR.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.DebugReportCallbackExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.DisplayKhr">
            <summary>
            A DisplayKHR.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.DisplayModeKhr">
            <summary>
            A DisplayModeKHR.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.ObjectTableNvx">
            <summary>
            A ObjectTableNVX.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.IndirectCommandsLayoutNvx">
            <summary>
            A IndirectCommandsLayoutNVX.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.ValidationCache">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.DescriptorUpdateTemplateKhrKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DebugReportObjectType.SamplerYcbcrConversionKhrKhr">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.DeviceEventInfo">
            <summary>
            Describe a device event to create.
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.DeviceEventInfo.DeviceEvent">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.DeviceEventInfo.MarshalTo(SharpVk.Interop.Multivendor.DeviceEventInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.DeviceEventType">
            <summary>
            Events that can occur on a device object.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DeviceEventType.DisplayHotplug">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.DeviceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.DeviceExtensions.DebugMarkerSetObjectName(SharpVk.Device,SharpVk.Multivendor.DebugMarkerObjectNameInfo)">
            <summary>
            Give a user-friendly name to an object.
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Multivendor.DeviceExtensions.DebugMarkerSetObjectTag(SharpVk.Device,SharpVk.Multivendor.DebugMarkerObjectTagInfo)">
            <summary>
            Attach arbitrary data to an object.
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Multivendor.DeviceExtensions.DisplayPowerControl(SharpVk.Device,SharpVk.Khronos.Display,SharpVk.Multivendor.DisplayPowerInfo)">
            <summary>
            Set the power state of a display.
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Multivendor.DeviceExtensions.RegisterEvent(SharpVk.Device,SharpVk.Multivendor.DeviceEventInfo,System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Signal a fence when a device event occurs.
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Multivendor.DeviceExtensions.RegisterDisplayEvent(SharpVk.Device,SharpVk.Khronos.Display,SharpVk.Multivendor.DisplayEventInfo,System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Signal a fence when a display event occurs.
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Multivendor.DeviceExtensions.SetHdrMetadata(SharpVk.Device,System.Nullable{SharpVk.ArrayProxy{SharpVk.Khronos.Swapchain}},System.Nullable{SharpVk.ArrayProxy{SharpVk.Multivendor.HdrMetadata}})">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Multivendor.DeviceExtensions.CreateValidationCache(SharpVk.Device,System.Nullable{SharpVk.ArrayProxy{System.Byte}},System.Nullable{SharpVk.Multivendor.ValidationCacheCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.Multivendor.DiscardRectangleMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DiscardRectangleMode.Inclusive">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DiscardRectangleMode.Exclusive">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.DisplayEventInfo">
            <summary>
            Describe a display event to create.
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.DisplayEventInfo.DisplayEvent">
            <summary>
            Specifies when the fence will be signaled. Possible values are: +
            --
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.DisplayEventInfo.MarshalTo(SharpVk.Interop.Multivendor.DisplayEventInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.DisplayEventType">
            <summary>
            Events that can occur on a display object.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DisplayEventType.FirstPixelOut">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.DisplayPowerInfo">
            <summary>
            Describe the power state of a display.
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.DisplayPowerInfo.PowerState">
            <summary>
            The new power state of the display. Possible values are: + --
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.DisplayPowerInfo.MarshalTo(SharpVk.Interop.Multivendor.DisplayPowerInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.DisplayPowerState">
            <summary>
            Possible power states for a Display.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DisplayPowerState.Off">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DisplayPowerState.Suspend">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.DisplayPowerState.On">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.HdrMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.HdrMetadata.DisplayPrimaryRed">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.HdrMetadata.DisplayPrimaryGreen">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.HdrMetadata.DisplayPrimaryBlue">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.HdrMetadata.WhitePoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.HdrMetadata.MaxLuminance">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.HdrMetadata.MinLuminance">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.HdrMetadata.MaxContentLightLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.HdrMetadata.MaxFrameAverageLightLevel">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.HdrMetadata.MarshalTo(SharpVk.Interop.Multivendor.HdrMetadata*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.HdrMetadata.MarshalFrom(SharpVk.Interop.Multivendor.HdrMetadata*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.InstanceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.InstanceExtensions.CreateDebugReportCallback(SharpVk.Instance,SharpVk.Multivendor.DebugReportCallbackDelegate,System.Nullable{SharpVk.Multivendor.DebugReportFlags},System.Nullable{System.IntPtr},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a debug report callback object.
            </summary>
            <param name="extendedHandle">
            The Instance handle to extend.
            </param>
            <param name="flags">
            flags indicate which event(s) will cause this callback to be
            called. Flags are interpreted as bitmasks and multiple may be set.
            Bits which can be set include: + --
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.Multivendor.InstanceExtensions.DebugReportMessage(SharpVk.Instance,SharpVk.Multivendor.DebugReportFlags,SharpVk.Multivendor.DebugReportObjectType,System.UInt64,SharpVk.HostSize,System.Int32,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Instance handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.Multivendor.MultisampleProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.MultisampleProperties.MaxSampleLocationGridSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.MultisampleProperties.MarshalFrom(SharpVk.Interop.Multivendor.MultisampleProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.PhysicalDeviceBlendOperationAdvancedFeatures">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PhysicalDeviceBlendOperationAdvancedFeatures.AdvancedBlendCoherentOperations">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.PhysicalDeviceBlendOperationAdvancedFeatures.MarshalTo(SharpVk.Interop.Multivendor.PhysicalDeviceBlendOperationAdvancedFeatures*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.PhysicalDeviceBlendOperationAdvancedFeatures.MarshalFrom(SharpVk.Interop.Multivendor.PhysicalDeviceBlendOperationAdvancedFeatures*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties.AdvancedBlendMaxColorAttachments">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties.AdvancedBlendIndependentBlend">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties.AdvancedBlendNonPremultipliedSourceColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties.AdvancedBlendNonPremultipliedDestinationColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties.AdvancedBlendCorrelatedOverlap">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties.AdvancedBlendAllOperations">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties.MarshalFrom(SharpVk.Interop.Multivendor.PhysicalDeviceBlendOperationAdvancedProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.PhysicalDeviceDiscardRectangleProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PhysicalDeviceDiscardRectangleProperties.MaxDiscardRectangles">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.PhysicalDeviceDiscardRectangleProperties.MarshalTo(SharpVk.Interop.Multivendor.PhysicalDeviceDiscardRectangleProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.PhysicalDeviceDiscardRectangleProperties.MarshalFrom(SharpVk.Interop.Multivendor.PhysicalDeviceDiscardRectangleProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.PhysicalDeviceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.PhysicalDeviceExtensions.ReleaseDisplay(SharpVk.PhysicalDevice,SharpVk.Khronos.Display)">
            <summary>
            Release access to an acquired Display.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Multivendor.PhysicalDeviceExtensions.AcquireXlibDisplay(SharpVk.PhysicalDevice,System.IntPtr,SharpVk.Khronos.Display)">
            <summary>
            Acquire access to a Display using Xlib.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
            <param name="dpy">
            A connection to the X11 server that currently owns the display.
            </param>
            <param name="display">
            The display the caller wishes to control in Vulkan.
            </param>
        </member>
        <member name="M:SharpVk.Multivendor.PhysicalDeviceExtensions.GetRandROutputDisplay(SharpVk.PhysicalDevice,System.IntPtr,System.IntPtr)">
            <summary>
            Query the DisplayKHR corresponding to an X11 RandR Output.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Multivendor.PhysicalDeviceExtensions.GetSurfaceCapabilities2(SharpVk.PhysicalDevice,SharpVk.Khronos.Surface)">
            <summary>
            Query surface capabilities.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.Multivendor.PhysicalDeviceExtensions.GetMultisampleProperties(SharpVk.PhysicalDevice,SharpVk.SampleCountFlags)">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.Multivendor.PhysicalDeviceSampleLocationsProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PhysicalDeviceSampleLocationsProperties.SampleLocationSampleCounts">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PhysicalDeviceSampleLocationsProperties.MaxSampleLocationGridSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PhysicalDeviceSampleLocationsProperties.SampleLocationCoordinateRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PhysicalDeviceSampleLocationsProperties.SampleLocationSubPixelBits">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PhysicalDeviceSampleLocationsProperties.VariableSampleLocations">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.PhysicalDeviceSampleLocationsProperties.MarshalFrom(SharpVk.Interop.Multivendor.PhysicalDeviceSampleLocationsProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.PhysicalDeviceSamplerFilterMinmaxProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PhysicalDeviceSamplerFilterMinmaxProperties.FilterMinmaxSingleComponentFormats">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PhysicalDeviceSamplerFilterMinmaxProperties.FilterMinmaxImageComponentMapping">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.PhysicalDeviceSamplerFilterMinmaxProperties.MarshalFrom(SharpVk.Interop.Multivendor.PhysicalDeviceSamplerFilterMinmaxProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.PipelineColorBlendAdvancedStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PipelineColorBlendAdvancedStateCreateInfo.SourcePremultiplied">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PipelineColorBlendAdvancedStateCreateInfo.DestinationPremultiplied">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PipelineColorBlendAdvancedStateCreateInfo.BlendOverlap">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.PipelineColorBlendAdvancedStateCreateInfo.MarshalTo(SharpVk.Interop.Multivendor.PipelineColorBlendAdvancedStateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.PipelineDiscardRectangleStateCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.PipelineDiscardRectangleStateCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.PipelineDiscardRectangleStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PipelineDiscardRectangleStateCreateInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PipelineDiscardRectangleStateCreateInfo.DiscardRectangleMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PipelineDiscardRectangleStateCreateInfo.DiscardRectangleCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PipelineDiscardRectangleStateCreateInfo.DiscardRectangles">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.PipelineDiscardRectangleStateCreateInfo.MarshalTo(SharpVk.Interop.Multivendor.PipelineDiscardRectangleStateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.PipelineSampleLocationsStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PipelineSampleLocationsStateCreateInfo.SampleLocationsEnable">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.PipelineSampleLocationsStateCreateInfo.SampleLocationsInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.PipelineSampleLocationsStateCreateInfo.MarshalTo(SharpVk.Interop.Multivendor.PipelineSampleLocationsStateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.RenderPassSampleLocationsBeginInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.RenderPassSampleLocationsBeginInfo.AttachmentInitialSampleLocations">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.RenderPassSampleLocationsBeginInfo.SubpassSampleLocations">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.RenderPassSampleLocationsBeginInfo.MarshalTo(SharpVk.Interop.Multivendor.RenderPassSampleLocationsBeginInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.SampleLocation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.SampleLocation.#ctor(System.Single,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.SampleLocation.X">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.SampleLocation.Y">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.SampleLocationsInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SampleLocationsInfo.SampleLocationsPerPixel">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SampleLocationsInfo.SampleLocationGridSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SampleLocationsInfo.SampleLocations">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.SampleLocationsInfo.MarshalTo(SharpVk.Interop.Multivendor.SampleLocationsInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.SamplerReductionMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.SamplerReductionMode.WeightedAverage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.SamplerReductionMode.Min">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.SamplerReductionMode.Max">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.SamplerReductionModeCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SamplerReductionModeCreateInfo.ReductionMode">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.SamplerReductionModeCreateInfo.MarshalTo(SharpVk.Interop.Multivendor.SamplerReductionModeCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.ShaderModuleValidationCacheCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.ShaderModuleValidationCacheCreateInfo.ValidationCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.ShaderModuleValidationCacheCreateInfo.MarshalTo(SharpVk.Interop.Multivendor.ShaderModuleValidationCacheCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.SubpassSampleLocations">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SubpassSampleLocations.SubpassIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SubpassSampleLocations.SampleLocationsInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.SubpassSampleLocations.MarshalTo(SharpVk.Interop.Multivendor.SubpassSampleLocations*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.SurfaceCapabilities2">
            <summary>
            Structure describing capabilities of a surface.
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SurfaceCapabilities2.MinImageCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SurfaceCapabilities2.MaxImageCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SurfaceCapabilities2.CurrentExtent">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SurfaceCapabilities2.MinImageExtent">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SurfaceCapabilities2.MaxImageExtent">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SurfaceCapabilities2.MaxImageArrayLayers">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SurfaceCapabilities2.SupportedTransforms">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SurfaceCapabilities2.CurrentTransform">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SurfaceCapabilities2.SupportedCompositeAlpha">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SurfaceCapabilities2.SupportedUsageFlags">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SurfaceCapabilities2.SupportedSurfaceCounters">
            <summary>
            A bitfield containing one bit set for each surface counter type
            supported.
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.SurfaceCapabilities2.MarshalFrom(SharpVk.Interop.Multivendor.SurfaceCapabilities2*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.SurfaceCounterFlags">
            <summary>
            Surface-relative counter types.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.SurfaceCounterFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.SurfaceCounterFlags.Vblank">
            <summary>
            VK_SURFACE_COUNTER_VBLANK_EXT A counter incrementing once every
            time a vblank period occurs on the display associated with the
            surface.
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.SwapchainCounterCreateInfo">
            <summary>
            Specify the surface counters desired.
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.SwapchainCounterCreateInfo.SurfaceCounters">
            <summary>
            A bitmask containing a bit set for each surface counter to enable
            for the swapchain.
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.SwapchainCounterCreateInfo.MarshalTo(SharpVk.Interop.Multivendor.SwapchainCounterCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.SwapchainExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.SwapchainExtensions.GetCounter(SharpVk.Khronos.Swapchain,SharpVk.Multivendor.SurfaceCounterFlags)">
            <summary>
            Query the current value of a surface counter.
            </summary>
            <param name="extendedHandle">
            The Swapchain handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.Multivendor.ValidationCache">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.ValidationCache.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.ValidationCache.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.ValidationCache.GetData">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.ValidationCache.MergeValidationCaches(System.Nullable{SharpVk.ArrayProxy{SharpVk.Multivendor.ValidationCache}})">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.ValidationCacheCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.ValidationCacheCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.ValidationCacheCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.ValidationCacheCreateInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.ValidationCacheCreateInfo.InitialData">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.ValidationCacheCreateInfo.MarshalTo(SharpVk.Interop.Multivendor.ValidationCacheCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.ValidationCacheHeaderVersion">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.ValidationCacheHeaderVersion.One">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.ValidationCheck">
            <summary>
            Specify validation checks to disable.
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.ValidationCheck.All">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.ValidationCheck.Shaders">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.ValidationFlags">
            <summary>
            Specify validation checks to disable for a Vulkan instance.
            </summary>
        </member>
        <member name="P:SharpVk.Multivendor.ValidationFlags.DisabledValidationChecks">
            <summary>
            An array of values specifying the validation checks to be disabled.
            Checks which may be specified include: + --
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.ValidationFlags.MarshalTo(SharpVk.Interop.Multivendor.ValidationFlags*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Multivendor.XYColor">
            <summary>
            Structure to specify X,Y chromaticity coordinates.
            </summary>
        </member>
        <member name="M:SharpVk.Multivendor.XYColor.#ctor(System.Single,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.XYColor.X">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Multivendor.XYColor.Y">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Nintendo.InstanceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Nintendo.InstanceExtensions.CreateViSurface(SharpVk.Instance,System.IntPtr,System.Nullable{SharpVk.Nintendo.ViSurfaceCreateFlags},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a SurfaceKHR object for a VI layer.
            </summary>
            <param name="extendedHandle">
            The Instance handle to extend.
            </param>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="window">
            The nn::vi::NativeWindowHandle for the nn::vi::Layer with which to
            associate the surface.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.Nintendo.ViSurfaceCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Nintendo.ViSurfaceCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Nintendo.ViSurfaceCreateInfo">
            <summary>
            Structure specifying parameters of a newly created VI surface object.
            </summary>
        </member>
        <member name="P:SharpVk.Nintendo.ViSurfaceCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.Nintendo.ViSurfaceCreateInfo.Window">
            <summary>
            The nn::vi::NativeWindowHandle for the nn::vi::Layer with which to
            associate the surface.
            </summary>
        </member>
        <member name="M:SharpVk.Nintendo.ViSurfaceCreateInfo.MarshalTo(SharpVk.Interop.Nintendo.ViSurfaceCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.CommandBufferExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.CommandBufferExtensions.SetViewportWScaling(SharpVk.CommandBuffer,System.UInt32,System.Nullable{SharpVk.ArrayProxy{SharpVk.NVidia.ViewportWScaling}})">
            <summary>
            Set the viewport W scaling on a command buffer.
            </summary>
            <param name="extendedHandle">
            The CommandBuffer handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.NVidia.CoverageModulationMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.CoverageModulationMode.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.CoverageModulationMode.Rgb">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.CoverageModulationMode.Alpha">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.CoverageModulationMode.Rgba">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.DedicatedAllocationBufferCreateInfo">
            <summary>
            Specify that a buffer is bound to a dedicated memory resource.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.DedicatedAllocationBufferCreateInfo.DedicatedAllocation">
            <summary>
            Indicates whether the buffer will have a dedicated allocation bound
            to it.
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.DedicatedAllocationBufferCreateInfo.MarshalTo(SharpVk.Interop.NVidia.DedicatedAllocationBufferCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.DedicatedAllocationImageCreateInfo">
            <summary>
            Specify that an image is bound to a dedicated memory resource.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.DedicatedAllocationImageCreateInfo.DedicatedAllocation">
            <summary>
            Indicates whether the image will have a dedicated allocation bound
            to it.
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.DedicatedAllocationImageCreateInfo.MarshalTo(SharpVk.Interop.NVidia.DedicatedAllocationImageCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.DedicatedAllocationMemoryAllocateInfo">
            <summary>
            Specify a dedicated memory allocation resource.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.DedicatedAllocationMemoryAllocateInfo.Image">
            <summary>
            image is null or a handle of an image which this memory will be
            bound to.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.DedicatedAllocationMemoryAllocateInfo.Buffer">
            <summary>
            buffer is null or a handle of a buffer which this memory will be
            bound to.
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.DedicatedAllocationMemoryAllocateInfo.MarshalTo(SharpVk.Interop.NVidia.DedicatedAllocationMemoryAllocateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.DeviceMemoryExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.DeviceMemoryExtensions.GetWin32Handle(SharpVk.DeviceMemory,SharpVk.NVidia.ExternalMemoryHandleTypeFlags)">
            <summary>
            Retrieve Win32 handle to a device memory object.
            </summary>
            <param name="extendedHandle">
            The DeviceMemory handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.CommandBufferExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.CommandBufferExtensions.ProcessCommands(SharpVk.CommandBuffer,SharpVk.NVidia.Experimental.CommandProcessCommandsInfo)">
            <summary>
            Performs the generation of commands on the device.
            </summary>
            <param name="extendedHandle">
            The CommandBuffer handle to extend.
            </param>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.CommandBufferExtensions.ReserveSpaceForCommands(SharpVk.CommandBuffer,SharpVk.NVidia.Experimental.CommandReserveSpaceForCommandsInfo)">
            <summary>
            Perform a reservation of command buffer space.
            </summary>
            <param name="extendedHandle">
            The CommandBuffer handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.CommandProcessCommandsInfo">
            <summary>
            Structure specifying parameters for the generation of commands.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.CommandProcessCommandsInfo.ObjectTable">
            <summary>
            The ObjectTableNVX to be used for the generation process. Only
            registered objects at the time
            flink:vkCmdReserveSpaceForCommandsNVX is called, will be taken into
            account for the reservation.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.CommandProcessCommandsInfo.IndirectCommandsLayout">
            <summary>
            The IndirectCommandsLayoutNVX that provides the command sequence to
            generate.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.CommandProcessCommandsInfo.IndirectCommandsTokens">
            <summary>
            pIndirectCommandsTokens provides an array of
            IndirectCommandsTokenNVX that reference the input data for each
            token command.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.CommandProcessCommandsInfo.MaxSequencesCount">
            <summary>
            The maximum number of sequences for which command buffer space will
            be reserved. If sequencesCountBuffer is null, this is also the
            actual number of sequences generated.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.CommandProcessCommandsInfo.TargetCommandBuffer">
            <summary>
            targetCommandBuffer can be the secondary CommandBuffer in which the
            commands should be recorded. If targetCommandBuffer is Null an
            implicit reservation as well as execution takes place on the
            processing CommandBuffer.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.CommandProcessCommandsInfo.SequencesCountBuffer">
            <summary>
            sequencesCountBuffer can be Buffer from which the actual amount of
            sequences is sourced from as ftext:uint32_t value.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.CommandProcessCommandsInfo.SequencesCountOffset">
            <summary>
            The byte offset into sequencesCountBuffer where the count value is
            stored.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.CommandProcessCommandsInfo.SequencesIndexBuffer">
            <summary>
            sequencesIndexBuffer must be set if indirectCommandsLayout's
            VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT is set and
            provides the used sequence indices as ftext:uint32_t array.
            Otherwise it must be null.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.CommandProcessCommandsInfo.SequencesIndexOffset">
            <summary>
            The byte offset into sequencesIndexBuffer where the index values
            start.
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.CommandProcessCommandsInfo.MarshalTo(SharpVk.Interop.NVidia.Experimental.CommandProcessCommandsInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.CommandReserveSpaceForCommandsInfo">
            <summary>
            Structure specifying parameters for the reservation of command buffer
            space.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.CommandReserveSpaceForCommandsInfo.ObjectTable">
            <summary>
            The ObjectTableNVX to be used for the generation process. Only
            registered objects at the time
            flink:vkCmdReserveSpaceForCommandsNVX is called, will be taken into
            account for the reservation.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.CommandReserveSpaceForCommandsInfo.IndirectCommandsLayout">
            <summary>
            The IndirectCommandsLayoutNVX that must also be used at generation
            time.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.CommandReserveSpaceForCommandsInfo.MaxSequencesCount">
            <summary>
            The maximum number of sequences for which command buffer space will
            be reserved.
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.CommandReserveSpaceForCommandsInfo.MarshalTo(SharpVk.Interop.NVidia.Experimental.CommandReserveSpaceForCommandsInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.DeviceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.DeviceExtensions.CreateIndirectCommandsLayout(SharpVk.Device,SharpVk.PipelineBindPoint,SharpVk.NVidia.Experimental.IndirectCommandsLayoutUsageFlags,System.Nullable{SharpVk.ArrayProxy{SharpVk.NVidia.Experimental.IndirectCommandsLayoutToken}},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
            <param name="pipelineBindPoint">
            The PipelineBindPoint that this layout targets.
            </param>
            <param name="flags">
            A bitmask providing usage hints of this layout. See
            IndirectCommandsLayoutUsageFlagBitsNVX below for a description of
            the supported bits.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.DeviceExtensions.CreateObjectTable(SharpVk.Device,System.Nullable{SharpVk.ArrayProxy{SharpVk.NVidia.Experimental.ObjectEntryType}},System.Nullable{SharpVk.ArrayProxy{System.UInt32}},System.Nullable{SharpVk.ArrayProxy{SharpVk.NVidia.Experimental.ObjectEntryUsageFlags}},System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            
            </summary>
            <param name="extendedHandle">
            The Device handle to extend.
            </param>
            <param name="maxUniformBuffersPerDescriptor">
            The maximum number of VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER or
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC used by any single
            registered DescriptorSet in this table.
            </param>
            <param name="maxStorageBuffersPerDescriptor">
            The maximum number of VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC used by any single
            registered DescriptorSet in this table.
            </param>
            <param name="maxStorageImagesPerDescriptor">
            The maximum number of VK_DESCRIPTOR_TYPE_STORAGE_IMAGE or
            VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER used by any single
            registered DescriptorSet in this table.
            </param>
            <param name="maxSampledImagesPerDescriptor">
            The maximum number of VK_DESCRIPTOR_TYPE_SAMPLER,
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER
            or VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT used by any single
            registered DescriptorSet in this table.
            </param>
            <param name="maxPipelineLayouts">
            The maximum number of unique PipelineLayout used by any registered
            DescriptorSet or Pipeline in this table.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.DeviceGeneratedCommandsFeatures">
            <summary>
            Structure specifying physical device support.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.DeviceGeneratedCommandsFeatures.ComputeBindingPointSupport">
            <summary>
            Indicates whether the ObjectTableNVX supports entries with
            VK_OBJECT_ENTRY_USAGE_GRAPHICS_BIT_NVX bit set and
            IndirectCommandsLayoutNVX supports VK_PIPELINE_BIND_POINT_COMPUTE.
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.DeviceGeneratedCommandsFeatures.MarshalTo(SharpVk.Interop.NVidia.Experimental.DeviceGeneratedCommandsFeatures*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.DeviceGeneratedCommandsFeatures.MarshalFrom(SharpVk.Interop.NVidia.Experimental.DeviceGeneratedCommandsFeatures*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.DeviceGeneratedCommandsLimits">
            <summary>
            Structure specifying physical device limits.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.DeviceGeneratedCommandsLimits.MaxIndirectCommandsLayoutTokenCount">
            <summary>
            maxIndirectCommandsLayoutTokenCount the maximum number of tokens in
            IndirectCommandsLayoutNVX.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.DeviceGeneratedCommandsLimits.MaxObjectEntryCounts">
            <summary>
            maxObjectEntryCounts the maximum number of entries per resource
            type in ObjectTableNVX.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.DeviceGeneratedCommandsLimits.MinSequenceCountBufferOffsetAlignment">
            <summary>
            The minimum alignment for memory addresses optionally used in
            CommandBuffer.ProcessCommands().
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.DeviceGeneratedCommandsLimits.MinSequenceIndexBufferOffsetAlignment">
            <summary>
            The minimum alignment for memory addresses optionally used in
            CommandBuffer.ProcessCommands().
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.DeviceGeneratedCommandsLimits.MinCommandsTokenBufferOffsetAlignment">
            <summary>
            The minimum alignment for memory addresses optionally used in
            CommandBuffer.ProcessCommands().
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.DeviceGeneratedCommandsLimits.MarshalTo(SharpVk.Interop.NVidia.Experimental.DeviceGeneratedCommandsLimits*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.DeviceGeneratedCommandsLimits.MarshalFrom(SharpVk.Interop.NVidia.Experimental.DeviceGeneratedCommandsLimits*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.IndirectCommandsLayout">
            <summary>
            Opaque handle to an indirect commands layout object.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.IndirectCommandsLayout.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.IndirectCommandsLayout.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a object table.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.IndirectCommandsLayoutCreateInfo">
            <summary>
            Structure specifying the parameters of a newly created indirect
            commands layout object.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.IndirectCommandsLayoutCreateInfo.PipelineBindPoint">
            <summary>
            The PipelineBindPoint that this layout targets.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.IndirectCommandsLayoutCreateInfo.Flags">
            <summary>
            A bitmask providing usage hints of this layout. See
            IndirectCommandsLayoutUsageFlagBitsNVX below for a description of
            the supported bits.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.IndirectCommandsLayoutCreateInfo.Tokens">
            <summary>
            An array describing each command token in detail. See
            IndirectCommandsTokenTypeNVX and IndirectCommandsLayoutTokenNVX
            below for details.
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.IndirectCommandsLayoutCreateInfo.MarshalTo(SharpVk.Interop.NVidia.Experimental.IndirectCommandsLayoutCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.IndirectCommandsLayoutToken">
            <summary>
            Struct specifying the details of an indirect command layout token.
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.IndirectCommandsLayoutToken.#ctor(SharpVk.NVidia.Experimental.IndirectCommandsTokenType,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.IndirectCommandsLayoutToken.TokenType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.IndirectCommandsLayoutToken.BindingUnit">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.IndirectCommandsLayoutToken.DynamicCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.IndirectCommandsLayoutToken.Divisor">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.IndirectCommandsLayoutUsageFlags">
            <summary>
            Bitmask specifying allowed usage of a indirect commands layout.
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.IndirectCommandsLayoutUsageFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.IndirectCommandsLayoutUsageFlags.UnorderedSequences">
            <summary>
            Indicates that the processing of sequences can happen at an
            implementation-dependent order, which is not guaranteed to be
            coherent across multiple invocations.
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.IndirectCommandsLayoutUsageFlags.SparseSequences">
            <summary>
            Indicates that there is likely a high difference between allocated
            number of sequences and actually used.
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.IndirectCommandsLayoutUsageFlags.EmptyExecutions">
            <summary>
            Indicates that there is likely many draw or dispatch calls that are
            zero-sized (zero grid dimension, no primitives to render).
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.IndirectCommandsLayoutUsageFlags.IndexedSequences">
            <summary>
            Indicates that the input data for the sequences is not implicitly
            indexed from 0..sequencesUsed but a user provided Buffer encoding
            the index is provided.
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.IndirectCommandsToken">
            <summary>
            Structure specifying parameters for the reservation of command buffer
            space.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.IndirectCommandsToken.TokenType">
            <summary>
            Specifies the token command type.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.IndirectCommandsToken.Buffer">
            <summary>
            Specifies the Buffer storing the functional arguments for each
            squence. These argumetns can be written by the device.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.IndirectCommandsToken.Offset">
            <summary>
            offset specified an offset into buffer where the arguments start.
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.IndirectCommandsToken.MarshalTo(SharpVk.Interop.NVidia.Experimental.IndirectCommandsToken*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.IndirectCommandsToken.MarshalFrom(SharpVk.Interop.NVidia.Experimental.IndirectCommandsToken*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.IndirectCommandsTokenType">
            <summary>
            Enum specifying.
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.IndirectCommandsTokenType.Pipeline">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.IndirectCommandsTokenType.DescriptorSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.IndirectCommandsTokenType.IndexBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.IndirectCommandsTokenType.VertexBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.IndirectCommandsTokenType.PushConstant">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.IndirectCommandsTokenType.DrawIndexed">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.IndirectCommandsTokenType.Draw">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.IndirectCommandsTokenType.Dispatch">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.ObjectEntryType">
            <summary>
            Enum specifying object table entry type.
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.ObjectEntryType.DescriptorSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.ObjectEntryType.Pipeline">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.ObjectEntryType.IndexBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.ObjectEntryType.VertexBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.ObjectEntryType.PushConstant">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.ObjectEntryUsageFlags">
            <summary>
            Bitmask specifying allowed usage of an object entry.
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.ObjectEntryUsageFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.ObjectEntryUsageFlags.Graphics">
            <summary>
            Indicates that the resource is bound to
            VK_PIPELINE_BIND_POINT_GRAPHICS
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.ObjectEntryUsageFlags.Compute">
            <summary>
            Indicates that the resource is bound to
            VK_PIPELINE_BIND_POINT_COMPUTE
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.ObjectTable">
            <summary>
            Opaque handle to an object table.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTable.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.ObjectTable.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a object table.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.ObjectTable.RegisterObjects(System.Nullable{SharpVk.ArrayProxy{SharpVk.NVidia.Experimental.ObjectTableEntry}},System.Nullable{SharpVk.ArrayProxy{System.UInt32}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.ObjectTable.UnregisterObjects(System.Nullable{SharpVk.ArrayProxy{SharpVk.NVidia.Experimental.ObjectEntryType}},System.Nullable{SharpVk.ArrayProxy{System.UInt32}})">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.ObjectTableCreateInfo">
            <summary>
            Structure specifying the parameters of a newly created object table.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableCreateInfo.ObjectEntryTypes">
            <summary>
            An array of ObjectEntryTypeNVX providing the entry type of a given
            configuration.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableCreateInfo.ObjectEntryCounts">
            <summary>
            An array of counts how many objects can be registered in the table.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableCreateInfo.ObjectEntryUsageFlags">
            <summary>
            An array of bitmasks describing the binding usage of the entry. See
            ObjectEntryUsageFlagBitsNVX below for a description of the
            supported bits.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableCreateInfo.MaxUniformBuffersPerDescriptor">
            <summary>
            The maximum number of VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER or
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC used by any single
            registered DescriptorSet in this table.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableCreateInfo.MaxStorageBuffersPerDescriptor">
            <summary>
            The maximum number of VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC used by any single
            registered DescriptorSet in this table.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableCreateInfo.MaxStorageImagesPerDescriptor">
            <summary>
            The maximum number of VK_DESCRIPTOR_TYPE_STORAGE_IMAGE or
            VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER used by any single
            registered DescriptorSet in this table.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableCreateInfo.MaxSampledImagesPerDescriptor">
            <summary>
            The maximum number of VK_DESCRIPTOR_TYPE_SAMPLER,
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER
            or VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT used by any single
            registered DescriptorSet in this table.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableCreateInfo.MaxPipelineLayouts">
            <summary>
            The maximum number of unique PipelineLayout used by any registered
            DescriptorSet or Pipeline in this table.
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.ObjectTableCreateInfo.MarshalTo(SharpVk.Interop.NVidia.Experimental.ObjectTableCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.ObjectTableDescriptorSetEntry">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableDescriptorSetEntry.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableDescriptorSetEntry.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableDescriptorSetEntry.PipelineLayout">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableDescriptorSetEntry.DescriptorSet">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.ObjectTableDescriptorSetEntry.MarshalTo(SharpVk.Interop.NVidia.Experimental.ObjectTableDescriptorSetEntry*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.ObjectTableDescriptorSetEntry.MarshalFrom(SharpVk.Interop.NVidia.Experimental.ObjectTableDescriptorSetEntry*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.ObjectTableEntry">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.ObjectTableEntry.#ctor(SharpVk.NVidia.Experimental.ObjectEntryType,SharpVk.NVidia.Experimental.ObjectEntryUsageFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.ObjectTableEntry.Type">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.Experimental.ObjectTableEntry.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.ObjectTableIndexBufferEntry">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableIndexBufferEntry.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableIndexBufferEntry.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableIndexBufferEntry.Buffer">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableIndexBufferEntry.IndexType">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.ObjectTableIndexBufferEntry.MarshalTo(SharpVk.Interop.NVidia.Experimental.ObjectTableIndexBufferEntry*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.ObjectTableIndexBufferEntry.MarshalFrom(SharpVk.Interop.NVidia.Experimental.ObjectTableIndexBufferEntry*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.ObjectTablePipelineEntry">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTablePipelineEntry.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTablePipelineEntry.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTablePipelineEntry.Pipeline">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.ObjectTablePipelineEntry.MarshalTo(SharpVk.Interop.NVidia.Experimental.ObjectTablePipelineEntry*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.ObjectTablePipelineEntry.MarshalFrom(SharpVk.Interop.NVidia.Experimental.ObjectTablePipelineEntry*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.ObjectTablePushConstantEntry">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTablePushConstantEntry.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTablePushConstantEntry.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTablePushConstantEntry.PipelineLayout">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTablePushConstantEntry.StageFlags">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.ObjectTablePushConstantEntry.MarshalTo(SharpVk.Interop.NVidia.Experimental.ObjectTablePushConstantEntry*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.ObjectTablePushConstantEntry.MarshalFrom(SharpVk.Interop.NVidia.Experimental.ObjectTablePushConstantEntry*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.ObjectTableVertexBufferEntry">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableVertexBufferEntry.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableVertexBufferEntry.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.ObjectTableVertexBufferEntry.Buffer">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.ObjectTableVertexBufferEntry.MarshalTo(SharpVk.Interop.NVidia.Experimental.ObjectTableVertexBufferEntry*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.ObjectTableVertexBufferEntry.MarshalFrom(SharpVk.Interop.NVidia.Experimental.ObjectTableVertexBufferEntry*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.PhysicalDeviceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.PhysicalDeviceExtensions.GetGeneratedCommandsProperties(SharpVk.PhysicalDevice,SharpVk.NVidia.Experimental.DeviceGeneratedCommandsFeatures)">
            <summary>
            Returns device-generated commands related properties of a physical
            device.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.NVidia.Experimental.PhysicalDeviceMultiviewPerViewAttributesProperties">
            <summary>
            Structure describing multiview limits that can be supported by an
            implementation.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Experimental.PhysicalDeviceMultiviewPerViewAttributesProperties.PerViewPositionAllComponents">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Experimental.PhysicalDeviceMultiviewPerViewAttributesProperties.MarshalFrom(SharpVk.Interop.NVidia.Experimental.PhysicalDeviceMultiviewPerViewAttributesProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.ExportMemoryAllocateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.ExportMemoryAllocateInfo.HandleTypes">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.ExportMemoryAllocateInfo.MarshalTo(SharpVk.Interop.NVidia.ExportMemoryAllocateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.ExportMemoryWin32HandleInfo">
            <summary>
            Specify security attributes and access rights for Win32 memory handles.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.ExportMemoryWin32HandleInfo.Attributes">
            <summary>
            A Windows SECURITY_ATTRIBUTES structure specifying security
            attributes of the handle.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.ExportMemoryWin32HandleInfo.DwAccess">
            <summary>
            A DWORD specifying access rights of the handle.
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.ExportMemoryWin32HandleInfo.MarshalTo(SharpVk.Interop.NVidia.ExportMemoryWin32HandleInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.ExternalImageFormatProperties">
            <summary>
            Structure specifying external image format properties.
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.ExternalImageFormatProperties.#ctor(SharpVk.ImageFormatProperties,SharpVk.NVidia.ExternalMemoryFeatureFlags,SharpVk.NVidia.ExternalMemoryHandleTypeFlags,SharpVk.NVidia.ExternalMemoryHandleTypeFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ExternalImageFormatProperties.ImageFormatProperties">
            <summary>
            imageFormatProperties will be filled in as when calling
            flink:vkGetPhysicalDeviceImageFormatProperties, but the values
            returned may vary depending on the external handle type requested.
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ExternalImageFormatProperties.ExternalMemoryFeatures">
            <summary>
            A bitmask of ExternalMemoryFeatureFlagBitsNV indicating properties
            of the external memory handle type
            (flink:vkGetPhysicalDeviceExternalImageFormatPropertiesNV::externalHandleType) being
            queried, or 0 if the external memory handle type is 0.
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ExternalImageFormatProperties.ExportFromImportedHandleTypes">
            <summary>
            A bitmask of ExternalMemoryHandleTypeFlagBitsNV containing a bit
            set for every external handle type that may be used to create
            memory from which the handles of the type specified in
            flink:vkGetPhysicalDeviceExternalImageFormatPropertiesNV::externalHandleType can
            be exported, or 0 if the external memory handle type is 0.
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ExternalImageFormatProperties.CompatibleHandleTypes">
            <summary>
            A bitmask of ExternalMemoryHandleTypeFlagBitsNV containing a bit
            set for every external handle type that may be specified
            simultaneously with the handle type specified by
            flink:vkGetPhysicalDeviceExternalImageFormatPropertiesNV::externalHandleType when
            calling flink:vkAllocateMemory, or 0 if the external memory handle
            type is 0. compatibleHandleTypes will always contain
            flink:vkGetPhysicalDeviceExternalImageFormatPropertiesNV::externalHandleType
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.ExternalMemoryFeatureFlags">
            <summary>
            Bitmask specifying external memory features.
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ExternalMemoryFeatureFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ExternalMemoryFeatureFlags.DedicatedOnly">
            <summary>
            VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV: External memory
            of the specified type must be created as a dedicated allocation
            when used in the manner specified.
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ExternalMemoryFeatureFlags.Exportable">
            <summary>
            The implementation supports exporting handles of the specified
            type.
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ExternalMemoryFeatureFlags.Importable">
            <summary>
            The implementation supports importing handles of the specified
            type.
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.ExternalMemoryHandleTypeFlags">
            <summary>
            Bitmask specifying memory handle types.
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ExternalMemoryHandleTypeFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ExternalMemoryHandleTypeFlags.OpaqueWin32">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ExternalMemoryHandleTypeFlags.OpaqueWin32Kmt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ExternalMemoryHandleTypeFlags.D3d11Image">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ExternalMemoryHandleTypeFlags.D3d11ImageKmt">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.ExternalMemoryImageCreateInfo">
            <summary>
            Specify that an image may be backed by external memory.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.ExternalMemoryImageCreateInfo.HandleTypes">
            <summary>
            A bitmask of ExternalMemoryHandleTypeFlagBitsNV specifying one or
            more external memory handle types. The types must all be compatible
            with each other and the other image creation parameters, as
            reported by
            flink:vkGetPhysicalDeviceExternalImageFormatPropertiesNV.
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.ExternalMemoryImageCreateInfo.MarshalTo(SharpVk.Interop.NVidia.ExternalMemoryImageCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.ImportMemoryWin32HandleInfo">
            <summary>
            Import Win32 memory created on the same physical device.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.ImportMemoryWin32HandleInfo.HandleType">
            <summary>
            A flag specifying the type of memory handle in handle.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.ImportMemoryWin32HandleInfo.Handle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.ImportMemoryWin32HandleInfo.MarshalTo(SharpVk.Interop.NVidia.ImportMemoryWin32HandleInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.PhysicalDeviceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.PhysicalDeviceExtensions.GetExternalImageFormatProperties(SharpVk.PhysicalDevice,SharpVk.Format,SharpVk.ImageType,SharpVk.ImageTiling,SharpVk.ImageUsageFlags,System.Nullable{SharpVk.ImageCreateFlags},System.Nullable{SharpVk.NVidia.ExternalMemoryHandleTypeFlags})">
            <summary>
            Determine image capabilities compatible with external memory handle
            types.
            </summary>
            <param name="extendedHandle">
            The PhysicalDevice handle to extend.
            </param>
        </member>
        <member name="T:SharpVk.NVidia.PipelineCoverageModulationStateCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.PipelineCoverageModulationStateCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.PipelineCoverageModulationStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.PipelineCoverageModulationStateCreateInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.PipelineCoverageModulationStateCreateInfo.CoverageModulationMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.PipelineCoverageModulationStateCreateInfo.CoverageModulationTableEnable">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.PipelineCoverageModulationStateCreateInfo.CoverageModulationTable">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.PipelineCoverageModulationStateCreateInfo.MarshalTo(SharpVk.Interop.NVidia.PipelineCoverageModulationStateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.PipelineCoverageToColorStateCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.PipelineCoverageToColorStateCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.PipelineCoverageToColorStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.PipelineCoverageToColorStateCreateInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.PipelineCoverageToColorStateCreateInfo.CoverageToColorEnable">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.PipelineCoverageToColorStateCreateInfo.CoverageToColorLocation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.PipelineCoverageToColorStateCreateInfo.MarshalTo(SharpVk.Interop.NVidia.PipelineCoverageToColorStateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.PipelineViewportSwizzleStateCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.PipelineViewportSwizzleStateCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.PipelineViewportSwizzleStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.PipelineViewportSwizzleStateCreateInfo.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.PipelineViewportSwizzleStateCreateInfo.ViewportSwizzles">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.PipelineViewportSwizzleStateCreateInfo.MarshalTo(SharpVk.Interop.NVidia.PipelineViewportSwizzleStateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.PipelineViewportWScalingStateCreateInfo">
            <summary>
            Structure specifying parameters of a newly created pipeline viewport W
            scaling state.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.PipelineViewportWScalingStateCreateInfo.ViewportWScalingEnable">
            <summary>
            The enable for viewport W scaling
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.PipelineViewportWScalingStateCreateInfo.ViewportWScalings">
            <summary>
            An array of ViewportWScalingNV structures which define the W
            scaling parameters for the corresponding viewport. If the viewport
            W scaling state is dynamic, this member is ignored.
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.PipelineViewportWScalingStateCreateInfo.MarshalTo(SharpVk.Interop.NVidia.PipelineViewportWScalingStateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.ViewportCoordinateSwizzle">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ViewportCoordinateSwizzle.PositiveX">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ViewportCoordinateSwizzle.NegativeX">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ViewportCoordinateSwizzle.PositiveY">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ViewportCoordinateSwizzle.NegativeY">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ViewportCoordinateSwizzle.PositiveZ">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ViewportCoordinateSwizzle.NegativeZ">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ViewportCoordinateSwizzle.PositiveW">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ViewportCoordinateSwizzle.NegativeW">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.ViewportSwizzle">
            <summary>
            Structure specifying a viewport swizzle.
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.ViewportSwizzle.#ctor(SharpVk.NVidia.ViewportCoordinateSwizzle,SharpVk.NVidia.ViewportCoordinateSwizzle,SharpVk.NVidia.ViewportCoordinateSwizzle,SharpVk.NVidia.ViewportCoordinateSwizzle)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ViewportSwizzle.X">
            <summary>
            The swizzle operation to apply to the x component of the primitive
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ViewportSwizzle.Y">
            <summary>
            The swizzle operation to apply to the y component of the primitive
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ViewportSwizzle.Z">
            <summary>
            The swizzle operation to apply to the z component of the primitive
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ViewportSwizzle.W">
            <summary>
            The swizzle operation to apply to the w component of the primitive
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.ViewportWScaling">
            <summary>
            Structure specifying a viewport.
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.ViewportWScaling.#ctor(System.Single,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ViewportWScaling.Xcoeff">
            <summary>
            xcoeff and ycoeff are the viewport's W scaling factor for x and y
            respectively.
            </summary>
        </member>
        <member name="F:SharpVk.NVidia.ViewportWScaling.Ycoeff">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.NVidia.Win32KeyedMutexAcquireReleaseInfo">
            <summary>
            Use Windows keyex mutex mechanism to synchronize work.
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Win32KeyedMutexAcquireReleaseInfo.AcquireSyncs">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Win32KeyedMutexAcquireReleaseInfo.AcquireKeys">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Win32KeyedMutexAcquireReleaseInfo.AcquireTimeoutMilliseconds">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Win32KeyedMutexAcquireReleaseInfo.ReleaseSyncs">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.NVidia.Win32KeyedMutexAcquireReleaseInfo.ReleaseKeys">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.NVidia.Win32KeyedMutexAcquireReleaseInfo.MarshalTo(SharpVk.Interop.NVidia.Win32KeyedMutexAcquireReleaseInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ObjectType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.PhysicalDevice">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.Device">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.Queue">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.Semaphore">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.CommandBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.Fence">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.DeviceMemory">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.Buffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.Image">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.Event">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.QueryPool">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.BufferView">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.ImageView">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.ShaderModule">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.PipelineCache">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.PipelineLayout">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.RenderPass">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.Pipeline">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.DescriptorSetLayout">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.Sampler">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.DescriptorPool">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.DescriptorSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.Framebuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.CommandPool">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.SurfaceKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.SwapchainKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.DisplayKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.DisplayModeKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.DebugReportCallbackExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.DescriptorUpdateTemplateKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.ObjectTableNvx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.IndirectCommandsLayoutNvx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.SamplerYcbcrConversionKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ObjectType.ValidationCacheExt">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Offset2D">
            <summary>
            Structure specifying a two-dimensional offset.
            </summary>
        </member>
        <member name="M:SharpVk.Offset2D.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Offset2D.X">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Offset2D.Y">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Offset3D">
            <summary>
            Structure specifying a three-dimensional offset.
            </summary>
        </member>
        <member name="M:SharpVk.Offset3D.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Offset3D.X">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Offset3D.Y">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Offset3D.Z">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PhysicalDevice">
            <summary>
            Opaque handle to a physical device object.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDevice.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.PhysicalDevice.GetProperties">
            <summary>
            Returns properties of a physical device.
            </summary>
        </member>
        <member name="M:SharpVk.PhysicalDevice.GetQueueFamilyProperties">
            <summary>
            Reports properties of the queues of the specified physical device.
            </summary>
        </member>
        <member name="M:SharpVk.PhysicalDevice.GetMemoryProperties">
            <summary>
            Reports memory information for the specified physical device.
            </summary>
        </member>
        <member name="M:SharpVk.PhysicalDevice.GetFeatures">
            <summary>
            Reports capabilities of a physical device.
            </summary>
        </member>
        <member name="M:SharpVk.PhysicalDevice.GetFormatProperties(SharpVk.Format)">
            <summary>
            Lists physical device's format capabilities.
            </summary>
        </member>
        <member name="M:SharpVk.PhysicalDevice.GetImageFormatProperties(SharpVk.Format,SharpVk.ImageType,SharpVk.ImageTiling,SharpVk.ImageUsageFlags,System.Nullable{SharpVk.ImageCreateFlags})">
            <summary>
            Lists physical device's image format capabilities.
            </summary>
        </member>
        <member name="M:SharpVk.PhysicalDevice.CreateDevice(System.Nullable{SharpVk.ArrayProxy{SharpVk.DeviceQueueCreateInfo}},System.Nullable{SharpVk.ArrayProxy{System.String}},System.Nullable{SharpVk.ArrayProxy{System.String}},System.Nullable{SharpVk.DeviceCreateFlags},System.Nullable{SharpVk.PhysicalDeviceFeatures},System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Create a new device instance.
            </summary>
            <param name="flags">
            Reserved for future use.
            </param>
            <param name="enabledLayerNames">
            ppEnabledLayerNames is deprecated and ignored. See Device Layer
            Deprecation.
            </param>
            <param name="enabledExtensionNames">
            An array of enabledExtensionCount strings containing the names of
            extensions to enable for the created device. See the Extensions
            section for further details.
            </param>
            <param name="enabledFeatures">
            Null or a PhysicalDeviceFeatures structure that contains boolean
            indicators of all the features to be enabled. Refer to the Features
            section for further details.
            </param>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.PhysicalDevice.EnumerateDeviceLayerProperties">
            <summary>
            Returns properties of available physical device layers.
            </summary>
        </member>
        <member name="M:SharpVk.PhysicalDevice.EnumerateDeviceExtensionProperties(System.String)">
            <summary>
            Returns properties of available physical device extensions.
            </summary>
        </member>
        <member name="M:SharpVk.PhysicalDevice.GetSparseImageFormatProperties(SharpVk.Format,SharpVk.ImageType,SharpVk.SampleCountFlags,SharpVk.ImageUsageFlags,SharpVk.ImageTiling)">
            <summary>
            Retrieve properties of an image format applied to sparse images.
            </summary>
        </member>
        <member name="T:SharpVk.PhysicalDeviceFeatures">
            <summary>
            Structure describing the fine-grained features that can be supported by
            an implementation.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.RobustBufferAccess">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.FullDrawIndexUint32">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ImageCubeArray">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.IndependentBlend">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.GeometryShader">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.TessellationShader">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.SampleRateShading">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.DualSourceBlend">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.LogicOp">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.MultiDrawIndirect">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.DrawIndirectFirstInstance">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.DepthClamp">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.DepthBiasClamp">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.FillModeNonSolid">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.DepthBounds">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.WideLines">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.LargePoints">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.AlphaToOne">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.MultiViewport">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.SamplerAnisotropy">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.TextureCompressionETC2">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.TexturecompressionastcLdr">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.TextureCompressionBC">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.OcclusionQueryPrecise">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.PipelineStatisticsQuery">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.VertexPipelineStoresAndAtomics">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.FragmentStoresAndAtomics">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ShaderTessellationAndGeometryPointSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ShaderImageGatherExtended">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ShaderStorageImageExtendedFormats">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ShaderStorageImageMultisample">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ShaderStorageImageReadWithoutFormat">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ShaderStorageImageWriteWithoutFormat">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ShaderUniformBufferArrayDynamicIndexing">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ShaderSampledImageArrayDynamicIndexing">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ShaderStorageBufferArrayDynamicIndexing">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ShaderStorageImageArrayDynamicIndexing">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ShaderClipDistance">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ShaderCullDistance">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ShaderFloat64">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ShaderInt64">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ShaderInt16">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ShaderResourceResidency">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.ShaderResourceMinLod">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.SparseBinding">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.SparseResidencyBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.SparseResidencyImage2D">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.SparseResidencyImage3D">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.SparseResidency2Samples">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.SparseResidency4Samples">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.SparseResidency8Samples">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.SparseResidency16Samples">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.SparseResidencyAliased">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.VariableMultisampleRate">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceFeatures.InheritedQueries">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.PhysicalDeviceFeatures.MarshalTo(SharpVk.Interop.PhysicalDeviceFeatures*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.PhysicalDeviceFeatures.MarshalFrom(SharpVk.Interop.PhysicalDeviceFeatures*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PhysicalDeviceLimits">
            <summary>
            Structure reporting implementation-dependent physical device limits.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxImageDimension1D">
            <summary>
            The maximum dimension (width) of an image created with an imageType
            of VK_IMAGE_TYPE_1D.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxImageDimension2D">
            <summary>
            The maximum dimension (width or height) of an image created with an
            imageType of VK_IMAGE_TYPE_2D and without
            VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT set in flags.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxImageDimension3D">
            <summary>
            The maximum dimension (width, height, or depth) of an image created
            with an imageType of VK_IMAGE_TYPE_3D.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxImageDimensionCube">
            <summary>
            The maximum dimension (width or height) of an image created with an
            imageType of VK_IMAGE_TYPE_2D and with
            VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT set in flags.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxImageArrayLayers">
            <summary>
            The maximum number of layers (arrayLayers) for an image.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxTexelBufferElements">
            <summary>
            The maximum number of addressable texels for a buffer view created
            on a buffer which was created with the
            VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT or
            VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT set in the usage member of
            the BufferCreateInfo structure.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxUniformBufferRange">
            <summary>
            The maximum value that can be specified in the range member of any
            DescriptorBufferInfo structures passed to a call to
            flink:vkUpdateDescriptorSets for descriptors of type
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER or
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxStorageBufferRange">
            <summary>
            The maximum value that can be specified in the range member of any
            DescriptorBufferInfo structures passed to a call to
            flink:vkUpdateDescriptorSets for descriptors of type
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxPushConstantsSize">
            <summary>
            The maximum size, in bytes, of the pool of push constant memory.
            For each of the push constant ranges indicated by the
            pPushConstantRanges member of the PipelineLayoutCreateInfo
            structure, offset + size must be less than or equal to this limit.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxMemoryAllocationCount">
            <summary>
            maxMemoryAllocationCount is the maximum number of device memory
            allocations, as created by flink:vkAllocateMemory, which can
            simultaneously exist.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxSamplerAllocationCount">
            <summary>
            maxSamplerAllocationCount is the maximum number of sampler objects,
            as created by flink:vkCreateSampler, which can simultaneously exist
            on a device.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.BufferImageGranularity">
            <summary>
            The granularity, in bytes, at which buffer or linear image
            resources, and optimal image resources can be bound to adjacent
            offsets in the same DeviceMemory object without aliasing. See
            Buffer-Image Granularity for more details.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.SparseAddressSpaceSize">
            <summary>
            The total amount of address space available, in bytes, for sparse
            memory resources. This is an upper bound on the sum of the size of
            all sparse resources, regardless of whether any memory is bound to
            them.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxBoundDescriptorSets">
            <summary>
            The maximum number of descriptor sets that can be simultaneously
            used by a pipeline. All DescriptorSet decorations in shader modules
            must have a value less than maxBoundDescriptorSets. See
            &lt;&lt;descriptorsets-sets.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxPerStageDescriptorSamplers">
            <summary>
            maxPerStageDescriptorSamplers is the maximum number of samplers
            that can be accessible to a single shader stage in a pipeline
            layout. Descriptors with a type of VK_DESCRIPTOR_TYPE_SAMPLER or
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER count against this limit.
            A descriptor is accessible to a shader stage when the stageFlags
            member of the DescriptorSetLayoutBinding structure has the bit for
            that shader stage set. See &lt;&lt;descriptorsets-sampler and
            &lt;&lt;descriptorsets-combinedimagesampler.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxPerStageDescriptorUniformBuffers">
            <summary>
            maxPerStageDescriptorUniformBuffers is the maximum number of
            uniform buffers that can be accessible to a single shader stage in
            a pipeline layout. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER or
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC count against this limit.
            A descriptor is accessible to a shader stage when the stageFlags
            member of the DescriptorSetLayoutBinding structure has the bit for
            that shader stage set. See &lt;&lt;descriptorsets-uniformbuffer and
            &lt;&lt;descriptorsets-uniformbufferdynamic.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxPerStageDescriptorStorageBuffers">
            <summary>
            maxPerStageDescriptorStorageBuffers is the maximum number of
            storage buffers that can be accessible to a single shader stage in
            a pipeline layout. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC count against this limit.
            A descriptor is accessible to a pipeline shader stage when the
            stageFlags member of the DescriptorSetLayoutBinding structure has
            the bit for that shader stage set. See
            &lt;&lt;descriptorsets-storagebuffer and
            &lt;&lt;descriptorsets-storagebufferdynamic.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxPerStageDescriptorSampledImages">
            <summary>
            maxPerStageDescriptorSampledImages is the maximum number of sampled
            images that can be accessible to a single shader stage in a
            pipeline layout. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE,
            or VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER count against this
            limit. A descriptor is accessible to a pipeline shader stage when
            the stageFlags member of the DescriptorSetLayoutBinding structure
            has the bit for that shader stage set. See
            &lt;&lt;descriptorsets-combinedimagesampler, &lt;&lt;descriptorsets-sampledimage,
            and &lt;&lt;descriptorsets-uniformtexelbuffer.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxPerStageDescriptorStorageImages">
            <summary>
            maxPerStageDescriptorStorageImages is the maximum number of storage
            images that can be accessible to a single shader stage in a
            pipeline layout. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_STORAGE_IMAGE, or
            VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER count against this limit. A
            descriptor is accessible to a pipeline shader stage when the
            stageFlags member of the DescriptorSetLayoutBinding structure has
            the bit for that shader stage set. See
            &lt;&lt;descriptorsets-storageimage, and
            &lt;&lt;descriptorsets-storagetexelbuffer.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxPerStageDescriptorInputAttachments">
            <summary>
            maxPerStageDescriptorInputAttachments is the maximum number of
            input attachments that can be accessible to a single shader stage
            in a pipeline layout. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT count against this limit. A
            descriptor is accessible to a pipeline shader stage when the
            stageFlags member of the DescriptorSetLayoutBinding structure has
            the bit for that shader stage set. These are only supported for the
            fragment stage. See &lt;&lt;descriptorsets-inputattachment.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxPerStageResources">
            <summary>
            The maximum number of resources that can be accessible to a single
            shader stage in a pipeline layout. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE,
            VK_DESCRIPTOR_TYPE_STORAGE_IMAGE,
            VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER, VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER,
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER,
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER, VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC,
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC, or
            VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT count against this limit. For
            the fragment shader stage the framebuffer color attachments also
            count against this limit.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxDescriptorSetSamplers">
            <summary>
            maxDescriptorSetSamplers is the maximum number of samplers that can
            be included in descriptor bindings in a pipeline layout across all
            pipeline shader stages and descriptor set numbers. Descriptors with
            a type of VK_DESCRIPTOR_TYPE_SAMPLER or
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER count against this limit.
            See &lt;&lt;descriptorsets-sampler and
            &lt;&lt;descriptorsets-combinedimagesampler.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxDescriptorSetUniformBuffers">
            <summary>
            maxDescriptorSetUniformBuffers is the maximum number of uniform
            buffers that can be included in descriptor bindings in a pipeline
            layout across all pipeline shader stages and descriptor set
            numbers. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER or
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC count against this limit.
            See &lt;&lt;descriptorsets-uniformbuffer and
            &lt;&lt;descriptorsets-uniformbufferdynamic.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxDescriptorSetUniformBuffersDynamic">
            <summary>
            maxDescriptorSetUniformBuffersDynamic is the maximum number of
            dynamic uniform buffers that can be included in descriptor bindings
            in a pipeline layout across all pipeline shader stages and
            descriptor set numbers. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC count against this limit.
            See &lt;&lt;descriptorsets-uniformbufferdynamic.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxDescriptorSetStorageBuffers">
            <summary>
            maxDescriptorSetStorageBuffers is the maximum number of storage
            buffers that can be included in descriptor bindings in a pipeline
            layout across all pipeline shader stages and descriptor set
            numbers. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC count against this limit.
            See &lt;&lt;descriptorsets-storagebuffer and
            &lt;&lt;descriptorsets-storagebufferdynamic.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxDescriptorSetStorageBuffersDynamic">
            <summary>
            maxDescriptorSetStorageBuffersDynamic is the maximum number of
            dynamic storage buffers that can be included in descriptor bindings
            in a pipeline layout across all pipeline shader stages and
            descriptor set numbers. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC count against this limit.
            See &lt;&lt;descriptorsets-storagebufferdynamic.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxDescriptorSetSampledImages">
            <summary>
            maxDescriptorSetSampledImages is the maximum number of sampled
            images that can be included in descriptor bindings in a pipeline
            layout across all pipeline shader stages and descriptor set
            numbers. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE,
            or VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER count against this
            limit. See &lt;&lt;descriptorsets-combinedimagesampler,
            &lt;&lt;descriptorsets-sampledimage, and
            &lt;&lt;descriptorsets-uniformtexelbuffer.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxDescriptorSetStorageImages">
            <summary>
            maxDescriptorSetStorageImages is the maximum number of storage
            images that can be included in descriptor bindings in a pipeline
            layout across all pipeline shader stages and descriptor set
            numbers. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_STORAGE_IMAGE, or
            VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER count against this limit.
            See &lt;&lt;descriptorsets-storageimage, and
            &lt;&lt;descriptorsets-storagetexelbuffer.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxDescriptorSetInputAttachments">
            <summary>
            maxDescriptorSetInputAttachments is the maximum number of input
            attachments that can be included in descriptor bindings in a
            pipeline layout across all pipeline shader stages and descriptor
            set numbers. Descriptors with a type of
            VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT count against this limit. See
            &lt;&lt;descriptorsets-inputattachment.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxVertexInputAttributes">
            <summary>
            maxVertexInputAttributes is the maximum number of vertex input
            attributes that can be specified for a graphics pipeline. These are
            described in the array of VertexInputAttributeDescription
            structures that are provided at graphics pipeline creation time via
            the pVertexAttributeDescriptions member of the
            PipelineVertexInputStateCreateInfo structure. See
            &lt;&lt;fxvertex-attrib and &lt;&lt;fxvertex-input.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxVertexInputBindings">
            <summary>
            The maximum number of vertex buffers that can be specified for
            providing vertex attributes to a graphics pipeline. These are
            described in the array of VertexInputBindingDescription structures
            that are provided at graphics pipeline creation time via the
            pVertexBindingDescriptions member of the
            PipelineVertexInputStateCreateInfo structure. The binding member of
            VertexInputBindingDescription must be less than this limit. See
            &lt;&lt;fxvertex-input.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxVertexInputAttributeOffset">
            <summary>
            maxVertexInputAttributeOffset is the maximum vertex input attribute
            offset that can be added to the vertex input binding stride. The
            offset member of the VertexInputAttributeDescription structure must
            be less than or equal to this limit. See &lt;&lt;fxvertex-input.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxVertexInputBindingStride">
            <summary>
            maxVertexInputBindingStride is the maximum vertex input binding
            stride that can be specified in a vertex input binding. The stride
            member of the VertexInputBindingDescription structure must be less
            than or equal to this limit. See &lt;&lt;fxvertex-input.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxVertexOutputComponents">
            <summary>
            maxVertexOutputComponents is the maximum number of components of
            output variables which can be output by a vertex shader. See
            &lt;&lt;shaders-vertex.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxTessellationGenerationLevel">
            <summary>
            maxTessellationGenerationLevel is the maximum tessellation
            generation level supported by the fixed-function tessellation
            primitive generator. See &lt;&lt;tessellation.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxTessellationPatchSize">
            <summary>
            maxTessellationPatchSize is the maximum patch size, in vertices, of
            patches that can be processed by the tessellation control shader
            and tessellation primitive generator. The patchControlPoints member
            of the PipelineTessellationStateCreateInfo structure specified at
            pipeline creation time and the value provided in the OutputVertices
            execution mode of shader modules must be less than or equal to this
            limit. See &lt;&lt;tessellation.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxTessellationControlPerVertexInputComponents">
            <summary>
            maxTessellationControlPerVertexInputComponents is the maximum
            number of components of input variables which can be provided as
            per-vertex inputs to the tessellation control shader stage.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxTessellationControlPerVertexOutputComponents">
            <summary>
            maxTessellationControlPerVertexOutputComponents is the maximum
            number of components of per-vertex output variables which can be
            output from the tessellation control shader stage.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxTessellationControlPerPatchOutputComponents">
            <summary>
            maxTessellationControlPerPatchOutputComponents is the maximum
            number of components of per-patch output variables which can be
            output from the tessellation control shader stage.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxTessellationControlTotalOutputComponents">
            <summary>
            maxTessellationControlTotalOutputComponents is the maximum total
            number of components of per-vertex and per-patch output variables
            which can be output from the tessellation control shader stage.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxTessellationEvaluationInputComponents">
            <summary>
            maxTessellationEvaluationInputComponents is the maximum number of
            components of input variables which can be provided as per-vertex
            inputs to the tessellation evaluation shader stage.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxTessellationEvaluationOutputComponents">
            <summary>
            maxTessellationEvaluationOutputComponents is the maximum number of
            components of per-vertex output variables which can be output from
            the tessellation evaluation shader stage.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxGeometryShaderInvocations">
            <summary>
            maxGeometryShaderInvocations is the maximum invocation count
            supported for instanced geometry shaders. The value provided in the
            Invocations execution mode of shader modules must be less than or
            equal to this limit. See &lt;&lt;geometry.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxGeometryInputComponents">
            <summary>
            maxGeometryInputComponents is the maximum number of components of
            input variables which can be provided as inputs to the geometry
            shader stage.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxGeometryOutputComponents">
            <summary>
            maxGeometryOutputComponents is the maximum number of components of
            output variables which can be output from the geometry shader
            stage.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxGeometryOutputVertices">
            <summary>
            maxGeometryOutputVertices is the maximum number of vertices which
            can be emitted by any geometry shader.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxGeometryTotalOutputComponents">
            <summary>
            maxGeometryTotalOutputComponents is the maximum total number of
            components of output, across all emitted vertices, which can be
            output from the geometry shader stage.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxFragmentInputComponents">
            <summary>
            maxFragmentInputComponents is the maximum number of components of
            input variables which can be provided as inputs to the fragment
            shader stage.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxFragmentOutputAttachments">
            <summary>
            maxFragmentOutputAttachments is the maximum number of output
            attachments which can be written to by the fragment shader stage.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxFragmentDualSourceAttachments">
            <summary>
            maxFragmentDualSrcAttachments is the maximum number of output
            attachments which can be written to by the fragment shader stage
            when blending is enabled and one of the dual source blend modes is
            in use. See &lt;&lt;framebuffer-dsb and dualSrcBlend.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxFragmentCombinedOutputResources">
            <summary>
            maxFragmentCombinedOutputResources is the total number of storage
            buffers, storage images, and output buffers which can be used in
            the fragment shader stage.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxComputeSharedMemorySize">
            <summary>
            maxComputeSharedMemorySize is the maximum total storage size, in
            bytes, of all variables declared with the WorkgroupLocal storage
            class in shader modules (or with the shared storage qualifier in
            GLSL) in the compute shader stage.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxComputeWorkGroupCount">
            <summary>
            maxComputeWorkGroupCount[3] is the maximum number of local
            workgroups that can be dispatched by a single dispatch command.
            These three values represent the maximum number of local workgroups
            for the X, Y, and Z dimensions, respectively. The workgroup count
            parameters to the dispatch commands must be less than or equal to
            the corresponding limit. See &lt;&lt;dispatch.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxComputeWorkGroupInvocations">
            <summary>
            maxComputeWorkGroupInvocations is the maximum total number of
            compute shader invocations in a single local workgroup. The product
            of the X, Y, and Z sizes as specified by the LocalSize execution
            mode in shader modules and by the object decorated by the
            WorkgroupSize decoration must be less than or equal to this limit.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxComputeWorkGroupSize">
            <summary>
            maxComputeWorkGroupSize[3] is the maximum size of a local compute
            workgroup, per dimension. These three values represent the maximum
            local workgroup size in the X, Y, and Z dimensions, respectively.
            The x, y, and z sizes specified by the LocalSize execution mode and
            by the object decorated by the WorkgroupSize decoration in shader
            modules must be less than or equal to the corresponding limit.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.SubPixelPrecisionBits">
            <summary>
            The number of bits of subpixel precision in framebuffer coordinates
            [eq]#x~f~# and [eq]#y~f~#. See &lt;&lt;primsrast.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.SubTexelPrecisionBits">
            <summary>
            The number of bits of precision in the division along an axis of an
            image used for minification and magnification filters.
            [eq]#2^subTexelPrecisionBits^# is the actual number of divisions
            along each axis of the image represented. The filtering hardware
            will snap to these locations when computing the filtered results.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MipmapPrecisionBits">
            <summary>
            The number of bits of division that the LOD calculation for mipmap
            fetching get snapped to when determining the contribution from each
            mip level to the mip filtered results. [eq]#2^mipmapPrecisionBits^#
            is the actual number of divisions. + -- [NOTE] .Note ==== For
            example, if this value is 2 bits then when linearly filtering
            between two levels, each level could: contribute: 0%, 33%, 66%, or
            100% (this is just an example and the amount of contribution
            should: be covered by different equations in the spec). ==== -- +
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxDrawIndexedIndexValue">
            <summary>
            maxDrawIndexedIndexValue is the maximum index value that can be
            used for indexed draw calls when using 32-bit indices. This
            excludes the primitive restart index value of 0xFFFFFFFF. See
            fullDrawIndexUint32.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxDrawIndirectCount">
            <summary>
            The maximum draw count that is supported for indirect draw calls.
            See multiDrawIndirect.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxSamplerLodBias">
            <summary>
            The maximum absolute sampler level of detail bias. The sum of the
            mipLodBias member of the SamplerCreateInfo structure and the Bias
            operand of image sampling operations in shader modules (or 0 if no
            Bias operand is provided to an image sampling operation) are
            clamped to the range [eq]#[-maxSamplerLodBias,+maxSamplerLodBias]#.
            See &lt;&lt;samplers-mipLodBias.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxSamplerAnisotropy">
            <summary>
            The maximum degree of sampler anisotropy. The maximum degree of
            anisotropic filtering used for an image sampling operation is the
            minimum of the maxAnisotropy member of the SamplerCreateInfo
            structure and this limit. See &lt;&lt;samplers-maxAnisotropy.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxViewports">
            <summary>
            The maximum number of active viewports. The viewportCount member of
            the PipelineViewportStateCreateInfo structure that is provided at
            pipeline creation must be less than or equal to this limit.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxViewportDimensions">
            <summary>
            maxViewportDimensions[2] are the maximum viewport dimensions in the
            X (width) and Y (height) dimensions, respectively. The maximum
            viewport dimensions must be greater than or equal to the largest
            image which can be created and used as a framebuffer attachment.
            See Controlling the Viewport.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.ViewportBoundsRange">
            <summary>
            viewportBoundsRange[2] is the [eq]#[minimum, maximum]# range that
            the corners of a viewport must be contained in. This range must be
            at least [eq]#[-2 {times} size, 2 {times} size - 1]#, where
            [eq]#size = max(maxViewportDimensions[0],
            maxViewportDimensions[1])#. See Controlling the Viewport. + --
            [NOTE] .Note ==== The intent of the viewportBoundsRange limit is to
            allow a maximum sized viewport to be arbitrarily shifted relative
            to the output target as long as at least some portion intersects.
            This would give a bounds limit of [eq]#[-size + 1, 2 {times} size -
            1]# which would allow all possible non-empty-set intersections of
            the output target and the viewport. Since these numbers are
            typically powers of two, picking the signed number range using the
            smallest possible number of bits ends up with the specified range.
            ==== --
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.ViewportSubPixelBits">
            <summary>
            The number of bits of subpixel precision for viewport bounds. The
            subpixel precision that floating-point viewport bounds are
            interpreted at is given by this limit.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MinMemoryMapAlignment">
            <summary>
            The minimum required: alignment, in bytes, of host visible memory
            allocations within the host address space. When mapping a memory
            allocation with flink:vkMapMemory, subtracting offset bytes from
            the returned pointer will always produce an integer multiple of
            this limit. See &lt;&lt;memory-device-hostaccess.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MinTexelBufferOffsetAlignment">
            <summary>
            minTexelBufferOffsetAlignment is the minimum required: alignment,
            in bytes, for the offset member of the BufferViewCreateInfo
            structure for texel buffers. When a buffer view is created for a
            buffer which was created with
            VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT or
            VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT set in the usage member of
            the BufferCreateInfo structure, the offset must be an integer
            multiple of this limit.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MinUniformBufferOffsetAlignment">
            <summary>
            minUniformBufferOffsetAlignment is the minimum required: alignment,
            in bytes, for the offset member of the DescriptorBufferInfo
            structure for uniform buffers. When a descriptor of type
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER or
            VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC is updated, the offset
            must be an integer multiple of this limit. Similarly, dynamic
            offsets for uniform buffers must be multiples of this limit.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MinStorageBufferOffsetAlignment">
            <summary>
            minStorageBufferOffsetAlignment is the minimum required: alignment,
            in bytes, for the offset member of the DescriptorBufferInfo
            structure for storage buffers. When a descriptor of type
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or
            VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC is updated, the offset
            must be an integer multiple of this limit. Similarly, dynamic
            offsets for storage buffers must be multiples of this limit.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MinTexelOffset">
            <summary>
            The minimum offset value for the ConstOffset image operand of any
            of the OpImageSample* or OpImageFetch* image instructions.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxTexelOffset">
            <summary>
            The maximum offset value for the ConstOffset image operand of any
            of the OpImageSample* or OpImageFetch* image instructions.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MinTexelGatherOffset">
            <summary>
            The minimum offset value for the Offset or ConstOffsets image
            operands of any of the OpImage*Gather image instructions.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxTexelGatherOffset">
            <summary>
            The maximum offset value for the Offset or ConstOffsets image
            operands of any of the OpImage*Gather image instructions.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MinInterpolationOffset">
            <summary>
            The minimum negative offset value for the offset operand of the
            InterpolateAtOffset extended instruction.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxInterpolationOffset">
            <summary>
            The maximum positive offset value for the offset operand of the
            InterpolateAtOffset extended instruction.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.SubPixelInterpolationOffsetBits">
            <summary>
            subPixelInterpolationOffsetBits is the number of subpixel
            fractional bits that the x and y offsets to the InterpolateAtOffset
            extended instruction may be rounded to as fixed-point values.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxFramebufferWidth">
            <summary>
            The maximum width for a framebuffer. The width member of the
            FramebufferCreateInfo structure must be less than or equal to this
            limit.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxFramebufferHeight">
            <summary>
            The maximum height for a framebuffer. The height member of the
            FramebufferCreateInfo structure must be less than or equal to this
            limit.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxFramebufferLayers">
            <summary>
            The maximum layer count for a layered framebuffer. The layers
            member of the FramebufferCreateInfo structure must be less than or
            equal to this limit.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.FramebufferColorSampleCounts">
            <summary>
            framebufferColorSampleCounts is a bitmask^1^ of SampleCountFlagBits
            bits indicating the color sample counts that are supported for all
            framebuffer color attachments.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.FramebufferDepthSampleCounts">
            <summary>
            framebufferDepthSampleCounts is a bitmask^1^ of SampleCountFlagBits
            bits indicating the supported depth sample counts for all
            framebuffer depth/stencil attachments, when the format includes a
            depth component.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.FramebufferStencilSampleCounts">
            <summary>
            A bitmask^1^ of SampleCountFlagBits bits indicating the supported
            stencil sample counts for all framebuffer depth/stencil
            attachments, when the format includes a stencil component.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.FramebufferNoAttachmentsSampleCounts">
            <summary>
            A bitmask^1^ of SampleCountFlagBits bits indicating the supported
            sample counts for a framebuffer with no attachments.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxColorAttachments">
            <summary>
            The maximum number of color attachments that can be used by a
            subpass in a render pass. The colorAttachmentCount member of the
            SubpassDescription structure must be less than or equal to this
            limit.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.SampledImageColorSampleCounts">
            <summary>
            sampledImageColorSampleCounts is a bitmask^1^ of
            SampleCountFlagBits bits indicating the sample counts supported for
            all 2D images created with VK_IMAGE_TILING_OPTIMAL, usage
            containing VK_IMAGE_USAGE_SAMPLED_BIT, and a non-integer color
            format.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.SampledImageIntegerSampleCounts">
            <summary>
            sampledImageIntegerSampleCounts is a bitmask^1^ of
            SampleCountFlagBits bits indicating the sample counts supported for
            all 2D images created with VK_IMAGE_TILING_OPTIMAL, usage
            containing VK_IMAGE_USAGE_SAMPLED_BIT, and an integer color format.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.SampledImageDepthSampleCounts">
            <summary>
            sampledImageDepthSampleCounts is a bitmask^1^ of
            SampleCountFlagBits bits indicating the sample counts supported for
            all 2D images created with VK_IMAGE_TILING_OPTIMAL, usage
            containing VK_IMAGE_USAGE_SAMPLED_BIT, and a depth format.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.SampledImageStencilSampleCounts">
            <summary>
            sampledImageStencilSampleCounts is a bitmask^1^ of
            SampleCountFlagBits bits indicating the sample supported for all 2D
            images created with VK_IMAGE_TILING_OPTIMAL, usage containing
            VK_IMAGE_USAGE_SAMPLED_BIT, and a stencil format.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.StorageImageSampleCounts">
            <summary>
            storageImageSampleCounts is a bitmask^1^ of SampleCountFlagBits
            bits indicating the sample counts supported for all 2D images
            created with VK_IMAGE_TILING_OPTIMAL, and usage containing
            VK_IMAGE_USAGE_STORAGE_BIT.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxSampleMaskWords">
            <summary>
            The maximum number of array elements of a variable decorated with
            the SampleMask built-in decoration.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.TimestampComputeAndGraphics">
            <summary>
            timestampComputeAndGraphics indicates support for timestamps on all
            graphics and compute queues. If this limit is set to VK_TRUE, all
            queues that advertise the VK_QUEUE_GRAPHICS_BIT or
            VK_QUEUE_COMPUTE_BIT in the QueueFamilyProperties::queueFlags
            support QueueFamilyProperties::timestampValidBits of at least 36.
            See Timestamp Queries.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.TimestampPeriod">
            <summary>
            The number of nanoseconds required: for a timestamp query to be
            incremented by 1. See Timestamp Queries.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxClipDistances">
            <summary>
            The maximum number of clip distances that can be used in a single
            shader stage. The size of any array declared with the ClipDistance
            built-in decoration in a shader module must be less than or equal
            to this limit.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxCullDistances">
            <summary>
            The maximum number of cull distances that can be used in a single
            shader stage. The size of any array declared with the CullDistance
            built-in decoration in a shader module must be less than or equal
            to this limit.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.MaxCombinedClipAndCullDistances">
            <summary>
            maxCombinedClipAndCullDistances is the maximum combined number of
            clip and cull distances that can be used in a single shader stage.
            The sum of the sizes of any pair of arrays declared with the
            ClipDistance and CullDistance built-in decoration used by a single
            shader stage in a shader module must be less than or equal to this
            limit.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.DiscreteQueuePriorities">
            <summary>
            discreteQueuePriorities is the number of discrete priorities that
            can be assigned to a queue based on the value of each member of
            DeviceQueueCreateInfo::pQueuePriorities. This must be at least 2,
            and levels must be spread evenly over the range, with at least one
            level at 1.0, and another at 0.0. See
            &lt;&lt;devsandqueues-priority.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.PointSizeRange">
            <summary>
            pointSizeRange[2] is the range [eq]#[minimum,maximum]# of supported
            sizes for points. Values written to variables decorated with the
            PointSize built-in decoration are clamped to this range.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.LineWidthRange">
            <summary>
            lineWidthRange[2] is the range [eq]#[minimum,maximum]# of supported
            widths for lines. Values specified by the lineWidth member of the
            PipelineRasterizationStateCreateInfo or the lineWidth parameter to
            fname:vkCmdSetLineWidth are clamped to this range.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.PointSizeGranularity">
            <summary>
            The granularity of supported point sizes. Not all point sizes in
            the range defined by pointSizeRange are supported. This limit
            specifies the granularity (or increment) between successive
            supported point sizes.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.LineWidthGranularity">
            <summary>
            The granularity of supported line widths. Not all line widths in
            the range defined by lineWidthRange are supported. This limit
            specifies the granularity (or increment) between successive
            supported line widths.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.StrictLines">
            <summary>
            Indicates whether lines are rasterized according to the preferred
            method of rasterization. If set to VK_FALSE, lines may be
            rasterized under a relaxed set of rules. If set to VK_TRUE, lines
            are rasterized as per the strict definition. See Basic Line Segment
            Rasterization.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.StandardSampleLocations">
            <summary>
            standardSampleLocations indicates whether rasterization uses the
            standard sample locations as documented in Multisampling. If set to
            VK_TRUE, the implementation uses the documented sample locations.
            If set to VK_FALSE, the implementation may use different sample
            locations.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.OptimalBufferCopyOffsetAlignment">
            <summary>
            optimalBufferCopyOffsetAlignment is the optimal buffer offset
            alignment in bytes for fname:vkCmdCopyBufferToImage and
            fname:vkCmdCopyImageToBuffer. The per texel alignment requirements
            are still enforced, this is just an additional alignment
            recommendation for optimal performance and power.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.OptimalBufferCopyRowPitchAlignment">
            <summary>
            optimalBufferCopyRowPitchAlignment is the optimal buffer row pitch
            alignment in bytes for fname:vkCmdCopyBufferToImage and
            fname:vkCmdCopyImageToBuffer. Row pitch is the number of bytes
            between texels with the same X coordinate in adjacent rows (Y
            coordinates differ by one). The per texel alignment requirements
            are still enforced, this is just an additional alignment
            recommendation for optimal performance and power.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceLimits.NonCoherentAtomSize">
            <summary>
            The size and alignment in bytes that bounds concurrent access to
            host-mapped device memory.
            </summary>
        </member>
        <member name="M:SharpVk.PhysicalDeviceLimits.MarshalFrom(SharpVk.Interop.PhysicalDeviceLimits*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PhysicalDeviceMemoryProperties">
            <summary>
            Structure specifying physical device memory properties.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceMemoryProperties.MemoryTypes">
            <summary>
            An array of MemoryType structures describing the _memory types_
            that can be used to access memory allocated from the heaps
            specified by memoryHeaps.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceMemoryProperties.MemoryHeaps">
            <summary>
            An array of MemoryHeap structures describing the _memory heaps_
            from which memory can be allocated.
            </summary>
        </member>
        <member name="M:SharpVk.PhysicalDeviceMemoryProperties.MarshalFrom(SharpVk.Interop.PhysicalDeviceMemoryProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PhysicalDeviceProperties">
            <summary>
            Structure specifying physical device properties.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceProperties.ApiVersion">
            <summary>
            The version of Vulkan supported by the device, encoded as described
            in the API Version Numbers and Semantics section.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceProperties.DriverVersion">
            <summary>
            The vendor-specified version of the driver.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceProperties.VendorID">
            <summary>
            A unique identifier for the _vendor_ (see below) of the physical
            device.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceProperties.DeviceID">
            <summary>
            A unique identifier for the physical device among devices available
            from the vendor.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceProperties.DeviceType">
            <summary>
            A PhysicalDeviceType specifying the type of device.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceProperties.DeviceName">
            <summary>
            A string containing the name of the device.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceProperties.PipelineCacheUUID">
            <summary>
            An array of size VK_UUID_SIZE, containing 8-bit values that
            represent a universally unique identifier for the device.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceProperties.Limits">
            <summary>
            The PhysicalDeviceLimits structure which specifies device-specific
            limits of the physical device. See Limits for details.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceProperties.SparseProperties">
            <summary>
            The PhysicalDeviceSparseProperties structure which specifies
            various sparse related properties of the physical device. See
            Sparse Properties for details.
            </summary>
        </member>
        <member name="M:SharpVk.PhysicalDeviceProperties.MarshalFrom(SharpVk.Interop.PhysicalDeviceProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PhysicalDeviceSparseProperties">
            <summary>
            Structure specifying physical device sparse memory properties.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceSparseProperties.ResidencyStandard2DBlockShape">
            <summary>
            residencyStandard2DBlockShape is VK_TRUE if the physical device
            will access all single-sample 2D sparse resources using the
            standard sparse image block shapes (based on image format), as
            described in the Standard Sparse Image Block Shapes (Single Sample)
            table. If this property is not supported the value returned in the
            imageGranularity member of the SparseImageFormatProperties
            structure for single-sample 2D images is not required: to match the
            standard sparse image block dimensions listed in the table.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceSparseProperties.ResidencyStandard2DMultisampleBlockShape">
            <summary>
            residencyStandard2DMultisampleBlockShape is VK_TRUE if the physical
            device will access all multisample 2D sparse resources using the
            standard sparse image block shapes (based on image format), as
            described in the Standard Sparse Image Block Shapes (MSAA) table.
            If this property is not supported, the value returned in the
            imageGranularity member of the SparseImageFormatProperties
            structure for multisample 2D images is not required: to match the
            standard sparse image block dimensions listed in the table.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceSparseProperties.ResidencyStandard3DBlockShape">
            <summary>
            residencyStandard3DBlockShape is VK_TRUE if the physical device
            will access all 3D sparse resources using the standard sparse image
            block shapes (based on image format), as described in the Standard
            Sparse Image Block Shapes (Single Sample) table. If this property
            is not supported, the value returned in the imageGranularity member
            of the SparseImageFormatProperties structure for 3D images is not
            required: to match the standard sparse image block dimensions
            listed in the table.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceSparseProperties.ResidencyAlignedMipSize">
            <summary>
            residencyAlignedMipSize is VK_TRUE if images with mip level
            dimensions that are not integer multiples of the corresponding
            dimensions of the sparse image block may be placed in the mip tail.
            If this property is not reported, only mip levels with dimensions
            smaller than the imageGranularity member of the
            SparseImageFormatProperties structure will be placed in the mip
            tail. If this property is reported the implementation is allowed to
            return VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT in the flags
            member of SparseImageFormatProperties, indicating that mip level
            dimensions that are not integer multiples of the corresponding
            dimensions of the sparse image block will be placed in the mip
            tail.
            </summary>
        </member>
        <member name="P:SharpVk.PhysicalDeviceSparseProperties.ResidencyNonResidentStrict">
            <summary>
            Specifies whether the physical device can consistently access
            non-resident regions of a resource. If this property is VK_TRUE,
            access to non-resident regions of resources will be guaranteed to
            return values as if the resource were populated with 0; writes to
            non-resident regions will be discarded.
            </summary>
        </member>
        <member name="M:SharpVk.PhysicalDeviceSparseProperties.MarshalFrom(SharpVk.Interop.PhysicalDeviceSparseProperties*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PhysicalDeviceType">
            <summary>
            Supported physical device types.
            </summary>
        </member>
        <member name="F:SharpVk.PhysicalDeviceType.Other">
            <summary>
            VK_PHYSICAL_DEVICE_TYPE_OTHER The device does not match any other
            available types.
            </summary>
        </member>
        <member name="F:SharpVk.PhysicalDeviceType.IntegratedGpu">
            <summary>
            VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU The device is typically one
            embedded in or tightly coupled with the host.
            </summary>
        </member>
        <member name="F:SharpVk.PhysicalDeviceType.DiscreteGpu">
            <summary>
            VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU The device is typically a
            separate processor connected to the host via an interlink.
            </summary>
        </member>
        <member name="F:SharpVk.PhysicalDeviceType.VirtualGpu">
            <summary>
            VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU The device is typically a
            virtual node in a virtualization environment.
            </summary>
        </member>
        <member name="F:SharpVk.PhysicalDeviceType.Cpu">
            <summary>
            VK_PHYSICAL_DEVICE_TYPE_CPU The device is typically running on the
            same processors as the host.
            </summary>
        </member>
        <member name="T:SharpVk.Pipeline">
            <summary>
            Opaque handle to a pipeline object.
            </summary>
        </member>
        <member name="P:SharpVk.Pipeline.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Pipeline.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a pipeline object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.PipelineBindPoint">
            <summary>
            Specify the bind point of a pipeline object to a command buffer.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineBindPoint.Graphics">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PipelineBindPoint.Compute">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineCache">
            <summary>
            Opaque handle to a pipeline cache object.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineCache.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.PipelineCache.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a pipeline cache object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.PipelineCache.GetData">
            <summary>
            Get the data store from a pipeline cache.
            </summary>
        </member>
        <member name="M:SharpVk.PipelineCache.MergePipelineCaches(System.Nullable{SharpVk.ArrayProxy{SharpVk.PipelineCache}})">
            <summary>
            Combine the data stores of pipeline caches.
            </summary>
        </member>
        <member name="T:SharpVk.PipelineCacheCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PipelineCacheCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineCacheCreateInfo">
            <summary>
            Structure specifying parameters of a newly created pipeline cache.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineCacheCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineCacheCreateInfo.InitialData">
            <summary>
            A pointer to previously retrieved pipeline cache data. If the
            pipeline cache data is incompatible (as defined below) with the
            device, the pipeline cache will be initially empty. If
            initialDataSize is zero, pInitialData is ignored.
            </summary>
        </member>
        <member name="M:SharpVk.PipelineCacheCreateInfo.MarshalTo(SharpVk.Interop.PipelineCacheCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineCacheHeaderVersion">
            <summary>
            Encode pipeline cache version.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineCacheHeaderVersion.One">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineColorBlendAttachmentState">
            <summary>
            Structure specifying a pipeline color blend attachment state.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineColorBlendAttachmentState.BlendEnable">
            <summary>
            blendEnable controls whether blending is enabled for the
            corresponding color attachment. If blending is not enabled, the
            source fragment's color for that attachment is passed through
            unmodified.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineColorBlendAttachmentState.SourceColorBlendFactor">
            <summary>
            srcColorBlendFactor selects which blend factor is used to determine
            the source factors [eq]#(S~r~,S~g~,S~b~)#.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineColorBlendAttachmentState.DestinationColorBlendFactor">
            <summary>
            dstColorBlendFactor selects which blend factor is used to determine
            the destination factors [eq]#(D~r~,D~g~,D~b~)#.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineColorBlendAttachmentState.ColorBlendOp">
            <summary>
            colorBlendOp selects which blend operation is used to calculate the
            RGB values to write to the color attachment.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineColorBlendAttachmentState.SourceAlphaBlendFactor">
            <summary>
            srcAlphaBlendFactor selects which blend factor is used to determine
            the source factor [eq]#S~a~#.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineColorBlendAttachmentState.DestinationAlphaBlendFactor">
            <summary>
            dstAlphaBlendFactor selects which blend factor is used to determine
            the destination factor [eq]#D~a~#.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineColorBlendAttachmentState.AlphaBlendOp">
            <summary>
            alphaBlendOp selects which blend operation is use to calculate the
            alpha values to write to the color attachment.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineColorBlendAttachmentState.ColorWriteMask">
            <summary>
            A bitmask selecting which of the R, G, B, and/or A components are
            enabled for writing, as described later in this chapter.
            </summary>
        </member>
        <member name="M:SharpVk.PipelineColorBlendAttachmentState.MarshalTo(SharpVk.Interop.PipelineColorBlendAttachmentState*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.PipelineColorBlendAttachmentState.MarshalFrom(SharpVk.Interop.PipelineColorBlendAttachmentState*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineColorBlendStateCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PipelineColorBlendStateCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineColorBlendStateCreateInfo">
            <summary>
            Structure specifying parameters of a newly created pipeline color blend
            state.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineColorBlendStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineColorBlendStateCreateInfo.LogicOpEnable">
            <summary>
            logicOpEnable controls whether to apply Logical Operations.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineColorBlendStateCreateInfo.LogicOp">
            <summary>
            logicOp selects which logical operation to apply.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineColorBlendStateCreateInfo.Attachments">
            <summary>
            pAttachments: is array of per target attachment states.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineColorBlendStateCreateInfo.BlendConstants">
            <summary>
            An array of four values used as the R, G, B, and A components of
            the blend constant that are used in blending, depending on the
            blend factor.
            </summary>
        </member>
        <member name="M:SharpVk.PipelineColorBlendStateCreateInfo.MarshalTo(SharpVk.Interop.PipelineColorBlendStateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineCreateFlags">
            <summary>
            Bitmask controlling how a pipeline is generated.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PipelineCreateFlags.DisableOptimization">
            <summary>
            Specifies that the created pipeline will not be optimized. Using
            this flag may reduce the time taken to create the pipeline.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineCreateFlags.AllowDerivatives">
            <summary>
            Specifies that the pipeline to be created is allowed to be the
            parent of a pipeline that will be created in a subsequent call to
            flink:vkCreateGraphicsPipelines.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineCreateFlags.Derivative">
            <summary>
            Specifies that the pipeline to be created will be a child of a
            previously created parent pipeline.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineCreateFlags.ViewIndexFromDeviceIndexBitKhx">
            <summary>
            Specifies that any shader input variables decorated as DeviceIndex
            will be assigned values as if they were decorated as ViewIndex.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineCreateFlags.DispatchBaseKhx">
            <summary>
            Specifies that a compute pipeline can be used with
            flink:vkCmdDispatchBaseKHX with a non-zero base workgroup.
            </summary>
        </member>
        <member name="T:SharpVk.PipelineDepthStencilStateCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PipelineDepthStencilStateCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineDepthStencilStateCreateInfo">
            <summary>
            Structure specifying parameters of a newly created pipeline depth
            stencil state.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineDepthStencilStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineDepthStencilStateCreateInfo.DepthTestEnable">
            <summary>
            depthTestEnable controls whether depth testing is enabled.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineDepthStencilStateCreateInfo.DepthWriteEnable">
            <summary>
            depthWriteEnable controls whether depth writes are enabled.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineDepthStencilStateCreateInfo.DepthCompareOp">
            <summary>
            The comparison operator used in the depth test.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineDepthStencilStateCreateInfo.DepthBoundsTestEnable">
            <summary>
            depthBoundsTestEnable controls whether depth bounds testing is
            enabled.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineDepthStencilStateCreateInfo.StencilTestEnable">
            <summary>
            stencilTestEnable controls whether stencil testing is enabled.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineDepthStencilStateCreateInfo.Front">
            <summary>
            front and back control the parameters of the stencil test.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineDepthStencilStateCreateInfo.Back">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PipelineDepthStencilStateCreateInfo.MinDepthBounds">
            <summary>
            minDepthBounds and maxDepthBounds define the range of values used
            in the depth bounds test.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineDepthStencilStateCreateInfo.MaxDepthBounds">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.PipelineDepthStencilStateCreateInfo.MarshalTo(SharpVk.Interop.PipelineDepthStencilStateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineDynamicStateCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PipelineDynamicStateCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineDynamicStateCreateInfo">
            <summary>
            Structure specifying parameters of a newly created pipeline dynamic
            state.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineDynamicStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineDynamicStateCreateInfo.DynamicStates">
            <summary>
            An array of DynamicState enums which indicate which pieces of
            pipeline state will use the values from dynamic state commands
            rather than from the pipeline state creation info.
            </summary>
        </member>
        <member name="M:SharpVk.PipelineDynamicStateCreateInfo.MarshalTo(SharpVk.Interop.PipelineDynamicStateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineInputAssemblyStateCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PipelineInputAssemblyStateCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineInputAssemblyStateCreateInfo">
            <summary>
            Structure specifying parameters of a newly created pipeline input
            assembly state.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineInputAssemblyStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineInputAssemblyStateCreateInfo.Topology">
            <summary>
            A PrimitiveTopology defining the primitive topology, as described
            below.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineInputAssemblyStateCreateInfo.PrimitiveRestartEnable">
            <summary>
            primitiveRestartEnable controls whether a special vertex index
            value is treated as restarting the assembly of primitives. This
            enable only applies to indexed draws (flink:vkCmdDrawIndexed and
            flink:vkCmdDrawIndexedIndirect), and the special index value is
            either 0xFFFFFFFF when the indexType parameter of
            fname:vkCmdBindIndexBuffer is equal to VK_INDEX_TYPE_UINT32, or
            0xFFFF when indexType is equal to VK_INDEX_TYPE_UINT16. Primitive
            restart is not allowed for "`list`" topologies.
            </summary>
        </member>
        <member name="M:SharpVk.PipelineInputAssemblyStateCreateInfo.MarshalTo(SharpVk.Interop.PipelineInputAssemblyStateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineLayout">
            <summary>
            Opaque handle to a pipeline layout object.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineLayout.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.PipelineLayout.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a pipeline layout object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.PipelineLayoutCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PipelineLayoutCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineLayoutCreateInfo">
            <summary>
            Structure specifying the parameters of a newly created pipeline layout
            object.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineLayoutCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineLayoutCreateInfo.SetLayouts">
            <summary>
            An array of DescriptorSetLayout objects.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineLayoutCreateInfo.PushConstantRanges">
            <summary>
            An array of PushConstantRange structures defining a set of push
            constant ranges for use in a single pipeline layout. In addition to
            descriptor set layouts, a pipeline layout also describes how many
            push constants can be accessed by each stage of the pipeline. +
            [NOTE] .Note ==== Push constants represent a high speed path to
            modify constant data in pipelines that is expected to outperform
            memory-backed resource updates. ====
            </summary>
        </member>
        <member name="M:SharpVk.PipelineLayoutCreateInfo.MarshalTo(SharpVk.Interop.PipelineLayoutCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineMultisampleStateCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PipelineMultisampleStateCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineMultisampleStateCreateInfo">
            <summary>
            Structure specifying parameters of a newly created pipeline multisample
            state.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineMultisampleStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineMultisampleStateCreateInfo.RasterizationSamples">
            <summary>
            A SampleCountFlagBits specifying the number of samples per pixel
            used in rasterization.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineMultisampleStateCreateInfo.SampleShadingEnable">
            <summary>
            Specifies that fragment shading executes per-sample if VK_TRUE, or
            per-fragment if VK_FALSE, as described in Sample Shading.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineMultisampleStateCreateInfo.MinSampleShading">
            <summary>
            The minimum fraction of sample shading, as described in Sample
            Shading.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineMultisampleStateCreateInfo.SampleMask">
            <summary>
            A bitmask of static coverage information that is ANDed with the
            coverage information generated during rasterization, as described
            in Sample Mask.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineMultisampleStateCreateInfo.AlphaToCoverageEnable">
            <summary>
            alphaToCoverageEnable controls whether a temporary coverage value
            is generated based on the alpha component of the fragment's first
            color output as specified in the Multisample Coverage section.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineMultisampleStateCreateInfo.AlphaToOneEnable">
            <summary>
            alphaToOneEnable controls whether the alpha component of the
            fragment's first color output is replaced with one as described in
            Multisample Coverage.
            </summary>
        </member>
        <member name="M:SharpVk.PipelineMultisampleStateCreateInfo.MarshalTo(SharpVk.Interop.PipelineMultisampleStateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineRasterizationStateCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PipelineRasterizationStateCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineRasterizationStateCreateInfo">
            <summary>
            Structure specifying parameters of a newly created pipeline
            rasterization state.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineRasterizationStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineRasterizationStateCreateInfo.DepthClampEnable">
            <summary>
            depthClampEnable controls whether to clamp the fragment's depth
            values instead of clipping primitives to the z planes of the
            frustum, as described in Primitive Clipping.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineRasterizationStateCreateInfo.RasterizerDiscardEnable">
            <summary>
            rasterizerDiscardEnable controls whether primitives are discarded
            immediately before the rasterization stage.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineRasterizationStateCreateInfo.PolygonMode">
            <summary>
            The triangle rendering mode. See PolygonMode.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineRasterizationStateCreateInfo.CullMode">
            <summary>
            The triangle facing direction used for primitive culling. See
            CullModeFlagBits.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineRasterizationStateCreateInfo.FrontFace">
            <summary>
            The front-facing triangle orientation to be used for culling. See
            FrontFace.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineRasterizationStateCreateInfo.DepthBiasEnable">
            <summary>
            depthBiasEnable controls whether to bias fragment depth values.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineRasterizationStateCreateInfo.DepthBiasConstantFactor">
            <summary>
            A scalar factor controlling the constant depth value added to each
            fragment.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineRasterizationStateCreateInfo.DepthBiasClamp">
            <summary>
            The maximum (or minimum) depth bias of a fragment.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineRasterizationStateCreateInfo.DepthBiasSlopeFactor">
            <summary>
            A scalar factor applied to a fragment's slope in depth bias
            calculations.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineRasterizationStateCreateInfo.LineWidth">
            <summary>
            The width of rasterized line segments.
            </summary>
        </member>
        <member name="M:SharpVk.PipelineRasterizationStateCreateInfo.MarshalTo(SharpVk.Interop.PipelineRasterizationStateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineShaderStageCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PipelineShaderStageCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineShaderStageCreateInfo">
            <summary>
            Structure specifying parameters of a newly created pipeline shader
            stage.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineShaderStageCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineShaderStageCreateInfo.Stage">
            <summary>
            stage names a single pipeline stage. Bits which can be set include:
            + --
            </summary>
        </member>
        <member name="P:SharpVk.PipelineShaderStageCreateInfo.Module">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PipelineShaderStageCreateInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.PipelineShaderStageCreateInfo.SpecializationInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.PipelineShaderStageCreateInfo.MarshalTo(SharpVk.Interop.PipelineShaderStageCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineStageFlags">
            <summary>
            Bitmask specifying pipeline stages.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.TopOfPipe">
            <summary>
            VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT: Stage of the pipeline where any
            commands are initially received by the queue.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.DrawIndirect">
            <summary>
            VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT: Stage of the pipeline where
            Draw/DispatchIndirect data structures are consumed. This stage also
            includes reading commands written by flink:vkCmdProcessCommandsNVX.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.VertexInput">
            <summary>
            VK_PIPELINE_STAGE_VERTEX_INPUT_BIT: Stage of the pipeline where
            vertex and index buffers are consumed.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.VertexShader">
            <summary>
            VK_PIPELINE_STAGE_VERTEX_SHADER_BIT: Vertex shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.TessellationControlShader">
            <summary>
            Tessellation control shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.TessellationEvaluationShader">
            <summary>
            Tessellation evaluation shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.GeometryShader">
            <summary>
            VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT: Geometry shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.FragmentShader">
            <summary>
            VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT: Fragment shader stage.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.EarlyFragmentTests">
            <summary>
            VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT: Stage of the pipeline
            where early fragment tests (depth and stencil tests before fragment
            shading) are performed. This stage also includes subpass load
            operations for framebuffer attachments with a depth/stencil format.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.LateFragmentTests">
            <summary>
            VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT: Stage of the pipeline
            where late fragment tests (depth and stencil tests after fragment
            shading) are performed. This stage also includes subpass store
            operations for framebuffer attachments with a depth/stencil format.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.ColorAttachmentOutput">
            <summary>
            VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT: Stage of the
            pipeline after blending where the final color values are output
            from the pipeline. This stage also includes subpass load and store
            operations and multisample resolve operations for framebuffer
            attachments with a color format.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.ComputeShader">
            <summary>
            VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT: Execution of a compute
            shader.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.Transfer">
            <summary>
            VK_PIPELINE_STAGE_TRANSFER_BIT: Execution of copy commands. This
            includes the operations resulting from all copy commands, clear
            commands (with the exception of flink:vkCmdClearAttachments), and
            flink:vkCmdCopyQueryPoolResults.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.BottomOfPipe">
            <summary>
            VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT: Final stage in the pipeline
            where operations generated by all commands complete execution.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.Host">
            <summary>
            VK_PIPELINE_STAGE_HOST_BIT: A pseudo-stage indicating execution on
            the host of reads/writes of device memory. This stage is not
            invoked by any commands recorded in a command buffer.
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.AllGraphics">
            <summary>
            VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT: Execution of all graphics
            pipeline stages. Equivalent to the logical or of:
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.AllCommands">
            <summary>
            All stages supported on the queue
            </summary>
        </member>
        <member name="F:SharpVk.PipelineStageFlags.CommandProcessBitNvx">
            <summary>
            VK_PIPELINE_STAGE_COMMAND_PROCESS_BIT_NVX: Stage of the pipeline
            where device-side generation of commands via
            flink:vkCmdProcessCommandsNVX is handled.
            </summary>
        </member>
        <member name="T:SharpVk.PipelineTessellationStateCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PipelineTessellationStateCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineTessellationStateCreateInfo">
            <summary>
            Structure specifying parameters of a newly created pipeline
            tessellation state.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineTessellationStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineTessellationStateCreateInfo.PatchControlPoints">
            <summary>
            patchControlPoints number of control points per patch.
            </summary>
        </member>
        <member name="M:SharpVk.PipelineTessellationStateCreateInfo.MarshalTo(SharpVk.Interop.PipelineTessellationStateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineVertexInputStateCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PipelineVertexInputStateCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineVertexInputStateCreateInfo">
            <summary>
            Structure specifying parameters of a newly created pipeline vertex
            input state.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineVertexInputStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineVertexInputStateCreateInfo.VertexBindingDescriptions">
            <summary>
            An array of VertexInputBindingDescription structures.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineVertexInputStateCreateInfo.VertexAttributeDescriptions">
            <summary>
            An array of VertexInputAttributeDescription structures.
            </summary>
        </member>
        <member name="M:SharpVk.PipelineVertexInputStateCreateInfo.MarshalTo(SharpVk.Interop.PipelineVertexInputStateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineViewportStateCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PipelineViewportStateCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PipelineViewportStateCreateInfo">
            <summary>
            Structure specifying parameters of a newly created pipeline viewport
            state.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineViewportStateCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineViewportStateCreateInfo.Viewports">
            <summary>
            An array of Viewport structures, defining the viewport transforms.
            If the viewport state is dynamic, this member is ignored.
            </summary>
        </member>
        <member name="P:SharpVk.PipelineViewportStateCreateInfo.Scissors">
            <summary>
            An array of Rect2D structures which define the rectangular bounds
            of the scissor for the corresponding viewport. If the scissor state
            is dynamic, this member is ignored.
            </summary>
        </member>
        <member name="M:SharpVk.PipelineViewportStateCreateInfo.MarshalTo(SharpVk.Interop.PipelineViewportStateCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PolygonMode">
            <summary>
            Control polygon rasterization mode.
            </summary>
        </member>
        <member name="F:SharpVk.PolygonMode.Fill">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PolygonMode.Line">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PolygonMode.Point">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PolygonMode.FillRectangleNv">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PrimitiveTopology">
            <summary>
            Supported primitive topologies.
            </summary>
        </member>
        <member name="F:SharpVk.PrimitiveTopology.PointList">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PrimitiveTopology.LineList">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PrimitiveTopology.LineStrip">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PrimitiveTopology.TriangleList">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PrimitiveTopology.TriangleStrip">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PrimitiveTopology.TriangleFan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PrimitiveTopology.LineListWithAdjacency">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PrimitiveTopology.LineStripWithAdjacency">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PrimitiveTopology.TriangleListWithAdjacency">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PrimitiveTopology.TriangleStripWithAdjacency">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PrimitiveTopology.PatchList">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.PushConstantRange">
            <summary>
            Structure specifying a push constant range.
            </summary>
        </member>
        <member name="M:SharpVk.PushConstantRange.#ctor(SharpVk.ShaderStageFlags,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.PushConstantRange.StageFlags">
            <summary>
            A set of stage flags describing the shader stages that will access
            a range of push constants. If a particular stage is not included in
            the range, then accessing members of that range of push constants
            from the corresponding shader stage will result in undefined data
            being read.
            </summary>
        </member>
        <member name="F:SharpVk.PushConstantRange.Offset">
            <summary>
            offset and size are the start offset and size, respectively,
            consumed by the range. Both offset and size are in units of bytes
            and must be a multiple of 4. The layout of the push constant
            variables is specified in the shader.
            </summary>
        </member>
        <member name="F:SharpVk.PushConstantRange.Size">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.QueryControlFlags">
            <summary>
            Bitmask specifying constraints on a query.
            </summary>
        </member>
        <member name="F:SharpVk.QueryControlFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryControlFlags.Precise">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.QueryPipelineStatisticFlags">
            <summary>
            Bitmask specifying queried pipeline statistics.
            </summary>
        </member>
        <member name="F:SharpVk.QueryPipelineStatisticFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryPipelineStatisticFlags.InputAssemblyVertices">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryPipelineStatisticFlags.InputAssemblyPrimitives">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryPipelineStatisticFlags.VertexShaderInvocations">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryPipelineStatisticFlags.GeometryShaderInvocations">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryPipelineStatisticFlags.GeometryShaderPrimitives">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryPipelineStatisticFlags.ClippingInvocations">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryPipelineStatisticFlags.ClippingPrimitives">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryPipelineStatisticFlags.FragmentShaderInvocations">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryPipelineStatisticFlags.TessellationControlShaderPatches">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryPipelineStatisticFlags.TessellationEvaluationShaderInvocations">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryPipelineStatisticFlags.ComputeShaderInvocations">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.QueryPool">
            <summary>
            Opaque handle to a query pool object.
            </summary>
        </member>
        <member name="P:SharpVk.QueryPool.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.QueryPool.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a query pool object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.QueryPool.GetResults(System.UInt32,System.UInt32,System.Nullable{SharpVk.ArrayProxy{System.Byte}},SharpVk.DeviceSize,System.Nullable{SharpVk.QueryResultFlags})">
            <summary>
            Copy results of queries in a query pool to a host memory region.
            </summary>
        </member>
        <member name="T:SharpVk.QueryPoolCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryPoolCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.QueryPoolCreateInfo">
            <summary>
            Structure specifying parameters of a newly created query pool.
            </summary>
        </member>
        <member name="P:SharpVk.QueryPoolCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.QueryPoolCreateInfo.QueryType">
            <summary>
            The type of queries managed by the pool.
            </summary>
        </member>
        <member name="P:SharpVk.QueryPoolCreateInfo.QueryCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.QueryPoolCreateInfo.PipelineStatistics">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.QueryPoolCreateInfo.MarshalTo(SharpVk.Interop.QueryPoolCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.QueryResultFlags">
            <summary>
            Bitmask specifying how and when query results are returned.
            </summary>
        </member>
        <member name="F:SharpVk.QueryResultFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryResultFlags.QueryResult64">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryResultFlags.Wait">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryResultFlags.WithAvailability">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryResultFlags.Partial">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.QueryType">
            <summary>
            Specify the type of queries managed by a query pool.
            </summary>
        </member>
        <member name="F:SharpVk.QueryType.Occlusion">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryType.PipelineStatistics">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueryType.Timestamp">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Queue">
            <summary>
            Opaque handle to a queue object.
            </summary>
        </member>
        <member name="P:SharpVk.Queue.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Queue.Submit(System.Nullable{SharpVk.ArrayProxy{SharpVk.SubmitInfo}},SharpVk.Fence)">
            <summary>
            Submits a sequence of semaphores or command buffers to a queue.
            </summary>
        </member>
        <member name="M:SharpVk.Queue.WaitIdle">
            <summary>
            Wait for a queue to become idle.
            </summary>
        </member>
        <member name="M:SharpVk.Queue.BindSparse(System.Nullable{SharpVk.ArrayProxy{SharpVk.BindSparseInfo}},SharpVk.Fence)">
            <summary>
            Bind device memory to a sparse resource object.
            </summary>
        </member>
        <member name="T:SharpVk.QueueFamilyProperties">
            <summary>
            Structure providing information about a queue family.
            </summary>
        </member>
        <member name="M:SharpVk.QueueFamilyProperties.#ctor(SharpVk.QueueFlags,System.UInt32,System.UInt32,SharpVk.Extent3D)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueueFamilyProperties.QueueFlags">
            <summary>
            queueFlags contains flags indicating the capabilities of the queues
            in this queue family.
            </summary>
        </member>
        <member name="F:SharpVk.QueueFamilyProperties.QueueCount">
            <summary>
            The unsigned integer count of queues in this queue family.
            </summary>
        </member>
        <member name="F:SharpVk.QueueFamilyProperties.TimestampValidBits">
            <summary>
            The unsigned integer count of meaningful bits in the timestamps
            written via fname:vkCmdWriteTimestamp. The valid range for the
            count is 36..64 bits, or a value of 0, indicating no support for
            timestamps. Bits outside the valid range are guaranteed to be
            zeros.
            </summary>
        </member>
        <member name="F:SharpVk.QueueFamilyProperties.MinImageTransferGranularity">
            <summary>
            The minimum granularity supported for image transfer operations on
            the queues in this queue family.
            </summary>
        </member>
        <member name="T:SharpVk.QueueFlags">
            <summary>
            Bitmask specifying capabilities of queues in a queue family.
            </summary>
        </member>
        <member name="F:SharpVk.QueueFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.QueueFlags.Graphics">
            <summary>
            The queues in this queue family support graphics operations.
            </summary>
        </member>
        <member name="F:SharpVk.QueueFlags.Compute">
            <summary>
            The queues in this queue family support compute operations.
            </summary>
        </member>
        <member name="F:SharpVk.QueueFlags.Transfer">
            <summary>
            The queues in this queue family support transfer operations.
            </summary>
        </member>
        <member name="F:SharpVk.QueueFlags.SparseBinding">
            <summary>
            The queues in this queue family support sparse memory management
            operations. If any of the sparse resource features are enabled,
            then at least one queue family must support this bit.
            </summary>
        </member>
        <member name="T:SharpVk.ReallocationFunctionDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Rect2D">
            <summary>
            Structure specifying a two-dimensional subregion.
            </summary>
        </member>
        <member name="M:SharpVk.Rect2D.#ctor(SharpVk.Offset2D,SharpVk.Extent2D)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Rect2D.Offset">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Rect2D.Extent">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Rect3D">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Rect3D.#ctor(SharpVk.Offset3D,SharpVk.Extent3D)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Rect3D.Offset">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Rect3D.Extent">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.RenderPass">
            <summary>
            Opaque handle to a render pass object.
            </summary>
        </member>
        <member name="P:SharpVk.RenderPass.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.RenderPass.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a render pass object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="M:SharpVk.RenderPass.GetRenderAreaGranularity">
            <summary>
            Returns the granularity for optimal render area.
            </summary>
        </member>
        <member name="T:SharpVk.RenderPassBeginInfo">
            <summary>
            Structure specifying render pass begin info.
            </summary>
        </member>
        <member name="P:SharpVk.RenderPassBeginInfo.RenderPass">
            <summary>
            The render pass to begin an instance of.
            </summary>
        </member>
        <member name="P:SharpVk.RenderPassBeginInfo.Framebuffer">
            <summary>
            The framebuffer containing the attachments that are used with the
            render pass.
            </summary>
        </member>
        <member name="P:SharpVk.RenderPassBeginInfo.RenderArea">
            <summary>
            The render area that is affected by the render pass instance, and
            is described in more detail below.
            </summary>
        </member>
        <member name="P:SharpVk.RenderPassBeginInfo.ClearValues">
            <summary>
            An array of ClearValue structures that contains clear values for
            each attachment, if the attachment uses a loadOp value of
            VK_ATTACHMENT_LOAD_OP_CLEAR or if the attachment has a
            depth/stencil format and uses a stencilLoadOp value of
            VK_ATTACHMENT_LOAD_OP_CLEAR. The array is indexed by attachment
            number. Only elements corresponding to cleared attachments are
            used. Other elements of pClearValues are ignored.
            </summary>
        </member>
        <member name="M:SharpVk.RenderPassBeginInfo.MarshalTo(SharpVk.Interop.RenderPassBeginInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.RenderPassCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.RenderPassCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.RenderPassCreateInfo">
            <summary>
            Structure specifying parameters of a newly created render pass.
            </summary>
        </member>
        <member name="P:SharpVk.RenderPassCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.RenderPassCreateInfo.Attachments">
            <summary>
            An array of attachmentCount number of AttachmentDescription
            structures describing properties of the attachments, or Null if
            attachmentCount is zero.
            </summary>
        </member>
        <member name="P:SharpVk.RenderPassCreateInfo.Subpasses">
            <summary>
            An array of SubpassDescription structures describing properties of
            the subpasses.
            </summary>
        </member>
        <member name="P:SharpVk.RenderPassCreateInfo.Dependencies">
            <summary>
            An array of dependencyCount number of SubpassDependency structures
            describing dependencies between pairs of subpasses, or Null if
            dependencyCount is zero.
            </summary>
        </member>
        <member name="M:SharpVk.RenderPassCreateInfo.MarshalTo(SharpVk.Interop.RenderPassCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Result">
            <summary>
            Vulkan command return codes.
            </summary>
        </member>
        <member name="F:SharpVk.Result.Success">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.NotReady">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.Timeout">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.EventSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.EventReset">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.Incomplete">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorOutOfHostMemory">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorOutOfDeviceMemory">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorInitializationFailed">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorDeviceLost">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorMemoryMapFailed">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorLayerNotPresent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorExtensionNotPresent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorFeatureNotPresent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorIncompatibleDriver">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorTooManyObjects">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorFormatNotSupported">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorFragmentedPool">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorSurfaceLostKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorNativeWindowInUseKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.SuboptimalKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorOutOfDateKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorIncompatibleDisplayKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorValidationFailedExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorInvalidShaderNv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorOutOfPoolMemoryKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Result.ErrorInvalidExternalHandleKhr">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SampleCountFlags">
            <summary>
            Bitmask specifying sample counts supported for an image used for
            storage operations.
            </summary>
        </member>
        <member name="F:SharpVk.SampleCountFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SampleCountFlags.SampleCount1">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SampleCountFlags.SampleCount2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SampleCountFlags.SampleCount4">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SampleCountFlags.SampleCount8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SampleCountFlags.SampleCount16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SampleCountFlags.SampleCount32">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SampleCountFlags.SampleCount64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Sampler">
            <summary>
            Opaque handle to a sampler object.
            </summary>
        </member>
        <member name="P:SharpVk.Sampler.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Sampler.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a sampler object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.SamplerAddressMode">
            <summary>
            Specify behavior of sampling with texture coordinates outside an image.
            </summary>
        </member>
        <member name="F:SharpVk.SamplerAddressMode.Repeat">
            <summary>
            Indicates that the repeat wrap mode will be used.
            </summary>
        </member>
        <member name="F:SharpVk.SamplerAddressMode.MirroredRepeat">
            <summary>
            Indicates that the mirrored repeat wrap mode will be used.
            </summary>
        </member>
        <member name="F:SharpVk.SamplerAddressMode.ClampToEdge">
            <summary>
            Indicates that the clamp to edge wrap mode will be used.
            </summary>
        </member>
        <member name="F:SharpVk.SamplerAddressMode.ClampToBorder">
            <summary>
            Indicates that the clamp to border wrap mode will be used.
            </summary>
        </member>
        <member name="F:SharpVk.SamplerAddressMode.MirrorClampToEdgeKhr">
            <summary>
            Indicates that the mirror clamp to edge wrap mode will be used.
            This is only valid if the "VK_KHR_mirror_clamp_to_edge" extension
            is enabled.
            </summary>
        </member>
        <member name="T:SharpVk.SamplerCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SamplerCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SamplerCreateInfo">
            <summary>
            Structure specifying parameters of a newly created sampler.
            </summary>
        </member>
        <member name="P:SharpVk.SamplerCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.SamplerCreateInfo.MagFilter">
            <summary>
            The magnification filter to apply to lookups.
            </summary>
        </member>
        <member name="P:SharpVk.SamplerCreateInfo.MinFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SamplerCreateInfo.MipmapMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SamplerCreateInfo.AddressModeU">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SamplerCreateInfo.AddressModeV">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SamplerCreateInfo.AddressModeW">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SamplerCreateInfo.MipLodBias">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SamplerCreateInfo.AnisotropyEnable">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SamplerCreateInfo.MaxAnisotropy">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SamplerCreateInfo.CompareEnable">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SamplerCreateInfo.CompareOp">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SamplerCreateInfo.MinLod">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SamplerCreateInfo.MaxLod">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SamplerCreateInfo.BorderColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SamplerCreateInfo.UnnormalizedCoordinates">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.SamplerCreateInfo.MarshalTo(SharpVk.Interop.SamplerCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SamplerMipmapMode">
            <summary>
            Specify mipmap mode used for texture lookups.
            </summary>
        </member>
        <member name="F:SharpVk.SamplerMipmapMode.Nearest">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SamplerMipmapMode.Linear">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Semaphore">
            <summary>
            Opaque handle to a semaphore object.
            </summary>
        </member>
        <member name="P:SharpVk.Semaphore.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.Semaphore.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a semaphore object.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.SemaphoreCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SemaphoreCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SemaphoreCreateInfo">
            <summary>
            Structure specifying parameters of a newly created semaphore.
            </summary>
        </member>
        <member name="P:SharpVk.SemaphoreCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="M:SharpVk.SemaphoreCreateInfo.MarshalTo(SharpVk.Interop.SemaphoreCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ShaderModule">
            <summary>
            Opaque handle to a shader module object.
            </summary>
        </member>
        <member name="P:SharpVk.ShaderModule.RawHandle">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.ShaderModule.Destroy(System.Nullable{SharpVk.AllocationCallbacks})">
            <summary>
            Destroy a shader module module.
            </summary>
            <param name="allocator">
            An optional AllocationCallbacks instance that controls host memory
            allocation.
            </param>
        </member>
        <member name="T:SharpVk.ShaderModuleCreateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ShaderModuleCreateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ShaderModuleCreateInfo">
            <summary>
            Structure specifying parameters of a newly created shader module.
            </summary>
        </member>
        <member name="P:SharpVk.ShaderModuleCreateInfo.Flags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:SharpVk.ShaderModuleCreateInfo.CodeSize">
            <summary>
            The size, in bytes, of the code pointed to by pCode.
            </summary>
        </member>
        <member name="P:SharpVk.ShaderModuleCreateInfo.Code">
            <summary>
            pCode points to code that is used to create the shader module. The
            type and format of the code is determined from the content of the
            memory addressed by pCode.
            </summary>
        </member>
        <member name="M:SharpVk.ShaderModuleCreateInfo.MarshalTo(SharpVk.Interop.ShaderModuleCreateInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.ShaderStageFlags">
            <summary>
            Bitmask specifying a pipeline stage.
            </summary>
        </member>
        <member name="F:SharpVk.ShaderStageFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ShaderStageFlags.Vertex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ShaderStageFlags.TessellationControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ShaderStageFlags.TessellationEvaluation">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ShaderStageFlags.Geometry">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ShaderStageFlags.Fragment">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ShaderStageFlags.Compute">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ShaderStageFlags.AllGraphics">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.ShaderStageFlags.All">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SharingMode">
            <summary>
            Buffer and image sharing modes.
            </summary>
        </member>
        <member name="F:SharpVk.SharingMode.Exclusive">
            <summary>
            Specifies that access to any range or image subresource of the
            object will be exclusive to a single queue family at a time.
            </summary>
        </member>
        <member name="F:SharpVk.SharingMode.Concurrent">
            <summary>
            Specifies that concurrent access to any range or image subresource
            of the object from multiple queue families is supported.
            </summary>
        </member>
        <member name="T:SharpVk.SparseBufferMemoryBindInfo">
            <summary>
            Structure specifying a sparse buffer memory bind operation.
            </summary>
        </member>
        <member name="P:SharpVk.SparseBufferMemoryBindInfo.Buffer">
            <summary>
            The Buffer object to be bound.
            </summary>
        </member>
        <member name="P:SharpVk.SparseBufferMemoryBindInfo.Binds">
            <summary>
            Array of SparseMemoryBind structures.
            </summary>
        </member>
        <member name="M:SharpVk.SparseBufferMemoryBindInfo.MarshalTo(SharpVk.Interop.SparseBufferMemoryBindInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SparseImageFormatFlags">
            <summary>
            Bitmask specifying additional information about a sparse image
            resource.
            </summary>
        </member>
        <member name="F:SharpVk.SparseImageFormatFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SparseImageFormatFlags.SingleMiptail">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SparseImageFormatFlags.AlignedMipSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SparseImageFormatFlags.NonstandardBlockSize">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SparseImageFormatProperties">
            <summary>
            Structure specifying sparse image format properties.
            </summary>
        </member>
        <member name="M:SharpVk.SparseImageFormatProperties.#ctor(SharpVk.ImageAspectFlags,SharpVk.Extent3D,SharpVk.SparseImageFormatFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SparseImageFormatProperties.AspectMask">
            <summary>
            A bitmask of ImageAspectFlagBits specifying which aspects of the
            image the properties apply to.
            </summary>
        </member>
        <member name="F:SharpVk.SparseImageFormatProperties.ImageGranularity">
            <summary>
            The width, height, and depth of the sparse image block in texels or
            compressed texel blocks.
            </summary>
        </member>
        <member name="F:SharpVk.SparseImageFormatProperties.Flags">
            <summary>
            A bitmask specifying additional information about the sparse
            resource. Bits which can be set include: + --
            </summary>
        </member>
        <member name="T:SharpVk.SparseImageMemoryBind">
            <summary>
            Structure specifying sparse image memory bind.
            </summary>
        </member>
        <member name="P:SharpVk.SparseImageMemoryBind.Subresource">
            <summary>
            The aspectMask and region of interest in the image.
            </summary>
        </member>
        <member name="P:SharpVk.SparseImageMemoryBind.Offset">
            <summary>
            offset are the coordinates of the first texel within the image
            subresource to bind.
            </summary>
        </member>
        <member name="P:SharpVk.SparseImageMemoryBind.Extent">
            <summary>
            The size in texels of the region within the image subresource to
            bind. The extent must be a multiple of the sparse image block
            dimensions, except when binding sparse image blocks along the edge
            of an image subresource it can instead be such that any coordinate
            of [eq]#offset + extent# equals the corresponding dimensions of the
            image subresource.
            </summary>
        </member>
        <member name="P:SharpVk.SparseImageMemoryBind.Memory">
            <summary>
            The DeviceMemory object that the sparse image blocks of the image
            are bound to. If memory is null, the sparse image blocks are
            unbound.
            </summary>
        </member>
        <member name="P:SharpVk.SparseImageMemoryBind.MemoryOffset">
            <summary>
            An offset into DeviceMemory object. If memory is null, this value
            is ignored.
            </summary>
        </member>
        <member name="P:SharpVk.SparseImageMemoryBind.Flags">
            <summary>
            flags are sparse memory binding flags.
            </summary>
        </member>
        <member name="M:SharpVk.SparseImageMemoryBind.MarshalTo(SharpVk.Interop.SparseImageMemoryBind*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.SparseImageMemoryBind.MarshalFrom(SharpVk.Interop.SparseImageMemoryBind*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SparseImageMemoryBindInfo">
            <summary>
            Structure specifying sparse image memory bind info.
            </summary>
        </member>
        <member name="P:SharpVk.SparseImageMemoryBindInfo.Image">
            <summary>
            The Image object to be bound
            </summary>
        </member>
        <member name="P:SharpVk.SparseImageMemoryBindInfo.Binds">
            <summary>
            Array of SparseImageMemoryBind structures
            </summary>
        </member>
        <member name="M:SharpVk.SparseImageMemoryBindInfo.MarshalTo(SharpVk.Interop.SparseImageMemoryBindInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SparseImageMemoryRequirements">
            <summary>
            Structure specifying sparse image memory requirements.
            </summary>
        </member>
        <member name="M:SharpVk.SparseImageMemoryRequirements.#ctor(SharpVk.SparseImageFormatProperties,System.UInt32,SharpVk.DeviceSize,SharpVk.DeviceSize,SharpVk.DeviceSize)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SparseImageMemoryRequirements.FormatProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SparseImageMemoryRequirements.ImageMipTailFirstLod">
            <summary>
            The first mip level at which image subresources are included in the
            mip tail region.
            </summary>
        </member>
        <member name="F:SharpVk.SparseImageMemoryRequirements.ImageMipTailSize">
            <summary>
            The memory size (in bytes) of the mip tail region. If
            formatProperties.flags contains
            VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT, this is the size of the
            whole mip tail, otherwise this is the size of the mip tail of a
            single array layer. This value is guaranteed to be a multiple of
            the sparse block size in bytes.
            </summary>
        </member>
        <member name="F:SharpVk.SparseImageMemoryRequirements.ImageMipTailOffset">
            <summary>
            The opaque memory offset used with SparseImageOpaqueMemoryBindInfo
            to bind the mip tail region(s).
            </summary>
        </member>
        <member name="F:SharpVk.SparseImageMemoryRequirements.ImageMipTailStride">
            <summary>
            The offset stride between each array-layer's mip tail, if
            formatProperties.flags does not contain
            VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT (otherwise the value is
            undefined).
            </summary>
        </member>
        <member name="T:SharpVk.SparseImageOpaqueMemoryBindInfo">
            <summary>
            Structure specifying sparse image opaque memory bind info.
            </summary>
        </member>
        <member name="P:SharpVk.SparseImageOpaqueMemoryBindInfo.Image">
            <summary>
            The Image object to be bound.
            </summary>
        </member>
        <member name="P:SharpVk.SparseImageOpaqueMemoryBindInfo.Binds">
            <summary>
            Array of SparseMemoryBind structures.
            </summary>
        </member>
        <member name="M:SharpVk.SparseImageOpaqueMemoryBindInfo.MarshalTo(SharpVk.Interop.SparseImageOpaqueMemoryBindInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SparseMemoryBind">
            <summary>
            Structure specifying a sparse memory bind operation.
            </summary>
        </member>
        <member name="P:SharpVk.SparseMemoryBind.ResourceOffset">
            <summary>
            The offset into the resource.
            </summary>
        </member>
        <member name="P:SharpVk.SparseMemoryBind.Size">
            <summary>
            The size of the memory region to be bound.
            </summary>
        </member>
        <member name="P:SharpVk.SparseMemoryBind.Memory">
            <summary>
            The DeviceMemory object that the range of the resource is bound to.
            If memory is null, the range is unbound.
            </summary>
        </member>
        <member name="P:SharpVk.SparseMemoryBind.MemoryOffset">
            <summary>
            The offset into the DeviceMemory object to bind the resource range
            to. If memory is null, this value is ignored.
            </summary>
        </member>
        <member name="P:SharpVk.SparseMemoryBind.Flags">
            <summary>
            A bitmask specifying usage of the binding operation. Bits which can
            be set include: + --
            </summary>
        </member>
        <member name="M:SharpVk.SparseMemoryBind.MarshalTo(SharpVk.Interop.SparseMemoryBind*)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.SparseMemoryBind.MarshalFrom(SharpVk.Interop.SparseMemoryBind*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SparseMemoryBindFlags">
            <summary>
            Bitmask specifying usage of a sparse memory binding operation.
            </summary>
        </member>
        <member name="F:SharpVk.SparseMemoryBindFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SparseMemoryBindFlags.Metadata">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SpecializationInfo">
            <summary>
            Structure specifying specialization info.
            </summary>
        </member>
        <member name="P:SharpVk.SpecializationInfo.MapEntries">
            <summary>
            An array of SpecializationMapEntry which maps constant IDs to
            offsets in pData.
            </summary>
        </member>
        <member name="P:SharpVk.SpecializationInfo.Data">
            <summary>
            pData contains the actual constant values to specialize with.
            </summary>
        </member>
        <member name="M:SharpVk.SpecializationInfo.MarshalTo(SharpVk.Interop.SpecializationInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SpecializationMapEntry">
            <summary>
            Structure specifying a specialization map entry.
            </summary>
        </member>
        <member name="M:SharpVk.SpecializationMapEntry.#ctor(System.UInt32,System.UInt32,SharpVk.HostSize)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SpecializationMapEntry.ConstantID">
            <summary>
            The ID of the specialization constant in SPIR-V.
            </summary>
        </member>
        <member name="F:SharpVk.SpecializationMapEntry.Offset">
            <summary>
            The byte offset of the specialization constant value within the
            supplied data buffer.
            </summary>
        </member>
        <member name="F:SharpVk.SpecializationMapEntry.Size">
            <summary>
            The byte size of the specialization constant value within the
            supplied data buffer.
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.SourceLanguage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.SourceLanguage.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.SourceLanguage.ESSL">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.SourceLanguage.GLSL">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.SourceLanguage.OpenCL_C">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.SourceLanguage.OpenCL_CPP">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.ExecutionModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionModel.Vertex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionModel.TessellationControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionModel.TessellationEvaluation">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionModel.Geometry">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionModel.Fragment">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionModel.GLCompute">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionModel.Kernel">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.AddressingModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.AddressingModel.Logical">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.AddressingModel.Physical32">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.AddressingModel.Physical64">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.MemoryModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemoryModel.Simple">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemoryModel.GLSL450">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemoryModel.OpenCL">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.ExecutionMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.Invocations">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.SpacingEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.SpacingFractionalEven">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.SpacingFractionalOdd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.VertexOrderCw">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.VertexOrderCcw">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.PixelCenterInteger">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.OriginUpperLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.OriginLowerLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.EarlyFragmentTests">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.PointMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.Xfb">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.DepthReplacing">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.DepthGreater">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.DepthLess">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.DepthUnchanged">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.LocalSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.LocalSizeHint">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.InputPoints">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.InputLines">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.InputLinesAdjacency">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.Triangles">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.InputTrianglesAdjacency">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.Quads">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.Isolines">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.OutputVertices">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.OutputPoints">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.OutputLineStrip">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.OutputTriangleStrip">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.VecTypeHint">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.ContractionOff">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.Initializer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.Finalizer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.SubgroupSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ExecutionMode.SubgroupsPerWorkgroup">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.StorageClass">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.StorageClass.UniformConstant">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.StorageClass.Input">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.StorageClass.Uniform">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.StorageClass.Output">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.StorageClass.Workgroup">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.StorageClass.CrossWorkgroup">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.StorageClass.Private">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.StorageClass.Function">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.StorageClass.Generic">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.StorageClass.PushConstant">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.StorageClass.AtomicCounter">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.StorageClass.Image">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.Dim">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Dim.Dim1D">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Dim.Dim2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Dim.Dim3D">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Dim.Cube">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Dim.Rect">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Dim.Buffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Dim.SubpassData">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.SamplerAddressingMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.SamplerAddressingMode.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.SamplerAddressingMode.ClampToEdge">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.SamplerAddressingMode.Clamp">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.SamplerAddressingMode.Repeat">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.SamplerAddressingMode.RepeatMirrored">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.SamplerFilterMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.SamplerFilterMode.Nearest">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.SamplerFilterMode.Linear">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.ImageFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rgba32f">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rgba16f">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.R32f">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rgba8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rgba8Snorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rg32f">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rg16f">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.R11fG11fB10f">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.R16f">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rgba16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rgb10A2">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rg16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rg8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.R16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.R8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rgba16Snorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rg16Snorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rg8Snorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.R16Snorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.R8Snorm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rgba32i">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rgba16i">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rgba8i">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.R32i">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rg32i">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rg16i">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rg8i">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.R16i">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.R8i">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rgba32ui">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rgba16ui">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rgba8ui">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.R32ui">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rgb10a2ui">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rg32ui">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rg16ui">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.Rg8ui">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.R16ui">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageFormat.R8ui">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.ImageChannelOrder">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.R">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.A">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.RG">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.RA">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.RGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.RGBA">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.BGRA">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.ARGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.Intensity">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.Luminance">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.Rx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.RGx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.RGBx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.Depth">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.DepthStencil">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.sRGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.sRGBx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.sRGBA">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.sBGRA">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelOrder.ABGR">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.ImageChannelDataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelDataType.SnormInt8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelDataType.SnormInt16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelDataType.UnormInt8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelDataType.UnormInt16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelDataType.UnormShort565">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelDataType.UnormShort555">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelDataType.UnormInt101010">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelDataType.SignedInt8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelDataType.SignedInt16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelDataType.SignedInt32">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelDataType.UnsignedInt8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelDataType.UnsignedInt16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelDataType.UnsignedInt32">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelDataType.HalfFloat">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelDataType.Float">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelDataType.UnormInt24">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageChannelDataType.UnormInt101010_2">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.ImageOperands">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageOperands.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageOperands.Bias">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageOperands.Lod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageOperands.Grad">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageOperands.ConstOffset">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageOperands.Offset">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageOperands.ConstOffsets">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageOperands.Sample">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.ImageOperands.MinLod">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.FPFastMathMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FPFastMathMode.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FPFastMathMode.NotNaN">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FPFastMathMode.NotInf">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FPFastMathMode.NSZ">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FPFastMathMode.AllowRecip">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FPFastMathMode.Fast">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.FPRoundingMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FPRoundingMode.RTE">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FPRoundingMode.RTZ">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FPRoundingMode.RTP">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FPRoundingMode.RTN">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.LinkageType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.LinkageType.Export">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.LinkageType.Import">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.AccessQualifier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.AccessQualifier.ReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.AccessQualifier.WriteOnly">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.AccessQualifier.ReadWrite">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.FunctionParameterAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FunctionParameterAttribute.Zext">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FunctionParameterAttribute.Sext">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FunctionParameterAttribute.ByVal">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FunctionParameterAttribute.Sret">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FunctionParameterAttribute.NoAlias">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FunctionParameterAttribute.NoCapture">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FunctionParameterAttribute.NoWrite">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FunctionParameterAttribute.NoReadWrite">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.Decoration">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.RelaxedPrecision">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.SpecId">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Block">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.BufferBlock">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.RowMajor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.ColMajor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.ArrayStride">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.MatrixStride">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.GLSLShared">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.GLSLPacked">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.CPacked">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.BuiltIn">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.NoPerspective">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Flat">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Patch">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Centroid">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Sample">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Invariant">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Restrict">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Aliased">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Volatile">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Constant">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Coherent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.NonWritable">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.NonReadable">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Uniform">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.SaturatedConversion">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Stream">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Location">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Component">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Index">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Binding">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.DescriptorSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Offset">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.XfbBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.XfbStride">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.FuncParamAttr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.FPRoundingMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.FPFastMathMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.LinkageAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.NoContraction">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.InputAttachmentIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.Alignment">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Decoration.MaxByteOffset">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.BuiltIn">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.Position">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.PointSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.ClipDistance">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.CullDistance">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.VertexId">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.InstanceId">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.PrimitiveId">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.InvocationId">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.Layer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.ViewportIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.TessLevelOuter">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.TessLevelInner">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.TessCoord">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.PatchVertices">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.FragCoord">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.PointCoord">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.FrontFacing">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.SampleId">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.SamplePosition">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.SampleMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.FragDepth">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.HelperInvocation">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.NumWorkgroups">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.WorkgroupSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.WorkgroupId">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.LocalInvocationId">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.GlobalInvocationId">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.LocalInvocationIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.WorkDim">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.GlobalSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.EnqueuedWorkgroupSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.GlobalOffset">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.GlobalLinearId">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.SubgroupSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.SubgroupMaxSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.NumSubgroups">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.NumEnqueuedSubgroups">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.SubgroupId">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.SubgroupLocalInvocationId">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.VertexIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.InstanceIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.SubgroupEqMaskKHR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.SubgroupGeMaskKHR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.SubgroupGtMaskKHR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.SubgroupLeMaskKHR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.SubgroupLtMaskKHR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.BaseVertex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.BaseInstance">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.BuiltIn.DrawIndex">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.SelectionControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.SelectionControl.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.SelectionControl.Flatten">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.SelectionControl.DontFlatten">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.LoopControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.LoopControl.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.LoopControl.Unroll">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.LoopControl.DontUnroll">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.LoopControl.DependencyInfinite">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.LoopControl.DependencyLength">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.FunctionControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FunctionControl.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FunctionControl.Inline">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FunctionControl.DontInline">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FunctionControl.Pure">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.FunctionControl.Const">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.MemorySemantics">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemorySemantics.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemorySemantics.Acquire">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemorySemantics.Release">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemorySemantics.AcquireRelease">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemorySemantics.SequentiallyConsistent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemorySemantics.UniformMemory">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemorySemantics.SubgroupMemory">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemorySemantics.WorkgroupMemory">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemorySemantics.CrossWorkgroupMemory">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemorySemantics.AtomicCounterMemory">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemorySemantics.ImageMemory">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.MemoryAccess">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemoryAccess.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemoryAccess.Volatile">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemoryAccess.Aligned">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.MemoryAccess.Nontemporal">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.Scope">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Scope.CrossDevice">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Scope.Device">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Scope.Workgroup">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Scope.Subgroup">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Scope.Invocation">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.GroupOperation">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.GroupOperation.Reduce">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.GroupOperation.InclusiveScan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.GroupOperation.ExclusiveScan">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.KernelEnqueueFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.KernelEnqueueFlags.NoWait">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.KernelEnqueueFlags.WaitKernel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.KernelEnqueueFlags.WaitWorkGroup">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.KernelProfilingInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.KernelProfilingInfo.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.KernelProfilingInfo.CmdExecTime">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.Capability">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Matrix">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Shader">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Geometry">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Tessellation">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Linkage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Kernel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Vector16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Float16Buffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Float16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Float64">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Int64">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Int64Atomics">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.ImageBasic">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.ImageReadWrite">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.ImageMipmap">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Pipes">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Groups">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.DeviceEnqueue">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.LiteralSampler">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.AtomicStorage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Int16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.TessellationPointSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.GeometryPointSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.ImageGatherExtended">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.StorageImageMultisample">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.UniformBufferArrayDynamicIndexing">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.SampledImageArrayDynamicIndexing">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.StorageBufferArrayDynamicIndexing">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.StorageImageArrayDynamicIndexing">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.ClipDistance">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.CullDistance">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.ImageCubeArray">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.SampleRateShading">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.ImageRect">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.SampledRect">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.GenericPointer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Int8">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.InputAttachment">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.SparseResidency">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.MinLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Sampled1D">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.Image1D">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.SampledCubeArray">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.SampledBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.ImageBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.ImageMSArray">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.StorageImageExtendedFormats">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.ImageQuery">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.DerivativeControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.InterpolationFunction">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.TransformFeedback">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.GeometryStreams">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.StorageImageReadWithoutFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.StorageImageWriteWithoutFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.MultiViewport">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.SubgroupDispatch">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.NamedBarrier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.PipeStorage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.SubgroupBallotKHR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Capability.DrawParameters">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.Op">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpNop">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpUndef">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSourceContinued">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSource">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSourceExtension">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpName">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpMemberName">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpString">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpLine">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpExtension">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpExtInstImport">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpExtInst">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpMemoryModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpEntryPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpExecutionMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpCapability">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeVoid">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeBool">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeFloat">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeVector">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeMatrix">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeSampler">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeSampledImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeArray">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeRuntimeArray">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeStruct">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeOpaque">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypePointer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeFunction">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeDeviceEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeReserveId">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeQueue">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypePipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeForwardPointer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpConstantTrue">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpConstantFalse">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpConstant">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpConstantComposite">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpConstantSampler">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpConstantNull">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSpecConstantTrue">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSpecConstantFalse">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSpecConstant">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSpecConstantComposite">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSpecConstantOp">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFunction">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFunctionParameter">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFunctionEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFunctionCall">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpVariable">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageTexelPointer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpLoad">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpStore">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpCopyMemory">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpCopyMemorySized">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAccessChain">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpInBoundsAccessChain">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpPtrAccessChain">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpArrayLength">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGenericPtrMemSemantics">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpInBoundsPtrAccessChain">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpDecorate">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpMemberDecorate">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpDecorationGroup">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupDecorate">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupMemberDecorate">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpVectorExtractDynamic">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpVectorInsertDynamic">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpVectorShuffle">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpCompositeConstruct">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpCompositeExtract">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpCompositeInsert">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpCopyObject">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTranspose">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSampledImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSampleImplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSampleExplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSampleDrefImplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSampleDrefExplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSampleProjImplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSampleProjExplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSampleProjDrefImplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSampleProjDrefExplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageFetch">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageGather">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageDrefGather">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageRead">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageWrite">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageQueryFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageQueryOrder">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageQuerySizeLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageQuerySize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageQueryLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageQueryLevels">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageQuerySamples">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpConvertFToU">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpConvertFToS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpConvertSToF">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpConvertUToF">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpUConvert">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSConvert">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFConvert">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpQuantizeToF16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpConvertPtrToU">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSatConvertSToU">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSatConvertUToS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpConvertUToPtr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpPtrCastToGeneric">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGenericCastToPtr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGenericCastToPtrExplicit">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpBitcast">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSNegate">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFNegate">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpIAdd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFAdd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpISub">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFSub">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpIMul">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFMul">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpUDiv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSDiv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFDiv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpUMod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSRem">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSMod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFRem">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFMod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpVectorTimesScalar">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpMatrixTimesScalar">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpVectorTimesMatrix">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpMatrixTimesVector">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpMatrixTimesMatrix">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpOuterProduct">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpDot">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpIAddCarry">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpISubBorrow">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpUMulExtended">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSMulExtended">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAny">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAll">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpIsNan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpIsInf">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpIsFinite">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpIsNormal">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSignBitSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpLessOrGreater">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpOrdered">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpUnordered">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpLogicalEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpLogicalNotEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpLogicalOr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpLogicalAnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpLogicalNot">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSelect">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpIEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpINotEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpUGreaterThan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSGreaterThan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpUGreaterThanEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSGreaterThanEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpULessThan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSLessThan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpULessThanEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSLessThanEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFOrdEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFUnordEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFOrdNotEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFUnordNotEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFOrdLessThan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFUnordLessThan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFOrdGreaterThan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFUnordGreaterThan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFOrdLessThanEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFUnordLessThanEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFOrdGreaterThanEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFUnordGreaterThanEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpShiftRightLogical">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpShiftRightArithmetic">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpShiftLeftLogical">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpBitwiseOr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpBitwiseXor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpBitwiseAnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpNot">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpBitFieldInsert">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpBitFieldSExtract">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpBitFieldUExtract">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpBitReverse">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpBitCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpDPdx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpDPdy">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFwidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpDPdxFine">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpDPdyFine">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFwidthFine">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpDPdxCoarse">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpDPdyCoarse">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpFwidthCoarse">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpEmitVertex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpEndPrimitive">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpEmitStreamVertex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpEndStreamPrimitive">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpControlBarrier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpMemoryBarrier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicLoad">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicStore">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicExchange">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicCompareExchange">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicCompareExchangeWeak">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicIIncrement">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicIDecrement">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicIAdd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicISub">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicSMin">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicUMin">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicSMax">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicUMax">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicAnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicOr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicXor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpPhi">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpLoopMerge">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSelectionMerge">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpLabel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpBranch">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpBranchConditional">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSwitch">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpKill">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpReturn">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpReturnValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpUnreachable">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpLifetimeStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpLifetimeStop">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupAsyncCopy">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupWaitEvents">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupAll">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupAny">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupBroadcast">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupIAdd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupFAdd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupFMin">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupUMin">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupSMin">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupFMax">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupUMax">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupSMax">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpReadPipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpWritePipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpReservedReadPipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpReservedWritePipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpReserveReadPipePackets">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpReserveWritePipePackets">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpCommitReadPipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpCommitWritePipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpIsValidReserveId">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGetNumPipePackets">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGetMaxPipePackets">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupReserveReadPipePackets">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupReserveWritePipePackets">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupCommitReadPipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGroupCommitWritePipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpEnqueueMarker">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpEnqueueKernel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGetKernelNDrangeSubGroupCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGetKernelNDrangeMaxSubGroupSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGetKernelWorkGroupSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGetKernelPreferredWorkGroupSizeMultiple">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpRetainEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpReleaseEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpCreateUserEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpIsValidEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSetUserEventStatus">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpCaptureEventProfilingInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGetDefaultQueue">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpBuildNDRange">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSparseSampleImplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSparseSampleExplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSparseSampleDrefImplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSparseSampleDrefExplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSparseSampleProjImplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSparseSampleProjExplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSparseSampleProjDrefImplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSparseSampleProjDrefExplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSparseFetch">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSparseGather">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSparseDrefGather">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSparseTexelsResident">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpNoLine">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicFlagTestAndSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpAtomicFlagClear">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpImageSparseRead">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSizeOf">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypePipeStorage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpConstantPipeStorage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpCreatePipeFromPipeStorage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGetKernelLocalSizeForSubgroupCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpGetKernelMaxNumSubgroups">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpTypeNamedBarrier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpNamedBarrierInitialize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpMemoryNamedBarrier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpModuleProcessed">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSubgroupBallotKHR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Op.OpSubgroupFirstInvocationKHR">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.ISpirvSink">
            <summary>
            Represents a target for outputing SPIR-V statements
            </summary>
        </member>
        <member name="M:SharpVk.Spirv.ISpirvSink.AddStatement(System.Nullable{SharpVk.Spirv.ResultId},SharpVk.Spirv.SpirvStatement)">
            <summary>
            Output the specified statement with an optional ResultID
            </summary>
            <param name="resultId">
            If not null; the ResultId representing the result of this
            statement.
            </param>
            <param name="statement">
            The SPIR-V statement to output to this sink instance.
            </param>
        </member>
        <member name="T:SharpVk.Spirv.SpirvSinkExtensions">
            <summary>
            Common overloads for ISpirvSink instances.
            </summary>
        </member>
        <member name="M:SharpVk.Spirv.SpirvSinkExtensions.AddStatement(SharpVk.Spirv.ISpirvSink,SharpVk.Spirv.SpirvStatement)">
            <summary>
            Output the specified statement
            </summary>
            <param name="sink">
            The sink to which to output the statement.
            </param>
            <param name="statement">
            The SPIR-V statement to output to this sink instance.
            </param>
        </member>
        <member name="M:SharpVk.Spirv.SpirvSinkExtensions.AddStatement(SharpVk.Spirv.ISpirvSink,SharpVk.Spirv.Op,System.Object[])">
            <summary>
            Output an SPIR-V statement with the specified opcode and operands
            arguments.
            </summary>
            <param name="sink">
            The sink to which to output the statement.
            </param>
            <param name="op">
            The opcode of the statement to output.
            </param>
            <param name="operands">
            A list of operand arguments to include in the output statement.
            </param>
        </member>
        <member name="M:SharpVk.Spirv.SpirvSinkExtensions.AddStatement(SharpVk.Spirv.ISpirvSink,SharpVk.Spirv.ResultId,SharpVk.Spirv.Op,System.Object[])">
            <summary>
            Output an SPIR-V statement with the specified opcode, ResultID and operands
            arguments.
            </summary>
            <param name="sink">
            The sink to which to output the statement.
            </param>
            <param name="resultId">
            A ResultId representing the result of this statement.
            </param>
            <param name="op">
            The opcode of the statement to output.
            </param>
            <param name="operands">
            A list of operand arguments to include in the output statement.
            </param>
        </member>
        <member name="T:SharpVk.Spirv.OpCode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpNop">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpUndef">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSourceContinued">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSource">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSourceExtension">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpName">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpMemberName">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpString">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpLine">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpExtension">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpExtInstImport">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpExtInst">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpMemoryModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpEntryPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpExecutionMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpCapability">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeVoid">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeBool">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeFloat">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeVector">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeMatrix">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeSampler">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeSampledImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeArray">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeRuntimeArray">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeStruct">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeOpaque">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypePointer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeFunction">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeDeviceEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeReserveId">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeQueue">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypePipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeForwardPointer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpConstantTrue">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpConstantFalse">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpConstant">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpConstantComposite">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpConstantSampler">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpConstantNull">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSpecConstantTrue">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSpecConstantFalse">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSpecConstant">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSpecConstantComposite">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSpecConstantOp">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFunction">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFunctionParameter">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFunctionEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFunctionCall">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpVariable">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageTexelPointer">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpLoad">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpStore">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpCopyMemory">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpCopyMemorySized">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAccessChain">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpInBoundsAccessChain">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpPtrAccessChain">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpArrayLength">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGenericPtrMemSemantics">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpInBoundsPtrAccessChain">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpDecorate">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpMemberDecorate">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpDecorationGroup">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupDecorate">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupMemberDecorate">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpVectorExtractDynamic">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpVectorInsertDynamic">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpVectorShuffle">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpCompositeConstruct">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpCompositeExtract">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpCompositeInsert">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpCopyObject">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTranspose">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSampledImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSampleImplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSampleExplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSampleDrefImplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSampleDrefExplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSampleProjImplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSampleProjExplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSampleProjDrefImplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSampleProjDrefExplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageFetch">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageGather">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageDrefGather">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageRead">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageWrite">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageQueryFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageQueryOrder">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageQuerySizeLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageQuerySize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageQueryLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageQueryLevels">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageQuerySamples">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpConvertFToU">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpConvertFToS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpConvertSToF">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpConvertUToF">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpUConvert">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSConvert">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFConvert">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpQuantizeToF16">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpConvertPtrToU">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSatConvertSToU">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSatConvertUToS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpConvertUToPtr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpPtrCastToGeneric">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGenericCastToPtr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGenericCastToPtrExplicit">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpBitcast">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSNegate">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFNegate">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpIAdd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFAdd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpISub">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFSub">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpIMul">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFMul">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpUDiv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSDiv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFDiv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpUMod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSRem">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSMod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFRem">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFMod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpVectorTimesScalar">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpMatrixTimesScalar">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpVectorTimesMatrix">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpMatrixTimesVector">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpMatrixTimesMatrix">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpOuterProduct">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpDot">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpIAddCarry">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpISubBorrow">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpUMulExtended">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSMulExtended">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAny">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAll">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpIsNan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpIsInf">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpIsFinite">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpIsNormal">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSignBitSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpLessOrGreater">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpOrdered">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpUnordered">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpLogicalEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpLogicalNotEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpLogicalOr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpLogicalAnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpLogicalNot">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSelect">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpIEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpINotEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpUGreaterThan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSGreaterThan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpUGreaterThanEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSGreaterThanEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpULessThan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSLessThan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpULessThanEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSLessThanEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFOrdEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFUnordEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFOrdNotEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFUnordNotEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFOrdLessThan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFUnordLessThan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFOrdGreaterThan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFUnordGreaterThan">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFOrdLessThanEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFUnordLessThanEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFOrdGreaterThanEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFUnordGreaterThanEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpShiftRightLogical">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpShiftRightArithmetic">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpShiftLeftLogical">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpBitwiseOr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpBitwiseXor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpBitwiseAnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpNot">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpBitFieldInsert">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpBitFieldSExtract">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpBitFieldUExtract">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpBitReverse">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpBitCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpDPdx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpDPdy">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFwidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpDPdxFine">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpDPdyFine">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFwidthFine">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpDPdxCoarse">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpDPdyCoarse">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpFwidthCoarse">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpEmitVertex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpEndPrimitive">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpEmitStreamVertex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpEndStreamPrimitive">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpControlBarrier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpMemoryBarrier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicLoad">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicStore">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicExchange">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicCompareExchange">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicCompareExchangeWeak">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicIIncrement">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicIDecrement">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicIAdd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicISub">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicSMin">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicUMin">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicSMax">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicUMax">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicAnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicOr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicXor">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpPhi">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpLoopMerge">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSelectionMerge">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpLabel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpBranch">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpBranchConditional">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSwitch">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpKill">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpReturn">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpReturnValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpUnreachable">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpLifetimeStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpLifetimeStop">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupAsyncCopy">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupWaitEvents">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupAll">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupAny">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupBroadcast">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupIAdd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupFAdd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupFMin">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupUMin">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupSMin">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupFMax">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupUMax">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupSMax">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpReadPipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpWritePipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpReservedReadPipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpReservedWritePipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpReserveReadPipePackets">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpReserveWritePipePackets">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpCommitReadPipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpCommitWritePipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpIsValidReserveId">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGetNumPipePackets">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGetMaxPipePackets">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupReserveReadPipePackets">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupReserveWritePipePackets">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupCommitReadPipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGroupCommitWritePipe">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpEnqueueMarker">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpEnqueueKernel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGetKernelNDrangeSubGroupCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGetKernelNDrangeMaxSubGroupSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGetKernelWorkGroupSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGetKernelPreferredWorkGroupSizeMultiple">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpRetainEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpReleaseEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpCreateUserEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpIsValidEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSetUserEventStatus">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpCaptureEventProfilingInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGetDefaultQueue">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpBuildNDRange">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSparseSampleImplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSparseSampleExplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSparseSampleDrefImplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSparseSampleDrefExplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSparseSampleProjImplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSparseSampleProjExplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSparseSampleProjDrefImplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSparseSampleProjDrefExplicitLod">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSparseFetch">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSparseGather">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSparseDrefGather">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSparseTexelsResident">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpNoLine">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicFlagTestAndSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpAtomicFlagClear">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpImageSparseRead">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSizeOf">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypePipeStorage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpConstantPipeStorage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpCreatePipeFromPipeStorage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGetKernelLocalSizeForSubgroupCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpGetKernelMaxNumSubgroups">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpTypeNamedBarrier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpNamedBarrierInitialize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpMemoryNamedBarrier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpModuleProcessed">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSubgroupBallotKHR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.OpSubgroupFirstInvocationKHR">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Spirv.OpCode.Op">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.Spirv.OpCode.Operands">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OpCode.Lookup">
            <summary>
            -
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.Operand">
            <summary>
            -
            </summary>
        </member>
        <member name="P:SharpVk.Spirv.Operand.Kind">
            <summary>
            -
            </summary>
        </member>
        <member name="P:SharpVk.Spirv.Operand.Quantifier">
            <summary>
            -
            </summary>
        </member>
        <member name="P:SharpVk.Spirv.Operand.Name">
            <summary>
            -
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.OperandKind">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.ImageOperands">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.FPFastMathMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.SelectionControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.LoopControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.FunctionControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.MemorySemantics">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.MemoryAccess">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.KernelProfilingInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.SourceLanguage">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.ExecutionModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.AddressingModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.MemoryModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.ExecutionMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.StorageClass">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.Dim">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.SamplerAddressingMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.SamplerFilterMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.ImageFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.ImageChannelOrder">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.ImageChannelDataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.FPRoundingMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.LinkageType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.AccessQualifier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.FunctionParameterAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.Decoration">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.BuiltIn">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.Scope">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.GroupOperation">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.KernelEnqueueFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.Capability">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.IdResultType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.IdResult">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.IdMemorySemantics">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.IdScope">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.IdRef">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.LiteralInteger">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.LiteralString">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.LiteralContextDependentNumber">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.LiteralExtInstInteger">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.LiteralSpecConstantOpInteger">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.PairLiteralIntegerIdRef">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.PairIdRefLiteralInteger">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.OperandKind.PairIdRefIdRef">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.Quantifier">
            <summary>
            -
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Quantifier.None">
            <summary>
            -
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Quantifier.Optional">
            <summary>
            -
            </summary>
        </member>
        <member name="F:SharpVk.Spirv.Quantifier.Multiple">
            <summary>
            -
            </summary>
        </member>
        <member name="T:SharpVk.Spirv.ResultId">
            <summary>
            Represents the unique ID value representing the result of an SPIR-V
            statement.
            </summary>
        </member>
        <member name="P:SharpVk.Spirv.ResultId.Id">
            <summary>
            The integer value of this ID value.
            </summary>
        </member>
        <member name="M:SharpVk.Spirv.ResultId.ToString">
            <summary>
            Returns a string value representing this ID value.
            </summary>
            <returns>
            A string value.
            </returns>
        </member>
        <member name="M:SharpVk.Spirv.ResultId.op_Implicit(System.Int32)~SharpVk.Spirv.ResultId">
            <summary>
            Implicit cast of an integer value to a ResultId.
            </summary>
            <param name="value">
            The unique integer value for this ID.
            </param>
        </member>
        <member name="T:SharpVk.Spirv.SpirvStatement">
            <summary>
            Represents a single line of a SPIR-V shader file.
            </summary>
        </member>
        <member name="M:SharpVk.Spirv.SpirvStatement.#ctor(SharpVk.Spirv.Op,System.Object[])">
            <summary>
            Create a new SPIR-V statement with the specified opcode &amp;
            operand arguments.
            </summary>
            <param name="op">
            The opcode for this statement.
            </param>
            <param name="operands">
            The arguments for any operands of the specified opcode.
            </param>
        </member>
        <member name="P:SharpVk.Spirv.SpirvStatement.Op">
            <summary>
            The Opcode for this statement.
            </summary>
        </member>
        <member name="P:SharpVk.Spirv.SpirvStatement.Operands">
            <summary>
            The operands arguments for this statement.
            </summary>
        </member>
        <member name="M:SharpVk.Spirv.SpirvStatement.ToString">
            <summary>
            Returns a string representation of this statement.
            </summary>
            <returns>
            A string representation of this statement.
            </returns>
        </member>
        <member name="M:SharpVk.Spirv.SpirvStatement.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal (by value) to this
            instance.
            </summary>
            <param name="obj">
            The object to which to compare.
            </param>
            <returns>
            True if the instances are equal by value; else false.
            </returns>
        </member>
        <member name="M:SharpVk.Spirv.SpirvStatement.GetHashCode">
            <summary>
            Returns a hashcode for the value of this instance.
            </summary>
            <returns>
            A 32-bit signed integer hash value.
            </returns>
        </member>
        <member name="M:SharpVk.Spirv.SpirvStatement.op_Equality(SharpVk.Spirv.SpirvStatement,SharpVk.Spirv.SpirvStatement)">
            <summary>
            Determines whether the specified objects are equal (by value).
            </summary>
            <param name="left">
            The first value to compare.
            </param>
            <param name="right">
            The second value to compare.
            </param>
            <returns>
            True if the instances are equal by value; else false.
            </returns>
        </member>
        <member name="M:SharpVk.Spirv.SpirvStatement.op_Inequality(SharpVk.Spirv.SpirvStatement,SharpVk.Spirv.SpirvStatement)">
            <summary>
            Determines whether the specified objects are not equal (by value).
            </summary>
            <param name="left">
            The first value to compare.
            </param>
            <param name="right">
            The second value to compare.
            </param>
            <returns>
            True if the instances are not equal by value; else false.
            </returns>
        </member>
        <member name="T:SharpVk.StencilFaceFlags">
            <summary>
            Bitmask specifying sets of stencil state for which to update the
            compare mask.
            </summary>
        </member>
        <member name="F:SharpVk.StencilFaceFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StencilFaceFlags.Front">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StencilFaceFlags.Back">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StencilFaceFlags.FrontAndBack">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.StencilOp">
            <summary>
            Stencil comparison function.
            </summary>
        </member>
        <member name="F:SharpVk.StencilOp.Keep">
            <summary>
            VK_STENCIL_OP_KEEP keeps the current value.
            </summary>
        </member>
        <member name="F:SharpVk.StencilOp.Zero">
            <summary>
            VK_STENCIL_OP_ZERO sets the value to 0.
            </summary>
        </member>
        <member name="F:SharpVk.StencilOp.Replace">
            <summary>
            VK_STENCIL_OP_REPLACE sets the value to reference.
            </summary>
        </member>
        <member name="F:SharpVk.StencilOp.IncrementAndClamp">
            <summary>
            VK_STENCIL_OP_INCREMENT_AND_CLAMP increments the current value and
            clamps to the maximum representable unsigned value.
            </summary>
        </member>
        <member name="F:SharpVk.StencilOp.DecrementAndClamp">
            <summary>
            VK_STENCIL_OP_DECREMENT_AND_CLAMP decrements the current value and
            clamps to 0.
            </summary>
        </member>
        <member name="F:SharpVk.StencilOp.Invert">
            <summary>
            VK_STENCIL_OP_INVERT bitwise-inverts the current value.
            </summary>
        </member>
        <member name="F:SharpVk.StencilOp.IncrementAndWrap">
            <summary>
            VK_STENCIL_OP_INCREMENT_AND_WRAP increments the current value and
            wraps to 0 when the maximum value would have been exceeded.
            </summary>
        </member>
        <member name="F:SharpVk.StencilOp.DecrementAndWrap">
            <summary>
            VK_STENCIL_OP_DECREMENT_AND_WRAP decrements the current value and
            wraps to the maximum possible value when the value would go below
            0.
            </summary>
        </member>
        <member name="T:SharpVk.StencilOpState">
            <summary>
            Structure specifying stencil operation state.
            </summary>
        </member>
        <member name="M:SharpVk.StencilOpState.#ctor(SharpVk.StencilOp,SharpVk.StencilOp,SharpVk.StencilOp,SharpVk.CompareOp,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StencilOpState.FailOp">
            <summary>
            The action performed on samples that fail the stencil test.
            </summary>
        </member>
        <member name="F:SharpVk.StencilOpState.PassOp">
            <summary>
            The action performed on samples that pass both the depth and
            stencil tests.
            </summary>
        </member>
        <member name="F:SharpVk.StencilOpState.DepthFailOp">
            <summary>
            The action performed on samples that pass the stencil test and fail
            the depth test.
            </summary>
        </member>
        <member name="F:SharpVk.StencilOpState.CompareOp">
            <summary>
            The comparison operator used in the stencil test.
            </summary>
        </member>
        <member name="F:SharpVk.StencilOpState.CompareMask">
            <summary>
            Selects the bits of the unsigned integer stencil values
            participating in the stencil test.
            </summary>
        </member>
        <member name="F:SharpVk.StencilOpState.WriteMask">
            <summary>
            Selects the bits of the unsigned integer stencil values updated by
            the stencil test in the stencil framebuffer attachment.
            </summary>
        </member>
        <member name="F:SharpVk.StencilOpState.Reference">
            <summary>
            An integer reference value that is used in the unsigned stencil
            comparison.
            </summary>
        </member>
        <member name="T:SharpVk.SecurityAttributes">
            <summary>
            -
            </summary>
        </member>
        <member name="F:SharpVk.SecurityAttributes.Length">
            <summary>
            -
            </summary>
        </member>
        <member name="F:SharpVk.SecurityAttributes.SecurityDescriptor">
            <summary>
            -
            </summary>
        </member>
        <member name="F:SharpVk.SecurityAttributes.InheritHandle">
            <summary>
            -
            </summary>
        </member>
        <member name="T:SharpVk.SampleMask">
            <summary>
            -
            </summary>
        </member>
        <member name="M:SharpVk.SampleMask.op_Implicit(System.UInt32)~SharpVk.SampleMask">
            <summary>
            -
            </summary>
        </member>
        <member name="M:SharpVk.SampleMask.op_Implicit(SharpVk.SampleMask)~System.UInt32">
            <summary>
            -
            </summary>
        </member>
        <member name="M:SharpVk.SampleMask.ToString">
            <summary>
            -
            </summary>
        </member>
        <member name="T:SharpVk.StructureType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ApplicationInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.InstanceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DeviceQueueCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DeviceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SubmitInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.MemoryAllocateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.MappedMemoryRange">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.BindSparseInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.FenceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SemaphoreCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.EventCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.QueryPoolCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.BufferCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.BufferViewCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ImageCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ImageViewCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ShaderModuleCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineCacheCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineShaderStageCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineVertexInputStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineInputAssemblyStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineTessellationStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineViewportStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineRasterizationStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineMultisampleStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineDepthStencilStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineColorBlendStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineDynamicStateCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.GraphicsPipelineCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ComputePipelineCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineLayoutCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SamplerCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DescriptorSetLayoutCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DescriptorPoolCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DescriptorSetAllocateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.WriteDescriptorSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.CopyDescriptorSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.FramebufferCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.RenderPassCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.CommandPoolCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.CommandBufferAllocateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.CommandBufferInheritanceInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.CommandBufferBeginInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.RenderPassBeginInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.BufferMemoryBarrier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ImageMemoryBarrier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.MemoryBarrier">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.LoaderInstanceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.LoaderDeviceCreateInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SwapchainCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PresentInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DisplayModeCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DisplaySurfaceCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DisplayPresentInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.XlibSurfaceCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.XcbSurfaceCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.WaylandSurfaceCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.MirSurfaceCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.AndroidSurfaceCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.Win32SurfaceCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DebugReportCallbackCreateInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineRasterizationStateRasterizationOrderAmd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DebugMarkerObjectNameInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DebugMarkerObjectTagInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DebugMarkerMarkerInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DedicatedAllocationImageCreateInfoNv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DedicatedAllocationBufferCreateInfoNv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DedicatedAllocationMemoryAllocateInfoNv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.TextureLodGatherFormatPropertiesAmd">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.RenderPassMultiviewCreateInfoKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceMultiviewFeaturesKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceMultiviewPropertiesKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ExternalMemoryImageCreateInfoNv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ExportMemoryAllocateInfoNv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ImportMemoryWin32HandleInfoNv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ExportMemoryWin32HandleInfoNv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.Win32KeyedMutexAcquireReleaseInfoNv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceFeatures2Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceProperties2Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.FormatProperties2Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ImageFormatProperties2Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceImageFormatInfo2Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.QueueFamilyProperties2Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceMemoryProperties2Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SparseImageFormatProperties2Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceSparseImageFormatInfo2Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.MemoryAllocateFlagsInfoKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DeviceGroupRenderPassBeginInfoKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DeviceGroupCommandBufferBeginInfoKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DeviceGroupSubmitInfoKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DeviceGroupBindSparseInfoKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.AcquireNextImageInfoKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.BindBufferMemoryDeviceGroupInfoKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.BindImageMemoryDeviceGroupInfoKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DeviceGroupPresentCapabilitiesKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ImageSwapchainCreateInfoKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.BindImageMemorySwapchainInfoKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DeviceGroupPresentInfoKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DeviceGroupSwapchainCreateInfoKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ValidationFlagsExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ViSurfaceCreateInfoNn">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceGroupPropertiesKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DeviceGroupDeviceCreateInfoKhx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceExternalImageFormatInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ExternalImageFormatPropertiesKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceExternalBufferInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ExternalBufferPropertiesKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceIdPropertiesKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ExternalMemoryBufferCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ExternalMemoryImageCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ExportMemoryAllocateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ImportMemoryWin32HandleInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ExportMemoryWin32HandleInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.MemoryWin32HandlePropertiesKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.MemoryGetWin32HandleInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ImportMemoryFileDescriptorInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.MemoryFileDescriptorPropertiesKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.MemoryGetFileDescriptorInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.Win32KeyedMutexAcquireReleaseInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceExternalSemaphoreInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ExternalSemaphorePropertiesKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ExportSemaphoreCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ImportSemaphoreWin32HandleInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ExportSemaphoreWin32HandleInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.D3d12FenceSubmitInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SemaphoreGetWin32HandleInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ImportSemaphoreFileDescriptorInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SemaphoreGetFileDescriptorInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDevicePushDescriptorPropertiesKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDevice16bitStorageFeaturesKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PresentRegionsKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DescriptorUpdateTemplateCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ObjectTableCreateInfoNvx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.IndirectCommandsLayoutCreateInfoNvx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.CommandProcessCommandsInfoNvx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.CommandReserveSpaceForCommandsInfoNvx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DeviceGeneratedCommandsLimitsNvx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DeviceGeneratedCommandsFeaturesNvx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineViewportWScalingStateCreateInfoNv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SurfaceCapabilities2Ext">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DisplayPowerInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DeviceEventInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.DisplayEventInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SwapchainCounterCreateInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PresentTimesInfoGoogle">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceMultiviewPerViewAttributesPropertiesNvx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineViewportSwizzleStateCreateInfoNv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceDiscardRectanglePropertiesExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineDiscardRectangleStateCreateInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.HdrMetadataExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SharedPresentSurfaceCapabilitiesKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceExternalFenceInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ExternalFencePropertiesKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ExportFenceCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ImportFenceWin32HandleInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ExportFenceWin32HandleInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.FenceGetWin32HandleInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ImportFenceFileDescriptorInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.FenceGetFileDescriptorInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDevicePointClippingPropertiesKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.RenderPassInputAttachmentAspectCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ImageViewUsageCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineTessellationDomainOriginStateCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceSurfaceInfo2Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SurfaceCapabilities2Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SurfaceFormat2Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceVariablePointerFeaturesKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.IosSurfaceCreateInfoMvk">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.MacosSurfaceCreateInfoMvk">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.MemoryDedicatedRequirementsKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.MemoryDedicatedAllocateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceSamplerFilterMinmaxPropertiesExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SamplerReductionModeCreateInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SampleLocationsInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.RenderPassSampleLocationsBeginInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineSampleLocationsStateCreateInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceSampleLocationsPropertiesExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.MultisamplePropertiesExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.BufferMemoryRequirementsInfo2Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ImageMemoryRequirementsInfo2Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ImageSparseMemoryRequirementsInfo2Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.MemoryRequirements2Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SparseImageMemoryRequirements2Khr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ImageFormatListCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceBlendOperationAdvancedFeaturesExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceBlendOperationAdvancedPropertiesExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineColorBlendAdvancedStateCreateInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineCoverageToColorStateCreateInfoNv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PipelineCoverageModulationStateCreateInfoNv">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SamplerYcbcrConversionCreateInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SamplerYcbcrConversionInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.BindImagePlaneMemoryInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ImagePlaneMemoryRequirementsInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.PhysicalDeviceSamplerYcbcrConversionFeaturesKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.SamplerYcbcrConversionImageFormatPropertiesKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.BindBufferMemoryInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.BindImageMemoryInfoKhr">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ValidationCacheCreateInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.StructureType.ShaderModuleValidationCacheCreateInfoExt">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SubmitInfo">
            <summary>
            Structure specifying a queue submit operation.
            </summary>
        </member>
        <member name="P:SharpVk.SubmitInfo.WaitSemaphores">
            <summary>
            An array of semaphores upon which to wait before the command
            buffers for this batch begin execution. If semaphores to wait on
            are provided, they define a semaphore wait operation.
            </summary>
        </member>
        <member name="P:SharpVk.SubmitInfo.WaitDestinationStageMask">
            <summary>
            An array of pipeline stages at which each corresponding semaphore
            wait will occur.
            </summary>
        </member>
        <member name="P:SharpVk.SubmitInfo.CommandBuffers">
            <summary>
            An array of command buffers to execute in the batch.
            </summary>
        </member>
        <member name="P:SharpVk.SubmitInfo.SignalSemaphores">
            <summary>
            An array of semaphores which will be signaled when the command
            buffers for this batch have completed execution. If semaphores to
            be signaled are provided, they define a semaphore signal operation.
            </summary>
        </member>
        <member name="M:SharpVk.SubmitInfo.MarshalTo(SharpVk.Interop.SubmitInfo*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SubpassContents">
            <summary>
            Specify how commands in the first subpass of a render pass are
            provided.
            </summary>
        </member>
        <member name="F:SharpVk.SubpassContents.Inline">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SubpassContents.SecondaryCommandBuffers">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SubpassDependency">
            <summary>
            Structure specifying a subpass dependency.
            </summary>
        </member>
        <member name="M:SharpVk.SubpassDependency.#ctor(System.UInt32,System.UInt32,SharpVk.PipelineStageFlags,SharpVk.PipelineStageFlags,SharpVk.AccessFlags,SharpVk.AccessFlags,SharpVk.DependencyFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SubpassDependency.SourceSubpass">
            <summary>
            The subpass index of the first subpass in the dependency, or
            VK_SUBPASS_EXTERNAL.
            </summary>
        </member>
        <member name="F:SharpVk.SubpassDependency.DestinationSubpass">
            <summary>
            The subpass index of the second subpass in the dependency, or
            VK_SUBPASS_EXTERNAL.
            </summary>
        </member>
        <member name="F:SharpVk.SubpassDependency.SourceStageMask">
            <summary>
            srcStageMask defines a source stage mask.
            </summary>
        </member>
        <member name="F:SharpVk.SubpassDependency.DestinationStageMask">
            <summary>
            dstStageMask defines a destination stage mask.
            </summary>
        </member>
        <member name="F:SharpVk.SubpassDependency.SourceAccessMask">
            <summary>
            srcAccessMask defines a source access mask.
            </summary>
        </member>
        <member name="F:SharpVk.SubpassDependency.DestinationAccessMask">
            <summary>
            dstAccessMask defines a destination access mask.
            </summary>
        </member>
        <member name="F:SharpVk.SubpassDependency.DependencyFlags">
            <summary>
            A bitmask of DependencyFlagBits.
            </summary>
        </member>
        <member name="T:SharpVk.SubpassDescription">
            <summary>
            Structure specifying a subpass description.
            </summary>
        </member>
        <member name="P:SharpVk.SubpassDescription.Flags">
            <summary>
            A bitmask indicating usage of the subpass. Bits which can be set
            include: + --
            </summary>
        </member>
        <member name="P:SharpVk.SubpassDescription.PipelineBindPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SubpassDescription.InputAttachments">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SubpassDescription.ColorAttachments">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SubpassDescription.ResolveAttachments">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SubpassDescription.DepthStencilAttachment">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpVk.SubpassDescription.PreserveAttachments">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVk.SubpassDescription.MarshalTo(SharpVk.Interop.SubpassDescription*)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SubpassDescriptionFlags">
            <summary>
            Bitmask specifying usage of a subpass.
            </summary>
        </member>
        <member name="F:SharpVk.SubpassDescriptionFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SubpassDescriptionFlags.PerViewAttributesBitNvx">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SubpassDescriptionFlags.PerViewPositionXOnlyBitNvx">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.SubresourceLayout">
            <summary>
            Structure specifying subresource layout.
            </summary>
        </member>
        <member name="M:SharpVk.SubresourceLayout.#ctor(SharpVk.DeviceSize,SharpVk.DeviceSize,SharpVk.DeviceSize,SharpVk.DeviceSize,SharpVk.DeviceSize)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.SubresourceLayout.Offset">
            <summary>
            The byte offset from the start of the image where the image
            subresource begins.
            </summary>
        </member>
        <member name="F:SharpVk.SubresourceLayout.Size">
            <summary>
            The size in bytes of the image subresource. size includes any extra
            memory that is required based on rowPitch.
            </summary>
        </member>
        <member name="F:SharpVk.SubresourceLayout.RowPitch">
            <summary>
            rowPitch describes the number of bytes between each row of texels
            in an image.
            </summary>
        </member>
        <member name="F:SharpVk.SubresourceLayout.ArrayPitch">
            <summary>
            arrayPitch describes the number of bytes between each array layer
            of an image.
            </summary>
        </member>
        <member name="F:SharpVk.SubresourceLayout.DepthPitch">
            <summary>
            depthPitch describes the number of bytes between each slice of 3D
            image.
            </summary>
        </member>
        <member name="T:SharpVk.SystemAllocationScope">
            <summary>
            Allocation scope.
            </summary>
        </member>
        <member name="F:SharpVk.SystemAllocationScope.Command">
            <summary>
            VK_SYSTEM_ALLOCATION_SCOPE_COMMAND - The allocation is scoped to
            the duration of the Vulkan command.
            </summary>
        </member>
        <member name="F:SharpVk.SystemAllocationScope.Object">
            <summary>
            VK_SYSTEM_ALLOCATION_SCOPE_OBJECT - The allocation is scoped to the
            lifetime of the Vulkan object that is being created or used.
            </summary>
        </member>
        <member name="F:SharpVk.SystemAllocationScope.Cache">
            <summary>
            VK_SYSTEM_ALLOCATION_SCOPE_CACHE - The allocation is scoped to the
            lifetime of a PipelineCache object.
            </summary>
        </member>
        <member name="F:SharpVk.SystemAllocationScope.Device">
            <summary>
            VK_SYSTEM_ALLOCATION_SCOPE_DEVICE - The allocation is scoped to the
            lifetime of the Vulkan device.
            </summary>
        </member>
        <member name="F:SharpVk.SystemAllocationScope.Instance">
            <summary>
            VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE - The allocation is scoped to
            the lifetime of the Vulkan instance.
            </summary>
        </member>
        <member name="T:SharpVk.Version">
            <summary>
            Represents a Semantic Version number encoded as a UInt32
            </summary>
        </member>
        <member name="M:SharpVk.Version.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new version number with the specified values.
            </summary>
            <param name="major">
            The Major version number.
            </param>
            <param name="minor">
            The Minor version number.
            </param>
            <param name="patch">
            The Patch version number.
            </param>
        </member>
        <member name="P:SharpVk.Version.Major">
            <summary>
            The Major version number.
            </summary>
        </member>
        <member name="P:SharpVk.Version.Minor">
            <summary>
            The Minor version number.
            </summary>
        </member>
        <member name="P:SharpVk.Version.Patch">
            <summary>
            The Patch version number.
            </summary>
        </member>
        <member name="M:SharpVk.Version.op_Implicit(System.UInt32)~SharpVk.Version">
            <summary>
            Implicit conversion of a UInt32 value to a decoded Version number.
            </summary>
            <param name="value">
            A semantic version number encoded as a UInt32.
            </param>
        </member>
        <member name="M:SharpVk.Version.op_Explicit(SharpVk.Version)~System.UInt32">
            <summary>
            Explicit conversion of a Version number to an encoded UInt32.
            </summary>
            <param name="size">
            The version number value to encode.
            </param>
        </member>
        <member name="M:SharpVk.Version.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns>
            A version string of the format "{Major}.{Minor}.{Patch}".
            </returns>
        </member>
        <member name="T:SharpVk.VertexInputAttributeDescription">
            <summary>
            Structure specifying vertex input attribute description.
            </summary>
        </member>
        <member name="M:SharpVk.VertexInputAttributeDescription.#ctor(System.UInt32,System.UInt32,SharpVk.Format,System.UInt32)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.VertexInputAttributeDescription.Location">
            <summary>
            The shader binding location number for this attribute.
            </summary>
        </member>
        <member name="F:SharpVk.VertexInputAttributeDescription.Binding">
            <summary>
            The binding number which this attribute takes its data from.
            </summary>
        </member>
        <member name="F:SharpVk.VertexInputAttributeDescription.Format">
            <summary>
            The size and type of the vertex attribute data.
            </summary>
        </member>
        <member name="F:SharpVk.VertexInputAttributeDescription.Offset">
            <summary>
            A byte offset of this attribute relative to the start of an element
            in the vertex input binding.
            </summary>
        </member>
        <member name="T:SharpVk.VertexInputBindingDescription">
            <summary>
            Structure specifying vertex input binding description.
            </summary>
        </member>
        <member name="M:SharpVk.VertexInputBindingDescription.#ctor(System.UInt32,System.UInt32,SharpVk.VertexInputRate)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.VertexInputBindingDescription.Binding">
            <summary>
            The binding number that this structure describes.
            </summary>
        </member>
        <member name="F:SharpVk.VertexInputBindingDescription.Stride">
            <summary>
            The distance in bytes between two consecutive elements within the
            buffer.
            </summary>
        </member>
        <member name="F:SharpVk.VertexInputBindingDescription.InputRate">
            <summary>
            Specifies whether vertex attribute addressing is a function of the
            vertex index or of the instance index. Possible values include: +
            --
            </summary>
        </member>
        <member name="T:SharpVk.VertexInputRate">
            <summary>
            Specify rate at which vertex attributes are pulled from buffers.
            </summary>
        </member>
        <member name="F:SharpVk.VertexInputRate.Vertex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.VertexInputRate.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.Viewport">
            <summary>
            Structure specifying a viewport.
            </summary>
        </member>
        <member name="M:SharpVk.Viewport.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Viewport.X">
            <summary>
            x and y are the viewport's upper left corner [eq]#(x,y)#.
            </summary>
        </member>
        <member name="F:SharpVk.Viewport.Y">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Viewport.Width">
            <summary>
            width and height are the viewport's width and height, respectively.
            </summary>
        </member>
        <member name="F:SharpVk.Viewport.Height">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpVk.Viewport.MinDepth">
            <summary>
            minDepth and maxDepth are the depth range for the viewport. It is
            valid for minDepth to be greater than or equal to maxDepth.
            </summary>
        </member>
        <member name="F:SharpVk.Viewport.MaxDepth">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.VoidFunctionDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpVk.WriteDescriptorSet">
            <summary>
            Structure specifying the parameters of a descriptor set write
            operation.
            </summary>
        </member>
        <member name="P:SharpVk.WriteDescriptorSet.DestinationSet">
            <summary>
            The destination descriptor set to update.
            </summary>
        </member>
        <member name="P:SharpVk.WriteDescriptorSet.DestinationBinding">
            <summary>
            The descriptor binding within that set.
            </summary>
        </member>
        <member name="P:SharpVk.WriteDescriptorSet.DestinationArrayElement">
            <summary>
            The starting element in that array.
            </summary>
        </member>
        <member name="P:SharpVk.WriteDescriptorSet.DescriptorCount">
            <summary>
            The number of descriptors to update (the number of elements in
            pImageInfo, pBufferInfo, or pTexelBufferView).
            </summary>
        </member>
        <member name="P:SharpVk.WriteDescriptorSet.DescriptorType">
            <summary>
            A DescriptorType specifying the type of each descriptor in
            pImageInfo, pBufferInfo, or pTexelBufferView, as described below.
            It must be the same type as that specified in
            DescriptorSetLayoutBinding for dstSet at dstBinding. The type of
            the descriptor also controls which array the descriptors are taken
            from.
            </summary>
        </member>
        <member name="P:SharpVk.WriteDescriptorSet.ImageInfo">
            <summary>
            An array of DescriptorImageInfo structures or is ignored, as
            described below.
            </summary>
        </member>
        <member name="P:SharpVk.WriteDescriptorSet.BufferInfo">
            <summary>
            An array of DescriptorBufferInfo structures or is ignored, as
            described below.
            </summary>
        </member>
        <member name="P:SharpVk.WriteDescriptorSet.TexelBufferView">
            <summary>
            An array of BufferView handles as described in the Buffer Views
            section or is ignored, as described below.
            </summary>
        </member>
        <member name="M:SharpVk.WriteDescriptorSet.MarshalTo(SharpVk.Interop.WriteDescriptorSet*)">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
